{"version":3,"sources":["scriptMap.js"],"names":["map","L","setView","tileLayer","maxZoom","addTo","communesData","ventes","totalVentes","clickedCommunes","clickedSections","historyDiv","document","getElementById","selectedCommunesCodinsee","selectedSectionsCodinsee","communesLayer","sectionsLayer","totalSecteur","select","comsecTDiv","updateTotalVentes","communeCode","decrement","ventesDansCetteCommune","flatMap","vente","venteCommunes","JSON","parse","l_codinsee","replace","venteSections","l_section","commune","index","id","section","filter","venteParCommune","idnatmut","codtypbien","startsWith","anneemut","Math","round","length","textContent","addEventListener","inputContainer","querySelector","innerHTML","communesInput","createElement","type","value","nom","code","join","readOnly","appendChild","sectionsInput","forEach","selectedCommune","selectedSection","sectionCode","substring","sectionID","ventesDansCetteSection","venteParSection","region","eachLayer","layer","removeLayer","fetch","then","response","json","departements","geoJSON","onEachFeature","feature","on","departementCode","properties","data","communes","filteredCommunes","filterCommunes","click","communeNom","checked","push","setStyle","fillColor","alreadyClicked","some","clickedCommune","_leaflet_id","communeElement","dataset","removeChild","sections","filteredSections","filterSections","features","find","clickedSection"],"mappings":"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","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\nvar comsecTDiv = document.getElementById('comsecT');\n\n// Ajout de la fonction pour mettre à jour le total\nfunction updateTotalVentes(communeCode, decrement = false) {\n  var ventesDansCetteCommune = ventes.flatMap(vente => {\n    var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n    var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n      \n    return venteCommunes.map((commune, index) => ({\n      id: commune,\n      section: venteSections[index],\n      vente: vente\n    }));\n  }).filter(venteParCommune => \n    venteParCommune.id === communeCode && \n    (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n    (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n    venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n  );\n\n  if (decrement) {\n    totalVentes -= Math.round(ventesDansCetteCommune.length / 4);\n  } else {\n    totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n  }\n\n  document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n}\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            updateTotalVentes(communeCode);\n                      \n                            var communeElement = document.createElement('div');\n                            communeElement.textContent = communeNom;\n                            communeElement.dataset.communeCode = communeCode;  // Stocker le code de la commune pour le retrouver lors de la suppression\n                            communeElement.addEventListener('click', function () {\n                              updateTotalVentes(communeCode, true);  // Mettre à jour le total en décrémentant\n                              comsecTDiv.removeChild(communeElement);  // Supprimer la commune de la div\n                            });\n                            comsecTDiv.appendChild(communeElement);\n                      \n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"],"file":"scriptMap.dev.js"}