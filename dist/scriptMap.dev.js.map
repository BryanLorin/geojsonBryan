{"version":3,"sources":["scriptMap.js"],"names":["map","L","setView","tileLayer","maxZoom","addTo","communesData","ventes","totalVentes","clickedCommunes","clickedSections","historyDiv","document","getElementById","selectedCommunesCodinsee","selectedSectionsCodinsee","communesLayer","sectionsLayer","totalSecteur","select","addEventListener","length","textContent","inputContainer","querySelector","innerHTML","communesInput","createElement","type","value","commune","nom","code","join","readOnly","appendChild","sectionsInput","section","forEach","selectedCommune","ventesDansCetteCommune","flatMap","vente","venteCommunes","JSON","parse","l_codinsee","replace","venteSections","l_section","index","id","filter","venteParCommune","idnatmut","codtypbien","startsWith","anneemut","Math","round","selectedSection","sectionCode","substring","sectionID","ventesDansCetteSection","venteParSection","region","eachLayer","layer","removeLayer","fetch","then","response","json","departements","geoJSON","onEachFeature","feature","on","departementCode","properties","data","communes","filteredCommunes","filterCommunes","click","communeCode","communeNom","checked","some","comm","push","setStyle","fillColor","updateComsecT","alreadyClicked","clickedCommune","_leaflet_id","sections","filteredSections","filterSections","features","find","sec","clickedSection","comsecT","communeDiv","classList","add","sectionDiv"],"mappings":"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","sourcesContent":["\n    var map = L.map('map').setView([45.7, 3.15], 7);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n    }).addTo(map);\n\n    var communesData;\n    var ventes;\n    var totalVentes = 0;\n    var clickedCommunes = [];\n    var clickedSections = []; // Ajout du tableau pour stocker les sections cliquées\n    var historyDiv = document.getElementById('Historique'); // Ajout de la div Historique\n    var selectedCommunesCodinsee = [];\n    var selectedSectionsCodinsee = [];\n    var communesLayer;\n    var sectionsLayer;\n    var totalSecteur = 0;\n    var select = document.getElementById('region');\n\n    document.getElementById('Count').addEventListener('click', function () {\n      if (clickedCommunes.length === 0) {\n        totalVentes = 0;\n        document.getElementById('NumberSell').textContent = 'Total: ' + totalVentes;\n      }\n    });\n\n    document.getElementById('Export').addEventListener('click', function () {\n      // Récupérer le conteneur d'input\n      var inputContainer = document.querySelector('.pop-up-form .input-container');\n\n      // Supprimer les anciens inputs\n      inputContainer.innerHTML = '';\n\n      // Créer un nouvel input pour les communes sélectionnées\n      var communesInput = document.createElement('input');\n      communesInput.type = 'text';\n      communesInput.value = selectedCommunesCodinsee\n        .map((commune) => `${commune.nom}: ${commune.code}`)\n        .join(', ');\n      communesInput.readOnly = true; // Rendre l'input en lecture seule\n      inputContainer.appendChild(communesInput);\n\n      // Créer un nouvel input pour les sections sélectionnées\n      var sectionsInput = document.createElement('input');\n      sectionsInput.type = 'text';\n      sectionsInput.value = selectedSectionsCodinsee\n        .map((section) => `${section.nom}: ${section.code}`)\n        .join(', ');\n      sectionsInput.readOnly = true; // Rendre l'input en lecture seule\n      inputContainer.appendChild(sectionsInput);\n\n      // Calculate totalVentes for selected communes\n      selectedCommunesCodinsee.forEach((selectedCommune) => {\n        var ventesDansCetteCommune = ventes\n          .flatMap((vente) => {\n            var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, '\"'));\n            var venteSections = JSON.parse(vente.l_section.replace(/'/g, '\"'));\n\n            return venteCommunes.map((commune, index) => ({\n              id: commune,\n              section: venteSections[index],\n              vente: vente,\n            }));\n          })\n          .filter(\n            (venteParCommune) =>\n              venteParCommune.id === selectedCommune.code &&\n              (venteParCommune.vente.idnatmut === '1' ||\n                venteParCommune.vente.idnatmut === '4') &&\n              (venteParCommune.vente.codtypbien.startsWith('1') &&\n                venteParCommune.vente.codtypbien !== '14' ||\n                venteParCommune.vente.codtypbien === '21') &&\n              venteParCommune.vente.anneemut >= '2017' &&\n              venteParCommune.vente.anneemut <= '2020'\n          );\n\n        totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n      });\n\n      // Calculate totalVentes for selected sections\n      selectedSectionsCodinsee.forEach((selectedSection) => {\n        var sectionCode = selectedSection.code.substring(0, 5);\n        var sectionID =\n          sectionCode + '; ' + selectedSection.code.substring(7);\n\n        var ventesDansCetteSection = ventes\n          .flatMap((vente) => {\n            var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, '\"'));\n            var venteSections = JSON.parse(vente.l_section.replace(/'/g, '\"'));\n\n            return venteCommunes.map((commune, index) => ({\n              id: commune + '000' + venteSections[index],\n              vente: vente,\n            }));\n          })\n          .filter(\n            (venteParSection) =>\n              venteParSection.id === sectionID &&\n              (venteParSection.vente.idnatmut === '1' ||\n                venteParSection.vente.idnatmut === '4') &&\n              (venteParSection.vente.codtypbien.startsWith('1') &&\n                venteParSection.vente.codtypbien !== '14' ||\n                venteParSection.vente.codtypbien === '21') &&\n              venteParSection.vente.anneemut >= '2017' &&\n              venteParSection.vente.anneemut <= '2020'\n          );\n\n        totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n      });\n\n      // Display the total sales\n      document.getElementById('TotalSecteur').value = totalSecteur;\n    });\n\n    select.addEventListener('change', function () {\n      var region = this.value;\n      map.eachLayer(function (layer) {\n        map.removeLayer(layer);\n      });\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19,\n      }).addTo(map);\n\n      fetch(\n        `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`\n      )\n        .then(function (response) {\n          return response.json();\n        })\n        .then(function (departements) {\n          L.geoJSON(departements, {\n            onEachFeature: function (feature, layer) {\n              layer.on('click', function () {\n                var departementCode = feature.properties.code;\n\n                fetch(\n                  `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`\n                )\n                  .then((response) => response.json())\n                  .then((data) => {\n                    ventes = data;\n                  });\n\n                fetch(\n                  `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`\n                )\n                  .then(function (response) {\n                    return response.json();\n                  })\n                  .then(function (communes) {\n                    communesData = communes;\n                    var filteredCommunes = filterCommunes(\n                      departementCode,\n                      communes\n                    );\n\n                    if (communesLayer) {\n                      map.removeLayer(communesLayer);\n                    }\n\n                    communesLayer = L.geoJSON(filteredCommunes, {\n                      onEachFeature: function (feature, layer) {\n                        layer.on({\n                          click: function () {\n                            var communeCode = feature.properties.code;\n                            var communeNom = feature.properties.nom;\n                            historyDiv.textContent = 'Nom: ' + communeNom;\n\n                            // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                            if (document.getElementById('Create').checked) {\n                              // Créer un objet avec le code et le nom de la commune\n                              var commune = {\n                                code: communeCode,\n                                nom: feature.properties.nom, // Assumer que 'nom' est la propriété contenant le nom de la commune\n                              };\n                              if (!selectedCommunesCodinsee.some(comm => comm.code === communeCode)) {\n                                selectedCommunesCodinsee.push(commune);\n                                layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                              } else {\n                                // Si la commune est déjà sélectionnée, la supprimer\n                                selectedCommunesCodinsee = selectedCommunesCodinsee.filter(comm => comm.code !== communeCode);\n                                layer.setStyle({ fillColor: '' }); // Rétablir la couleur originale de la commune\n                              }\n                              updateComsecT();\n                            }\n\n                            // Vérifier si la commune a déjà été cliquée\n                            var alreadyClicked = clickedCommunes.some(\n                              (clickedCommune) =>\n                                clickedCommune._leaflet_id === layer._leaflet_id\n                            );\n\n                            if (alreadyClicked) {\n                              return; // Si la commune a déjà été cliquée, ne rien faire\n                            }\n\n                            var ventesDansCetteCommune = ventes\n                              .flatMap((vente) => {\n                                var venteCommunes = JSON.parse(\n                                  vente.l_codinsee.replace(/'/g, '\"')\n                                );\n                                var venteSections = JSON.parse(\n                                  vente.l_section.replace(/'/g, '\"')\n                                );\n\n                                return venteCommunes.map((commune, index) => ({\n                                  id: commune,\n                                  section: venteSections[index],\n                                  vente: vente,\n                                }));\n                              })\n                              .filter(\n                                (venteParCommune) =>\n                                  venteParCommune.id === communeCode &&\n                                  (venteParCommune.vente.idnatmut === '1' ||\n                                    venteParCommune.vente.idnatmut === '4') &&\n                                  (venteParCommune.vente.codtypbien.startsWith(\n                                    '1'\n                                  ) &&\n                                    venteParCommune.vente.codtypbien !== '14' ||\n                                    venteParCommune.vente.codtypbien === '21') &&\n                                  venteParCommune.vente.anneemut >= '2017' &&\n                                  venteParCommune.vente.anneemut <= '2020'\n                              );\n\n                            if (document.getElementById('Communes').checked) {\n                              if (document.getElementById('Count').checked) {\n                                totalVentes += Math.round(\n                                  ventesDansCetteCommune.length / 4\n                                );\n                                document.getElementById('NumberSell').textContent =\n                                  'Total: ' + totalVentes;\n                                layer.setStyle({ fillColor: 'red' });\n                                clickedCommunes.push(layer);\n                              } else {\n                                totalVentes = Math.round(\n                                  ventesDansCetteCommune.length / 4\n                                );\n                                document.getElementById('NumberSell').textContent =\n                                  'Total: ' + totalVentes;\n                              }\n                            }\n\n                            if (document.getElementById('Sections').checked) {\n                              fetch(\n                                `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`\n                              )\n                                .then(function (response) {\n                                  return response.json();\n                                })\n                                .then(function (sections) {\n                                  var filteredSections = filterSections(\n                                    communeCode,\n                                    sections\n                                  );\n\n                                  if (sectionsLayer) {\n                                    map.removeLayer(sectionsLayer);\n                                  }\n\n                                  sectionsLayer = L.geoJSON(filteredSections, {\n                                    onEachFeature: function (feature, layer) {\n                                      layer.on('click', function () {\n                                        var sectionID = feature.properties.id;\n\n                                        // Extraire le l_codinsee et l_section de l'ID de la section\n                                        var l_codinsee = sectionID.substring(\n                                          0,\n                                          5\n                                        );\n                                        var l_section = sectionID.substring(\n                                          8\n                                        );\n\n                                        if (\n                                          document.getElementById('Create')\n                                            .checked\n                                        ) {\n                                          var section = {\n                                            code:\n                                              l_codinsee +\n                                              '; ' +\n                                              l_section,\n                                            nom: communesData.features.find(\n                                              (commune) =>\n                                                commune.properties.code ===\n                                                l_codinsee\n                                            ).properties.nom,\n                                          };\n                                          if (!selectedSectionsCodinsee.some(sec => sec.code === section.code)) {\n                                            selectedSectionsCodinsee.push(\n                                              section\n                                            );\n                                            layer.setStyle({\n                                              fillColor: 'green',\n                                            }); // Change la couleur de la section sélectionnée\n                                          } else {\n                                            // Si la section est déjà sélectionnée, la supprimer\n                                            selectedSectionsCodinsee = selectedSectionsCodinsee.filter(sec => sec.code !== section.code);\n                                            layer.setStyle({ fillColor: '' }); // Rétablir la couleur originale de la section\n                                          }\n                                          updateComsecT();\n                                        }\n\n                                        // Vérifier si la section a déjà été cliquée\n                                        var alreadyClicked = clickedSections.some(\n                                          (clickedSection) =>\n                                            clickedSection._leaflet_id ===\n                                            layer._leaflet_id\n                                        );\n\n                                        if (alreadyClicked) {\n                                          return; // Si la section a déjà été cliquée, ne rien faire\n                                        }\n\n                                        var ventesDansCetteSection = ventes\n                                          .flatMap((vente) => {\n                                            var venteCommunes = JSON.parse(\n                                              vente.l_codinsee.replace(/'/g, '\"')\n                                            );\n                                            var venteSections = JSON.parse(\n                                              vente.l_section.replace(/'/g, '\"')\n                                            );\n\n                                            return venteCommunes.map(\n                                              (commune, index) => ({\n                                                id:\n                                                  commune +\n                                                  '000' +\n                                                  venteSections[index],\n                                                vente: vente,\n                                              })\n                                            );\n                                          })\n                                          .filter(\n                                            (venteParSection) =>\n                                              venteParSection.id === sectionID &&\n                                              (venteParSection.vente.idnatmut ===\n                                                '1' ||\n                                                venteParSection.vente.idnatmut ===\n                                                  '4') &&\n                                              (venteParSection.vente.codtypbien.startsWith(\n                                                '1'\n                                              ) &&\n                                                venteParSection.vente.codtypbien !==\n                                                  '14' ||\n                                                venteParSection.vente.codtypbien ===\n                                                  '21') &&\n                                              venteParSection.vente.anneemut >=\n                                                '2017' &&\n                                              venteParSection.vente.anneemut <=\n                                                '2020'\n                                          );\n\n                                        if (\n                                          document.getElementById('Count')\n                                            .checked\n                                        ) {\n                                          totalVentes += Math.round(\n                                            ventesDansCetteSection.length / 4\n                                          );\n                                          document.getElementById('NumberSell').textContent =\n                                            'Total: ' + totalVentes;\n                                          layer.setStyle({\n                                            fillColor: 'red',\n                                          });\n                                          clickedSections.push(layer);\n                                        } else {\n                                          totalVentes = Math.round(\n                                            ventesDansCetteSection.length / 4\n                                          );\n                                          document.getElementById('NumberSell').textContent =\n                                            'Total: ' + totalVentes;\n                                        }\n                                      });\n                                    },\n                                  }).addTo(map);\n                                });\n                            }\n                          },\n                        });\n                      },\n                    }).addTo(map);\n                  });\n              });\n            },\n          }).addTo(map);\n        });\n    });\n\n    function filterCommunes(departementCode, communes) {\n      return communes.features.filter(function (commune) {\n        return commune.properties.code.startsWith(departementCode);\n      });\n    }\n\n    function filterSections(communeCode, sections) {\n      return sections.features.filter(function (section) {\n        return section.properties.id.startsWith(communeCode);\n      });\n    }\n\n    // Reset totalVentes and clickedCommunes when reset button is clicked\n    document.getElementById('reset').addEventListener('click', function () {\n      totalVentes = 0;\n      document.getElementById('NumberSell').textContent = '';\n      clickedCommunes.forEach(function (commune) {\n        commune.setStyle({\n          fillColor: 'blue',\n        }); // Replace 'blue' with your original color\n      });\n      clickedCommunes = [];\n    });\n\n    function updateComsecT() {\n      var comsecT = document.getElementById('comsecT');\n      comsecT.innerHTML = '';\n      selectedCommunesCodinsee.forEach(function (commune) {\n        var communeDiv = document.createElement('div');\n        communeDiv.textContent = commune.nom;\n        communeDiv.classList.add('commune-item');\n        comsecT.appendChild(communeDiv);\n      });\n      selectedSectionsCodinsee.forEach(function (section) {\n        var sectionDiv = document.createElement('div');\n        sectionDiv.textContent = section.nom;\n        sectionDiv.classList.add('section-item');\n        comsecT.appendChild(sectionDiv);\n      });\n    }\n"],"file":"scriptMap.dev.js"}