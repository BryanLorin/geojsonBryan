{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","sectionsLayer","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","totalVentes2","addEventListener","nbVentesClient","this","value","trim","textContent","resultat","inputContainer","querySelector","innerHTML","communesInput","type","concat","nom","join","readOnly","appendChild","sectionsInput","createElement","forEach","selectedCommune","flatMap","ventesDansCetteCommune","parse","replace","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","totalSecteur","Math","round","length","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","onEachFeature","layer","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","fillColor","some","_leaflet_id","setStyle","l_section","filteredSections","alreadyClicked","clickedSection"],"mappings":"aAAA,IAIGA,aACCC,OALAC,IAAMC,EAAED,IAAI,OAAOE,QAAQ,CAAC,KAAM,MAAO,GAA7CD,EAAAE,UAAYH,qDAAZ,CAEEG,QAAF,KACEC,MAAOJ,KAGT,IAOIK,cAFAC,cALAC,YAAJ,EACIC,gBAAJ,GACIC,gBAAkB,GAClBC,WAAAA,SAAuBC,eAAA,cAEvBL,yBAA2B,GAD3BM,yBAAsBD,GAEtBE,aAAAA,EACAR,OAAAA,SAAJM,eAAA,UACIG,aAAJ,EAwSG,SAFDC,eAAAC,EAAAC,GAGAR,OAAAA,EAAeS,SAAfC,OAAA,SAAAC,GANF,OAAAA,EAAAC,WAAAC,KAAAC,WAAAP,KANA,SAASQ,eAAeC,EAAaC,GACnC,OAAOA,EAASR,SAASC,OAAO,SAAUQ,GACxC,OAAOA,EAAQN,WAAWO,GAAGL,WAAWE,KA5R5CI,SAAIC,eAAmB,kBAAAC,iBAAA,QAAA,WAEvB,IAAAC,EAAAC,KAAAC,MAEE,GAAIF,MAAAA,IAEJ,KAF0BE,EAE1BC,OAGEN,SAASlB,eAAe,kBAAkByB,YAAc,yBAH1D,CAEE,IAAIC,EAAYP,aAAeE,EAAkB,IADnDH,SAAWG,eAAP,kBAAwCI,YAA5C,oBAA4DC,KAM7DR,SAVDlB,eAAA,SAAAoB,iBAAA,QAAA,WAYiCA,IAAjCF,gBAASlB,SACPH,YAAIC,EACFD,SAAAA,eAAA,cAAA4B,YAAA,UAAA5B,YACAqB,SAASlB,eAAe,eAAcyB,YAAc,YAAY5B,gBAKpEqB,SAASlB,eAAe,UAAUoB,iBAAiB,QAAS,WAE1D,IAAIO,EAAiBT,SAASU,cAAc,iCAG5CD,EAAeE,UAAY,GAK3BC,IAAAA,EAAAZ,SAAsBvB,cAAAA,SAAoCmC,EAAAC,KAAOtB,OAAPqB,EAA1DP,MAAA5B,yBAAAN,IAAA,SAAAoB,GAAA,MAAA,GAAAuB,OAAAvB,EAAAwB,IAAA,MAAAD,OAAAvB,EAAAE,QAAAuB,KAAA,MACAJ,EAAcK,UAAW,EACzBR,EAAeS,YAAYN,GAG3B,IAAIO,EAAgBnB,SAASoB,cAAc,SAC3CD,EAAcN,KAAO,OACrBM,EAAcd,MAAQrB,yBAAyBb,IAAI,SAAA2B,GAAA,MAAA,GAAAgB,OAAAhB,EAAOiB,IAAP,MAAAD,OAAOhB,EAAAL,QAAAuB,KAAA,MAAAG,EAAAF,UAAOnB,EAAPW,EAA1DS,YAAAC,GAMA1C,yBAAyB4C,QAAQ,SAAAC,GAAjC7C,IAAAA,EAAyB4C,OAAQE,QAAAD,SAAAA,GAC/B,IAAIE,EAAAA,KAAsBC,MAAG/C,EAAO6C,WAAQG,QAAAC,KAAS,MAC/CC,EAAgBC,KAAKJ,MAAME,EAAMG,UAANJ,QAAA,KAAA,MAG/B,OAAOE,EAAczD,IAAI,SAAAoB,EAACA,GAAD,MAAUwC,CAAVhC,GAAAR,EACvBQ,QAAIR,EADwCwC,GAE5CjC,MAAAA,OAF4CR,OAArB,SAAA0C,GAAA,OAAAA,EAAzBjC,KAAAuB,EAAA7B,OAKuB,MAAtBH,EAAOqC,MAAAK,UAAe,MAAAA,EAAAL,MAAAM,YAAAD,EACvBA,MAAgBjC,WAAOuB,WAAe,MACF,OADpCU,EACCA,MAAgBL,YADjB,OAC2CK,EAAgBL,MAAMM,aAXnE,QAAAD,EAAAL,MAAAO,UAAAF,EAAAL,MAAAO,UAAA,SAgBAC,cAAgBC,KAAKC,MAAMb,EAAuBc,OAAS,KAQ3DtD,yBAAIuD,QAAyB7D,SAAAA,GAC3B,IACA8D,EADIZ,EAA2BD,KAAMG,UAAN,EAAiBJ,GACvBD,KAAME,EAAgBD,KAAQe,UAAnC,GAEKF,EAAqB7D,OAAA6C,QAAA,SAAAI,GAC5C5B,IAAAA,EAAc8B,KAAVJ,MAAkBiB,EAAAA,WADsBhB,QAAA,KAAA,MAE5CC,EAAOA,KAAAA,MAAAA,EAAAA,UAAAA,QAAAA,KAAAA,MAFgB,OAAzBC,EAAAzD,IAAA,SAAAoB,EAAAwC,GAAA,MAAA,CAICzC,GAAAA,EAAO,MAAAqD,EAAeZ,GAAAJ,MACvBgB,OAMFR,OAAAA,SAAAA,GAAqBE,OAGvBM,EAAA5C,KAAAyC,IARwC,MAAnCG,EAAgBhB,MAAMM,UAAuD,MAAnCU,EAAgBhB,MAAMM,YASrEjC,EAASlB,MAAe8D,WAAxBlD,WAAgDyC,MAAhD,OAAgDA,EAAhDR,MAAAiB,YAAA,OAAAD,EAAAhB,MAAAiB,aAnEF,QAAAD,EAAAhB,MAAAO,UAAAS,EAAAhB,MAAAO,UAAA,SA0EE/D,cAAciE,KAAAC,MAAAE,EAAiBD,OAAA,KAI7B/D,SAAOO,eAAE,gBAAAuB,MAAA8B,eAQP/D,OAAEyE,iBAAQC,SAAc,WACtBC,IAAAA,EAAAA,KAAa1C,MACX2C,IAAAA,UAAA,SAAkBA,GAChB7E,IAAA8E,YAAI9D,KAGYf,EAAAE,UAAA,qDAAA,CAAAC,QACb2E,KACCxE,MAAAA,KAGJyE,MAAAA,kEAAAA,OAAKC,EAALD,kBAAAA,OAAKC,EAALD,aAEID,KAAA,SAAOG,GACR,OACAH,EAAKI,SAEJJ,KAAA,SAAIK,GAjBdnF,EAAEyE,QAAQC,EAAc,CAmBdC,cAAIvE,SAAegF,EAAAR,GACjB7E,EAAAA,GAAI8E,QAAAA,WACL,IAAA9D,EAAAqE,EAAAhE,WAAAC,KAEDjB,MAAAA,kEAAAA,OAA4C4E,EAA5C5E,eAAAA,OAA4C4E,EAA5C5E,KAAAA,OAA4CW,EAA5CX,UACEuE,KAAAA,SAAAA,GAAa,OAAEM,EAAAC,SACbN,KAAAA,SAAAA,GACES,OAAOC,IAIjB3E,MAAAA,kEAAAA,OAEYqE,EAFZrE,cAAAA,OAEYqE,EAFZrE,aAlBGmE,KAAK,SAAUG,GAqBN,OAAAA,EAAWC,SAETJ,KAAA,SAAI3D,GAEFwB,IAAAA,EAAavB,eAAgBL,EAD7BM,aAAMG,GADMpB,eAIdC,IAAAA,YAAAA,eACeD,cAAwBJ,EAAAyE,QAAAU,EAAA,CACxCR,cAED,SAAAS,EAAAR,GAlBJA,EAAMW,GAAG,CACPF,MAAO,WAkBmD,IAAA7D,EAAA4D,EACtDI,WAAcnE,KADwCoE,EAAxDL,EAAAhE,WAAAuB,IAMC,GApBbhC,WAAWwB,YAAc,QAAUsD,EAoBtB7D,SAAAlB,eAAA,UAAAgF,QAAA,CAEGtC,IAAAA,EAAAA,CACEI,KAAAA,EACAc,IAAAA,EAAalD,WAAGuB,KAEKtC,yBAAqBsF,KAAAxE,GAC5CQ,EAAIR,SADwC,CAAAyE,UAAA,SARhD,IAQEpF,gBAAAqF,KAAA,SAAAL,GAAA,OAKCtE,EAAO0C,cAAegB,EAAAkB,cAbzB,CAuBIlE,IAAAA,EAAwBtB,OAAxB6C,QAAsChB,SAAAA,GACtCP,IAAAA,EAASlB,KAAe2C,MAAAE,EAAepB,WAAvCmB,QAAqD,KAAA,MAC/CyC,EAAStC,KAAAJ,MAAAE,EAAAyC,UAAA1C,QAAA,KAAA,MAAf,OAAAE,EAAAzD,IAAA,SAAAoB,EAAAwC,GAAA,MAAA,CACAnD,GAAAA,EALFkB,QAMO4C,EAAAX,GACLpD,MAAWgD,OAEX3B,OAASlB,SAAAA,GAAe,OACzBkD,EAAAjC,KAAAH,IACF,MAAAoC,EAAAL,MAAAM,UAAA,MAAAD,EAAAL,MAAAM,YAhBED,EAAgBL,MAAMiB,WAAWlD,WAAW,MAA6C,OAArCsC,EAAgBL,MAAMiB,YAA4D,OAArCZ,EAAgBL,MAAMiB,aAkBlFkB,QAApC9D,EAASlB,MAAeoD,UAAqBF,EAAAL,MAAAO,UAAA,SAK5CgB,SAAKpE,eAAoB,YAAAgF,UACpBO,SAAAA,eAAmB1E,SAAeC,SAlBxCjB,aAAeyD,KAAKC,MAAMb,EAAuBc,OAAS,GAoBpDrD,SAAAA,eAAe,cAAAsB,YAAA,UAAA5B,YACjBR,SAAI8E,eAAYhE,eAAhBsB,YAAA,YAAAN,aACD+C,EAAAmB,SAAA,CAAAH,UAAA,QAlBHpF,gBAAgBmF,KAAKf,KAqBnBD,YAAeX,KAAAC,MAAAb,EAAmBwB,OAAO,GACvCA,SAASlE,eAAS,cAAYyB,YAAA,UAAA5B,YAC5BqB,SAAIwC,eAAYgB,eAAhBjD,YAEA,YAAAN,eAjBND,SAASlB,eAAe,YAAYgF,SAsB9BX,MAAA,kEAAArC,OAA8CsC,EAA9C,cAAAtC,OAA8CsC,EAA9C,KAAAtC,OAA8C3B,EAA9C,UACA+D,KAAA,SAAWG,GACT5D,OAAAA,EAAMqC,SACiCoB,KAAA,SAAI3D,GAAJ,IAAA8E,EAAuDtD,eAAAA,EAAAA,GAEhG/B,eACAgE,IAAAA,YAAe/D,eAChBA,cAGCb,EAAAyE,QAAAwB,EAAA,CAnBJtB,cAAe,SAAUS,EAASR,GAChCA,EAAMW,GAAG,QAAS,WAmBZW,IAAAA,EAAcd,EAAG3E,WAAgBoF,GAfjCnC,EAAaU,EAAUC,UAAU,EAAG,GAmBpC6B,EAAgB9B,EAAAC,UAAA,GAfpB,GAAGzC,SAASlB,eAAe,UAAUgF,QAAS,CAoBxCvB,IAAAA,EAAAA,CACEX,KAAAA,EAAgBC,KAAAuC,EAChB1B,IAAAA,aAAgBb,SAAWF,KAAK,SAAApC,GAAC6E,OAAU1C,EAAQlC,WAAnCC,OAApBqC,IAAAtC,WAAAuB,KAEyB/B,yBAAqB+E,KAAAjE,GAC5CC,EAAIR,SAAO,CAAGyE,UAAQtB,UAWxB/D,IAPgBoB,gBAAhBkE,KACCtB,SAAAA,GAAAA,OAVH4B,EAAAL,cAAAlB,EAAAkB,cAgBEvF,CAGA,IAAA4D,EAAA7D,OAAA6C,QAAA,SAAAI,GACA9C,IAAAA,EAAAgD,KAAAJ,MAAAE,EAAAG,WAAAJ,QAAA,KAAA,MACKgB,EAAAb,KAAAJ,MAAAE,EAAAyC,UAAA1C,QAAA,KAAA,MAEL1B,OAASlB,EAAeX,IAAA,SAAAoB,EAAcgB,GAAd,MAA4B,CAC5CR,GAACjB,EAAAA,MAAe4D,EAAenC,GACxCoB,MAAAA,OAEJrC,OAAA,SAAAqD,GAAA,OAzDJA,EAAA5C,KAAAyC,IAXH,MAAAG,EAAAhB,MAAAM,UAAA,MAAAU,EAAAhB,MAAAM,YAuEDU,EAAAhB,MAAAiB,WAAAlD,WAAA,MAAA,OAAAiD,EAAAhB,MAAAiB,YAAA,OAAAD,EAAAhB,MAAAiB,aACF,QAAAD,EAAAhB,MAAAO,UAAAS,EAAAhB,MAAAO,UAAA,SApIPlC,SAAAlB,eAAA,SAAAgF,SAZJnF,aAAAyD,KAAAC,MAAAE,EAAAD,OAAA,GATFtC,SAAAlB,eAAA,cAAAyB,YAAA,UAAA5B,YAgKDqB,SAAAlB,eAAA,eAAAyB,YAAA,YAAAN,aAlKH+C,EAAAmB,SAAA,CAAAH,UAAA,QALJnF,gBAAAkF,KAAAf,KAuJoCrE,YAAcyD,KAAKC,MAAME,EAAuBD,OAAS,GAqBvEnD,SAAiBC,eAAU,cAAAmB,YAAA,UAAA5B,YACjBqB,SAAUT,eAAS,eAAAgB,YAAA,YAAAN,oBAhBpBhC,MAAME,cAOpBF,MAAME,YAuBvBS,MAAAA,SAHFoB,SAASlB,eAAe,SAASoB,iBAAiB,QAAS,WACzDvB,YAAc,EACdqB,SAASlB,eAAe,cAAcyB,YAAc,GACpD3B,gBAAgByC,QAAQ,SAAU9B,GAChCA,EAAQ4E,SAAS,CAAEH,UAAW,WAEhCpF,gBAAkB","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\nvar totalVentes2 = 0;  // Variable globale pour le deuxième total des ventes\n\n// Ajoutez un événement 'input' au champ de texte pour calculer et afficher le résultat chaque fois que l'utilisateur entre un nombre\ndocument.getElementById('nbVentesClient').addEventListener('input', function() {\n  var nbVentesClient = this.value;\n  \n  // Vérifiez si le nombre entré par l'utilisateur est un nombre valide\n  if (!isNaN(nbVentesClient) && nbVentesClient.trim() !== '') {\n    var resultat = (totalVentes2 * nbVentesClient) / 100;\n    document.getElementById('resultatMarche').textContent = 'Résultat marché: ' + resultat;\n  } else {\n    document.getElementById('resultatMarche').textContent = 'Résultat marché: 0';\n  }\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n    document.getElementById(\"NumberSell2\").textContent = \"Total 2: \" + totalVentes2;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            document.getElementById(\"NumberSell2\").textContent = \"Total 2: \" + totalVentes2;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            document.getElementById(\"NumberSell2\").textContent = \"Total 2: \" + totalVentes2;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      document.getElementById(\"NumberSell2\").textContent = \"Total 2: \" + totalVentes2;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      document.getElementById(\"NumberSell2\").textContent = \"Total 2: \" + totalVentes2;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}