{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","fillColor","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","select","addEventListener","textContent","comsecTDiv","innerHTML","sectionsInput","createElement","value","concat","nom","join","readOnly","appendChild","querySelector","inputContainer","communesInput","type","forEach","selectedCommune","vente","venteCommunes","JSON","parse","l_codinsee","replace","l_section","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","totalSecteur","Math","round","ventesDansCetteCommune","length","selectedSection","ventesDansCetteSection","sectionCode","flatMap","venteParSection","sectionID","then","this","departements","geoJSON","layer","onEachFeature","fetch","region","response","json","filteredCommunes","feature","filterCommunes","on","communeNom","removeLayer","setStyle","click","alreadyClicked","clickedCommune","_leaflet_id","checked","filteredSections","sectionsLayer","push","substring","clickedSection","some"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n\n  // Récupérer la div avec l'id \"comsecT\"\n  var comsecTDiv = document.getElementById('comsecT');\n\n  // Supprimer les anciens inputs\n  comsecTDiv.innerHTML = '';\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', '); // Afficher uniquement le nom des sections\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  comsecTDiv.appendChild(sectionsInput);\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}