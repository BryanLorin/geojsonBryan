{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","select","document","updateMarketShare","partValue","parseInt","partInput","value","textContent","split","trim","Error","Math","ceil","marketShare","console","log","error","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","addEventListener","length","querySelector","inputContainer","innerHTML","communesInput","createElement","type","concat","nom","join","readOnly","appendChild","sectionsInput","forEach","selectedCommune","vente","venteCommunes","JSON","parse","l_codinsee","replace","l_section","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","totalSecteur","round","ventesDansCetteCommune","selectedSection","ventesDansCetteSection","sectionCode","flatMap","venteParSection","sectionID","then","this","departements","geoJSON","layer","onEachFeature","fetch","region","response","json","filteredCommunes","feature","filterCommunes","on","communeNom","removeLayer","setStyle","fillColor","click","alreadyClicked","clickedCommune","_leaflet_id","checked","filteredSections","sectionsLayer","push","substring","clickedSection","some"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n\nvar partInput = document.getElementById(\"Part\");\npartInput.addEventListener('input', updateMarketShare);\n\nfunction updateMarketShare() {\n  try {\n    var partValue = parseInt(partInput.value);\n    var totalVentes = parseInt(document.getElementById(\"NumberSell\").textContent.split(\":\")[1].trim());\n    if (isNaN(partValue)) {\n      throw new Error(\"Invalid input: Please enter a valid number.\");\n    }\n    if (totalVentes === 0) {\n      throw new Error(\"Invalid operation: Total sales is 0.\");\n    }\n    var marketShare = Math.ceil((partValue * 100) / totalVentes);\n    document.getElementById(\"MarketShare\").textContent = \"Part de marché : \" + marketShare + \"%\";\n    console.log(\"Market Share:\", marketShare);\n  } catch (error) {\n    console.error(error.message);\n  }\n}\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\n\n\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}