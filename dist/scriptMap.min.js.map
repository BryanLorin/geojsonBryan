{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","totalSecteur","addEventListener","event","comsecTDiv","target","nom","join","innerHTML","forEach","round","length","ventesToRemove","layer","getLayer","setStyle","fillColor","textContent","inputContainer","querySelector","communesInput","type","value","concat","readOnly","appendChild","sectionsInput","createElement","selectedCommune","flatMap","ventesDansCetteCommune","parse","replace","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","Math","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","onEachFeature","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","some","_leaflet_id","l_section","sectionsLayer","filteredSections","alreadyClicked","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Count').addEventListener('change', function(event) {\n  // Obtenir l'élément comsecT\n  var comsecTDiv = document.getElementById('comsecT');\n\n  if (event.target.checked) {\n      // Si la case Count est cochée, affichez les noms des communes sélectionnées\n      comsecTDiv.innerHTML = selectedCommunesCodinsee.map(commune => commune.nom).join(', ');\n\n  } else {\n      // Si la case Count est décochée, effacez le contenu de comsecT\n      comsecTDiv.innerHTML = '';\n\n      // Vous pouvez également décolorer les communes et mettre à jour le total ici\n      selectedCommunesCodinsee.forEach(commune => {\n          // Supprimer les ventes de cette commune du total\n          var ventesToRemove = Math.round(commune.ventes.length / 4);\n          totalVentes -= ventesToRemove;\n\n          // Changer la couleur de la commune\n          var layer = map.getLayer(commune.code);\n          if (layer) {\n              layer.setStyle({ fillColor: 'blue' });  // Remplacez 'blue' par la couleur d'origine\n          }\n      });\n\n      // Réinitialiser selectedCommunesCodinsee\n      selectedCommunesCodinsee = [];\n\n      // Mettre à jour le total de ventes\n      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}