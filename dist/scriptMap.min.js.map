{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","forEach","commune","setStyle","filter","fillColor","properties","code","startsWith","departementCode","filterSections","communeCode","sections","features","section","id","document","totalSecteur","addEventListener","inputContainer","innerHTML","length","clickedCommune","createElement","communeInput","type","feature","nom","value","appendChild","clickedSection","sectionInput","textContent","querySelector","communesInput","concat","join","readOnly","sectionsInput","selectedCommune","flatMap","vente","venteCommunes","JSON","parse","l_codinsee","replace","l_section","index","ventesDansCetteCommune","venteSections","venteParCommune","idnatmut","anneemut","selectedSection","sectionCode","substring","ventesDansCetteSection","venteParSection","sectionID","codtypbien","Math","round","eachLayer","layer","select","fetch","this","response","then","departements","onEachFeature","region","data","geoJSON","json","communes","filteredCommunes","filterCommunes","removeLayer","click","communeNom","checked","alreadyClicked","some","_leaflet_id","filteredSections","sectionsLayer","push","find"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.getElementById('comsecT');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  if (clickedCommunes.length > 0) {\n    // Créer un nouvel élément input pour chaque commune sélectionnée\n    clickedCommunes.forEach(clickedCommune => {\n      var communeInput = document.createElement('input');\n      communeInput.type = 'text';\n      communeInput.value = clickedCommune.feature.properties.nom;  // Assumer que 'nom' est la propriété contenant le nom de la commune\n      communeInput.readOnly = true;  // Rendre l'input en lecture seule\n      inputContainer.appendChild(communeInput);\n    });\n  }\n\n  if (clickedSections.length > 0) {\n    // Créer un nouvel élément input pour chaque section sélectionnée\n    clickedSections.forEach(clickedSection => {\n      var sectionInput = document.createElement('input');\n      sectionInput.type = 'text';\n      sectionInput.value = clickedSection.feature.properties.nom;  // Assumer que 'nom' est la propriété contenant le nom de la section\n      sectionInput.readOnly = true;  // Rendre l'input en lecture seule\n      inputContainer.appendChild(sectionInput);\n    });\n  }\n\n  if (clickedCommunes.length === 0 && clickedSections.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});"]}