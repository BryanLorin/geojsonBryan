{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","totalSecteur","document","select","numberSellElement","updateMarketShare","numberSell","textContent","split","marketShare","parseInt","marketShareElement","part","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","partElement","addEventListener","inputContainer","querySelector","innerHTML","communesInput","type","value","concat","nom","join","readOnly","appendChild","sectionsInput","createElement","forEach","selectedCommune","flatMap","ventesDansCetteCommune","parse","replace","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","Math","round","length","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","onEachFeature","layer","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","fillColor","some","_leaflet_id","setStyle","l_section","sectionsLayer","filteredSections","alreadyClicked","clickedSection"],"mappings":"aAAA,IAIGA,aACCC,OALAC,IAAMC,EAAED,IAAI,OAAOE,QAAQ,CAAC,KAAM,MAAO,GAA7CD,EAAAE,UAAYH,qDAAZ,CAEEG,QAAF,KACEC,MAAOJ,KAGT,IAOIK,cAFAC,cALAC,YAAJ,EACIC,gBAAJ,GACIC,gBAAkB,GAClBC,WAAAA,SAAuBC,eAAA,cAEvBL,yBAA2B,GAD3BM,yBAAsBD,GAEtBE,aAAAA,EACAR,OAAAA,SAAJM,eAAA,UAEIG,kBAAJC,SAAAJ,eAAA,cACIK,YAASD,SAASJ,eAAe,aAEjCM,mBAAoBF,SAASJ,eAAe,eAKhD,SAASO,oBAAT,IAAAC,EAASD,SAATD,kBAA6BG,YAAAC,MAAA,KAAA,IAIvBC,EAAsB,IAHtBH,WAAaI,YAASN,OAGOE,EAAjCK,mBAAmBC,YAAcN,iBAAjCG,EAAA,IAuRC,SAFDI,eAAAC,EAAAC,GAGAnB,OAAAA,EAAeoB,SAAfC,OAAA,SAAAC,GANF,OAAAA,EAAAC,WAAAC,KAAAC,WAAAP,KANA,SAASQ,eAAeC,EAAaC,GACnC,OAAOA,EAASR,SAASC,OAAO,SAAUQ,GACxC,OAAOA,EAAQN,WAAWO,GAAGL,WAAWE,KA1Q5CI,YAAYC,iBAAiB,QAASvB,mBAAtCsB,SAAAA,eAAYC,SAAiBA,iBAASvB,QAAtC,WAEiCuB,IAAjC1B,gBAASJ,SACPH,YAAIC,EACFD,SAAAA,eAAA,cAAAY,YAAA,UAAAZ,eAKJO,SAASJ,eAAe,UAAU8B,iBAAiB,QAAS,WAE1D,IAAIC,EAAiB3B,SAAS4B,cAAc,iCAG5CD,EAAeE,UAAY,GAK3BC,IAAAA,EAAA9B,SAAsBT,cAAAA,SAAoCuC,EAAAC,KAAOf,OAAPc,EAA1DE,MAAAzC,yBAAAN,IAAA,SAAA+B,GAAA,MAAA,GAAAiB,OAAAjB,EAAAkB,IAAA,MAAAD,OAAAjB,EAAAE,QAAAiB,KAAA,MACAL,EAAcM,UAAW,EACzBT,EAAeU,YAAYP,GAG3B,IAAIQ,EAAgBtC,SAASuC,cAAc,SAC3CD,EAAcP,KAAO,OACrBO,EAAcN,MAAQlC,yBAAyBb,IAAI,SAAAsC,GAAA,MAAA,GAAAU,OAAAV,EAAOW,IAAP,MAAAD,OAAOV,EAAAL,QAAAiB,KAAA,MAAAG,EAAAF,UAAOb,EAAPI,EAA1DU,YAAAC,GAMA/C,yBAAyBiD,QAAQ,SAAAC,GAAjClD,IAAAA,EAAyBiD,OAAQE,QAAAD,SAAAA,GAC/B,IAAIE,EAAAA,KAAsBC,MAAGpD,EAAOkD,WAAQG,QAAAC,KAAS,MAC/CC,EAAgBC,KAAKJ,MAAME,EAAMG,UAANJ,QAAA,KAAA,MAG/B,OAAOE,EAAc9D,IAAI,SAAA+B,EAACA,GAAD,MAAUkC,CAAV1B,GAAAR,EACvBQ,QAAIR,EADwCkC,GAE5C3B,MAAAA,OAF4CR,OAArB,SAAAoC,GAAA,OAAAA,EAAzB3B,KAAAiB,EAAAvB,OAKuB,MAAtBH,EAAO+B,MAAAK,UAAe,MAAAA,EAAAL,MAAAM,YAAAD,EACvBA,MAAgB3B,WAAOiB,WAAe,MACF,OADpCU,EACCA,MAAgBL,YADjB,OAC2CK,EAAgBL,MAAMM,aAXnE,QAAAD,EAAAL,MAAAO,UAAAF,EAAAL,MAAAO,UAAA,SAgBAtD,cAAgBuD,KAAKC,MAAMZ,EAAuBa,OAAS,KAQ3D1D,yBAAI2D,QAAyBjE,SAAAA,GAC3B,IACAkE,EADIX,EAA2BD,KAAMG,UAAN,EAAiBJ,GACvBD,KAAME,EAAgBD,KAAQc,UAAnC,GAEKF,EAAqBjE,OAAAkD,QAAA,SAAAI,GAC5CtB,IAAAA,EAAcwB,KAAVJ,MAAkBgB,EAAAA,WADsBf,QAAA,KAAA,MAE5CC,EAAOA,KAAAA,MAAAA,EAAAA,UAAAA,QAAAA,KAAAA,MAFgB,OAAzBC,EAAA9D,IAAA,SAAA+B,EAAAkC,GAAA,MAAA,CAICnC,GAAAA,EAAO,MAAA8C,EAAeX,GAAAJ,MACvBe,OAMF9D,OAAAA,SAAAA,GAAqBwD,OAGvBM,EAAArC,KAAAkC,IARwC,MAAnCG,EAAgBf,MAAMM,UAAuD,MAAnCS,EAAgBf,MAAMM,YASrEpD,EAASJ,MAAekE,WAAxB3C,WAAgDpB,MAAhD,OAAgDA,EAAhD+C,MAAAgB,YAAA,OAAAD,EAAAf,MAAAgB,aAnEF,QAAAD,EAAAf,MAAAO,UAAAQ,EAAAf,MAAAO,UAAA,SA0EEpE,cAAcqE,KAAAC,MAAAE,EAAiBD,OAAA,KAI7BnE,SAAOO,eAAE,gBAAAoC,MAAAjC,eAQPb,OAAE6E,iBAAQC,SAAc,WACtBC,IAAAA,EAAAA,KAAajC,MACXkC,IAAAA,UAAA,SAAkBA,GAChBjF,IAAAkF,YAAIvD,KAGY1B,EAAAE,UAAA,qDAAA,CAAAC,QACb+E,KACC5E,MAAAA,KAGJ6E,MAAAA,kEAAAA,OAAKC,EAALD,kBAAAA,OAAKC,EAALD,aAEID,KAAA,SAAOG,GACR,OACAH,EAAKI,SAEJJ,KAAA,SAAIK,GAjBdvF,EAAE6E,QAAQC,EAAc,CAmBdC,cAAI3E,SAAeoF,EAAAR,GACjBjF,EAAAA,GAAIkF,QAAAA,WACL,IAAAvD,EAAA8D,EAAAzD,WAAAC,KAED5B,MAAAA,kEAAAA,OAA4CgF,EAA5ChF,eAAAA,OAA4CgF,EAA5ChF,KAAAA,OAA4CsB,EAA5CtB,UACE2E,KAAAA,SAAAA,GAAa,OAAEM,EAAAC,SACbN,KAAAA,SAAAA,GACES,OAAOC,IAIjB/E,MAAAA,kEAAAA,OAEYyE,EAFZzE,cAAAA,OAEYyE,EAFZzE,aAlBGuE,KAAK,SAAUG,GAqBN,OAAAA,EAAWC,SAETJ,KAAA,SAAIpD,GAEFkB,IAAAA,EAAajB,eAAgBL,EAD7BM,aAAMG,GADM/B,eAIdC,IAAAA,YAAAA,eACeD,cAAwBJ,EAAA6E,QAAAU,EAAA,CACxCR,cAED,SAAAS,EAAAR,GAlBJA,EAAMW,GAAG,CACPF,MAAO,WAkBmD,IAAAtD,EAAAqD,EACtDI,WAAc5D,KADwC6D,EAAxDL,EAAAzD,WAAAiB,IAMC,GApBbrC,WAAWQ,YAAc,QAAU0E,EAoBtB/E,SAAAJ,eAAA,UAAAoF,QAAA,CAEGrC,IAAAA,EAAAA,CACEI,KAAAA,EACAa,IAAAA,EAAa3C,WAAGiB,KAEK3C,yBAAqB0F,KAAAjE,GAC5CQ,EAAIR,SADwC,CAAAkE,UAAA,SARhD,IAQExF,gBAAAyF,KAAA,SAAAL,GAAA,OAKC/D,EAAOoC,cAAee,EAAAkB,cAbzB,CAuBIpF,IAAAA,EAAwBR,OAAxBkD,QAAsCrC,SAAAA,GACtC6D,IAAMmB,EAASrC,KAAAJ,MAAAE,EAAAG,WAAAJ,QAAA,KAAA,MAAEqC,EAAWlC,KAAAJ,MAAAE,EAAAwC,UAAAzC,QAAA,KAAA,MAC5BnD,OAAAA,EAAqBwE,IAArB,SAAAlD,EAAAkC,GAAA,MAAA,CAJF1B,GAKOR,EACLvB,QAAWmE,EAAcjB,GACzB3C,MAASJ,OAEZmB,OAAA,SAAAoC,GAAA,OAhBCA,EAAgB3B,KAAOH,IAkBe2D,MAApChF,EAASJ,MAAewD,UAAqB,MAAAD,EAAAL,MAAAM,YAC1CD,EAAAL,MAAAgB,WAAA3C,WAAA,MAAA,OAAAgC,EAAAL,MAAmEwB,YAA6B1D,OAAhGuC,EAAAL,MAAAgB,aAED,QAAAX,EAAgBqB,MAAhBnB,UAAAF,EAAAL,MAAAO,UAAA,SAfFrD,SAASJ,eAAe,YAAYoF,UAoB9BO,SAAAA,eAAe,SAAAP,SACjB/F,aAAgBsG,KAAAA,MAAAA,EAAhB/B,OAAA,GACDxD,SAAAJ,eAAA,cAAAS,YAAA,UAAAZ,YAlBHyE,EAAMmB,SAAS,CAAEH,UAAW,QAoB3BK,gBAAkBxB,KAAFG,KAEbA,YAASZ,KAASC,MAAAZ,EAAYa,OAAA,GAC5BxD,SAAI0D,eAAYgB,cAAmBlD,YAEnC,UAAA/B,cAjBNO,SAASJ,eAAe,YAAYoF,SAsB9BX,MAAA,kEAAApC,OAA8CqC,EAA9C,cAAArC,OAA8CqC,EAA9C,KAAArC,OAA8CrB,EAA9C,UACAwD,KAAA,SAAWG,GACTrD,OAAAA,EAAM+B,SACiCmB,KAAA,SAAIpD,GAAJ,IAAAwE,EAAuDtD,eAAAA,EAAAA,GAEhGpC,eACAoE,IAAAA,YAAeqB,eAChBA,cAGCrG,EAAA6E,QAAAyB,EAAA,CAnBJvB,cAAe,SAAUS,EAASR,GAChCA,EAAMW,GAAG,QAAS,WAmBZY,IAAAA,EAAcf,EAAG/E,WAAgBwF,GAfjClC,EAAaS,EAAUC,UAAU,EAAG,GAmBpC8B,EAAgB/B,EAAAC,UAAA,GAfpB,GAAG3D,SAASJ,eAAe,UAAUoF,QAAS,CAoBxCvB,IAAAA,EAAAA,CACEV,KAAAA,EAAgBC,KAAAsC,EAChB1B,IAAAA,aAAgBZ,SAAWF,KAAK,SAAA9B,GAACsE,OAAUzC,EAAQ5B,WAAnCC,OAApB+B,IAAAhC,WAAAiB,KAEyBpC,yBAAqBmF,KAAA1D,GAC5CC,EAAIR,SAAO,CAAGkE,UAAQtB,UAWxBnE,IAPgB+B,gBAAhB2D,KACCtB,SAAAA,GAAAA,OAVH6B,EAAAN,cAAAlB,EAAAkB,cAgBE3F,CAGAE,IAAAA,EAAAH,OAAAkD,QAAA,SAAAI,GACK,IAAAC,EAAAC,KAAAJ,MAAAE,EAAAG,WAAAJ,QAAA,KAAA,MACLpD,EAAyBgE,KAAAA,MAAAA,EAAAA,UAAuBD,QAAhD,KAAA,MAED,OAAAT,EAAA9D,IAAA,SAAA+B,EAAAkC,GAAA,MAAA,CAnDL1B,GAAAR,EAAA,MAAA4C,EAAAV,GAqDCJ,MAAAA,OAlEP/B,OAAA,SAAA8C,GAAA,OAqEDA,EAAArC,KAAAkC,IACF,MAAAG,EAAAf,MAAAM,UAAA,MAAAS,EAAAf,MAAAM,YA9HHS,EAAAf,MAAAgB,WAAA3C,WAAA,MAAA,OAAA0C,EAAAf,MAAAgB,YAAA,OAAAD,EAAAf,MAAAgB,aAiID,QAAAD,EAAAf,MAAAO,UAAAQ,EAAAf,MAAAO,UAAA,SAxJTrD,SAAAJ,eAAA,SAAAoF,SA4JDvF,aAAA6D,KAAAC,MAAAE,EAAAD,OAAA,GA9JHxD,SAAAJ,eAAA,cAAAS,YAAA,UAAAZ,YALJyE,EAAAmB,SAAA,CAAAH,UAAA,QATFvF,gBAAAsF,KAAAf,KAiLwBtD,YAA2B0C,KAAAC,MAAAE,EAAAD,OAAA,GACjBxD,SAAUgB,eAAS,cAAAX,YAAA,UAAAZ,mBAhBpBV,MAAME,cAOpBF,MAAME,YAuBvBS,MAAAA,SAHFM,SAASJ,eAAe,SAAS8B,iBAAiB,QAAS,WACzDjC,YAAc,EACdO,SAASJ,eAAe,cAAcS,YAAc,GACpDX,gBAAgB8C,QAAQ,SAAUxB,GAChCA,EAAQqE,SAAS,CAAEH,UAAW,WAEhCxF,gBAAkB","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nvar numberSellElement = document.getElementById(\"NumberSell\");\nvar partElement = document.getElementById(\"PartInput\");\nvar marketShareElement = document.getElementById(\"MarketShare\");\n\n// Définir une fonction pour mettre à jour la part de marché\nfunction updateMarketShare() {\n  var numberSell = parseInt(numberSellElement.textContent.split(\" \")[1]);\n  var part = parseFloat(partElement.value);  // Changer parseInt par parseFloat\n\n  var marketShare = (part * 100) / numberSell;\n  marketShareElement.textContent = \"Market Share: \" + marketShare + \"%\";\n}\n// Attacher la fonction d'update à l'événement 'input' de l'élément \"Part\"\npartElement.addEventListener('input', updateMarketShare);\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}