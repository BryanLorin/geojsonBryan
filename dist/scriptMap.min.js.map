{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","select","addEventListener","textContent","comsecTDiv","innerHTML","sectionsInput","createElement","value","concat","nom","join","readOnly","inputContainer","querySelector","communesInput","type","appendChild","forEach","selectedCommune","flatMap","ventesDansCetteCommune","parse","replace","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","totalSecteur","Math","round","length","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","onEachFeature","layer","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","fillColor","some","_leaflet_id","setStyle","l_section","sectionsLayer","filteredSections","alreadyClicked","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n\n  // Récupérer la div avec l'id \"comsecT\"\n  var comsecTDiv = document.getElementById('comsecT');\n\n  // Supprimer les anciens inputs\n  comsecTDiv.innerHTML = '';\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  comsecTDiv.appendChild(sectionsInput);\n\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}