{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","length","addEventListener","textContent","inputContainer","querySelector","innerHTML","communesInput","type","join","createElement","readOnly","value","concat","nom","appendChild","sectionsInput","ventesDansCetteCommune","parse","vente","l_codinsee","venteSections","JSON","l_section","replace","index","venteCommunes","venteParCommune","selectedCommune","idnatmut","totalSecteur","Math","round","codtypbien","anneemut","selectedSection","sectionID","substring","venteParSection","parseFloat","resultatInput","resultat","split","layer","resultatDiv","json","departements","on","select","response","region","then","removeLayer","fetch","geoJSON","onEachFeature","feature","click","data","fillColor","setStyle","clickedCommune","alreadyClicked","communeNom","push","checked","flatMap","filteredSections","sectionsLayer","ventesDansCetteSection","find","_leaflet_id","forEach"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\ndocument.getElementById('egalmarcher').addEventListener('click', function() {\n  // Récupérer le nombre de ventes du client\n  var nbVentesClient = parseFloat(document.getElementById('nbventesclient').value);\n\n  // Récupérer le nombre total de ventes\n  var totalVentes = parseFloat(document.getElementById('NumberSell').textContent.split(\": \")[1]);\n\n  // Calculer le résultat\n  var resultat = (nbVentesClient * totalVentes) / 100;\n\n  // Créer un nouvel input pour le résultat\n  var resultatInput = document.createElement('input');\n  resultatInput.type = 'text';\n  resultatInput.value = resultat;\n  resultatInput.readOnly = true;  // Rendre l'input en lecture seule\n\n  // Supprimer le contenu actuel de la div 'resultatmarcher'\n  var resultatDiv = document.getElementById('resultatmarcher');\n  resultatDiv.innerHTML = '';\n\n  // Ajouter le nouvel input à la div 'resultatmarcher'\n  resultatDiv.appendChild(resultatInput);\n});\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}