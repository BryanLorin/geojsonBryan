{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","select","document","marketShareText","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","partInput","addEventListener","marketShare","Number","value","textContent","split","length","communesInput","querySelector","inputContainer","innerHTML","appendChild","type","sectionsInput","concat","nom","join","readOnly","createElement","forEach","selectedCommune","ventesDansCetteCommune","flatMap","vente","JSON","parse","l_codinsee","replace","venteSections","index","l_section","venteCommunes","venteParCommune","totalSecteur","round","idnatmut","selectedSection","codtypbien","substring","anneemut","sectionID","venteParSection","region","eachLayer","layer","Math","ventesDansCetteSection","geoJSON","response","then","removeLayer","fetch","departements","onEachFeature","feature","click","data","json","fillColor","setStyle","clickedCommune","on","alreadyClicked","communeNom","push","checked","filteredSections","sectionsLayer","find","_leaflet_id"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n// Obtenir l'input \"Part\" et le texte \"MarketShare\"\nvar partInput = document.getElementById('Part');\nvar marketShareText = document.getElementById('MarketShare');\n\n// Ajouter un gestionnaire d'événements input à l'input \"Part\"\npartInput.addEventListener('input', function() {\n    // Obtenir la valeur actuelle de l'input \"Part\" et convertir en nombre\n    var partValue = Number(partInput.value);\n\n    // Obtenir le total de vente\n    var totalVentes = Number(document.getElementById(\"NumberSell\").textContent.split(\": \")[1]);\n\n    // Calculer la part de marché\n    var marketShare = (partValue * 100) / totalVentes;\n\n    // Mettre à jour le texte \"MarketShare\"\n    marketShareText.textContent = marketShare.toFixed(2) + '%';  // .toFixed(2) pour avoir deux chiffres après la virgule\n});\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}