{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","totalSecteur","addEventListener","result","value","resultInput","createElement","type","toFixed","readOnly","resultatmarcherDiv","innerHTML","textContent","inputContainer","querySelector","communesInput","concat","nom","join","appendChild","sectionsInput","forEach","selectedCommune","flatMap","ventesDansCetteCommune","parse","replace","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","Math","round","length","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","onEachFeature","layer","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","fillColor","some","_leaflet_id","setStyle","l_section","sectionsLayer","filteredSections","alreadyClicked","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('egalmarcher').addEventListener('click', function() {\n  // Retrieve the user input from the 'nbventesclient' text field\n  var userInput = parseFloat(document.getElementById('nbventesclient').value);\n\n  // Perform the multiplication and division operations\n  var result = (userInput * totalVentes) / 100;\n\n  // Create a new input element to display the result\n  var resultInput = document.createElement('input');\n  resultInput.type = 'text';\n  resultInput.value = result.toFixed(2); // Display the result with two decimal places\n  resultInput.readOnly = true; // Make the input read-only\n\n  // Append the new input element to the 'resultatmarcher' div\n  var resultatmarcherDiv = document.getElementById('resultatmarcher');\n  resultatmarcherDiv.innerHTML = ''; // Clear previous content, if any\n  resultatmarcherDiv.appendChild(resultInput);\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n\n\n"]}