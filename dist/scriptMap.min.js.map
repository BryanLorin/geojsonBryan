{"version":3,"sources":["scriptMap.js"],"names":["ventes","totalVentes","map","L","setView","tileLayer","maxZoom","addTo","clickedCommunes","selectedSectionsCodinsee","communesLayer","clickedSections","historyDiv","document","getElementById","selectedCommunesCodinsee","sectionsLayer","totalSecteur","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","addEventListener","length","textContent","inputContainer","querySelector","communesInput","innerHTML","createElement","join","type","readOnly","concat","nom","sectionsInput","appendChild","forEach","parse","vente","ventesDansCetteCommune","flatMap","JSON","l_codinsee","replace","index","l_section","venteCommunes","venteSections","venteParCommune","selectedCommune","selectedSection","substring","sectionCode","idnatmut","sectionID","ventesDansCetteSection","anneemut","Math","round","response","venteParSection","departements","feature","onEachFeature","codtypbien","then","data","json","value","select","region","this","geoJSON","click","fetch","layer","setStyle","fillColor","alreadyClicked","communesData","removeLayer","checked","communeNom","push","some","clickedCommune","_leaflet_id","find","clickedSection","filteredSections"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["\n    var map = L.map('map').setView([45.7, 3.15], 7);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n    }).addTo(map);\n\n    var communesData;\n    var ventes;\n    var totalVentes = 0;\n    var clickedCommunes = [];\n    var clickedSections = []; // Ajout du tableau pour stocker les sections cliquées\n    var historyDiv = document.getElementById('Historique'); // Ajout de la div Historique\n    var selectedCommunesCodinsee = [];\n    var selectedSectionsCodinsee = [];\n    var communesLayer;\n    var sectionsLayer;\n    var totalSecteur = 0;\n    var select = document.getElementById('region');\n\n    document.getElementById('Count').addEventListener('click', function () {\n      if (clickedCommunes.length === 0) {\n        totalVentes = 0;\n        document.getElementById('NumberSell').textContent = 'Total: ' + totalVentes;\n      }\n    });\n\n    document.getElementById('Export').addEventListener('click', function () {\n      // Récupérer le conteneur d'input\n      var inputContainer = document.querySelector('.pop-up-form .input-container');\n\n      // Supprimer les anciens inputs\n      inputContainer.innerHTML = '';\n\n      // Créer un nouvel input pour les communes sélectionnées\n      var communesInput = document.createElement('input');\n      communesInput.type = 'text';\n      communesInput.value = selectedCommunesCodinsee\n        .map((commune) => `${commune.nom}: ${commune.code}`)\n        .join(', ');\n      communesInput.readOnly = true; // Rendre l'input en lecture seule\n      inputContainer.appendChild(communesInput);\n\n      // Créer un nouvel input pour les sections sélectionnées\n      var sectionsInput = document.createElement('input');\n      sectionsInput.type = 'text';\n      sectionsInput.value = selectedSectionsCodinsee\n        .map((section) => `${section.nom}: ${section.code}`)\n        .join(', ');\n      sectionsInput.readOnly = true; // Rendre l'input en lecture seule\n      inputContainer.appendChild(sectionsInput);\n\n      // Calculate totalVentes for selected communes\n      selectedCommunesCodinsee.forEach((selectedCommune) => {\n        var ventesDansCetteCommune = ventes\n          .flatMap((vente) => {\n            var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, '\"'));\n            var venteSections = JSON.parse(vente.l_section.replace(/'/g, '\"'));\n\n            return venteCommunes.map((commune, index) => ({\n              id: commune,\n              section: venteSections[index],\n              vente: vente,\n            }));\n          })\n          .filter(\n            (venteParCommune) =>\n              venteParCommune.id === selectedCommune.code &&\n              (venteParCommune.vente.idnatmut === '1' ||\n                venteParCommune.vente.idnatmut === '4') &&\n              (venteParCommune.vente.codtypbien.startsWith('1') &&\n                venteParCommune.vente.codtypbien !== '14' ||\n                venteParCommune.vente.codtypbien === '21') &&\n              venteParCommune.vente.anneemut >= '2017' &&\n              venteParCommune.vente.anneemut <= '2020'\n          );\n\n        totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n      });\n\n      // Calculate totalVentes for selected sections\n      selectedSectionsCodinsee.forEach((selectedSection) => {\n        var sectionCode = selectedSection.code.substring(0, 5);\n        var sectionID =\n          sectionCode + '; ' + selectedSection.code.substring(7);\n\n        var ventesDansCetteSection = ventes\n          .flatMap((vente) => {\n            var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, '\"'));\n            var venteSections = JSON.parse(vente.l_section.replace(/'/g, '\"'));\n\n            return venteCommunes.map((commune, index) => ({\n              id: commune + '000' + venteSections[index],\n              vente: vente,\n            }));\n          })\n          .filter(\n            (venteParSection) =>\n              venteParSection.id === sectionID &&\n              (venteParSection.vente.idnatmut === '1' ||\n                venteParSection.vente.idnatmut === '4') &&\n              (venteParSection.vente.codtypbien.startsWith('1') &&\n                venteParSection.vente.codtypbien !== '14' ||\n                venteParSection.vente.codtypbien === '21') &&\n              venteParSection.vente.anneemut >= '2017' &&\n              venteParSection.vente.anneemut <= '2020'\n          );\n\n        totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n      });\n\n      // Display the total sales\n      document.getElementById('TotalSecteur').value = totalSecteur;\n    });\n\n    select.addEventListener('change', function () {\n      var region = this.value;\n      map.eachLayer(function (layer) {\n        map.removeLayer(layer);\n      });\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19,\n      }).addTo(map);\n\n      fetch(\n        `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`\n      )\n        .then(function (response) {\n          return response.json();\n        })\n        .then(function (departements) {\n          L.geoJSON(departements, {\n            onEachFeature: function (feature, layer) {\n              layer.on('click', function () {\n                var departementCode = feature.properties.code;\n\n                fetch(\n                  `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`\n                )\n                  .then((response) => response.json())\n                  .then((data) => {\n                    ventes = data;\n                  });\n\n                fetch(\n                  `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`\n                )\n                  .then(function (response) {\n                    return response.json();\n                  })\n                  .then(function (communes) {\n                    communesData = communes;\n                    var filteredCommunes = filterCommunes(\n                      departementCode,\n                      communes\n                    );\n\n                    if (communesLayer) {\n                      map.removeLayer(communesLayer);\n                    }\n\n                    communesLayer = L.geoJSON(filteredCommunes, {\n                      onEachFeature: function (feature, layer) {\n                        layer.on({\n                          click: function () {\n                            var communeCode = feature.properties.code;\n                            var communeNom = feature.properties.nom;\n                            historyDiv.textContent = 'Nom: ' + communeNom;\n\n                            // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                            if (document.getElementById('Create').checked) {\n                              // Créer un objet avec le code et le nom de la commune\n                              var commune = {\n                                code: communeCode,\n                                nom: feature.properties.nom, // Assumer que 'nom' est la propriété contenant le nom de la commune\n                              };\n                              selectedCommunesCodinsee.push(commune);\n                              layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                            }\n\n                            // Vérifier si la commune a déjà été cliquée\n                            var alreadyClicked = clickedCommunes.some(\n                              (clickedCommune) =>\n                                clickedCommune._leaflet_id === layer._leaflet_id\n                            );\n\n                            if (alreadyClicked) {\n                              return; // Si la commune a déjà été cliquée, ne rien faire\n                            }\n\n                            var ventesDansCetteCommune = ventes\n                              .flatMap((vente) => {\n                                var venteCommunes = JSON.parse(\n                                  vente.l_codinsee.replace(/'/g, '\"')\n                                );\n                                var venteSections = JSON.parse(\n                                  vente.l_section.replace(/'/g, '\"')\n                                );\n\n                                return venteCommunes.map((commune, index) => ({\n                                  id: commune,\n                                  section: venteSections[index],\n                                  vente: vente,\n                                }));\n                              })\n                              .filter(\n                                (venteParCommune) =>\n                                  venteParCommune.id === communeCode &&\n                                  (venteParCommune.vente.idnatmut === '1' ||\n                                    venteParCommune.vente.idnatmut === '4') &&\n                                  (venteParCommune.vente.codtypbien.startsWith(\n                                    '1'\n                                  ) &&\n                                    venteParCommune.vente.codtypbien !== '14' ||\n                                    venteParCommune.vente.codtypbien === '21') &&\n                                  venteParCommune.vente.anneemut >= '2017' &&\n                                  venteParCommune.vente.anneemut <= '2020'\n                              );\n\n                            if (document.getElementById('Communes').checked) {\n                              if (document.getElementById('Count').checked) {\n                                totalVentes += Math.round(\n                                  ventesDansCetteCommune.length / 4\n                                );\n                                document.getElementById('NumberSell').textContent =\n                                  'Total: ' + totalVentes;\n                                layer.setStyle({ fillColor: 'red' });\n                                clickedCommunes.push(layer);\n                              } else {\n                                totalVentes = Math.round(\n                                  ventesDansCetteCommune.length / 4\n                                );\n                                document.getElementById('NumberSell').textContent =\n                                  'Total: ' + totalVentes;\n                              }\n                            }\n\n                            if (document.getElementById('Sections').checked) {\n                              fetch(\n                                `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`\n                              )\n                                .then(function (response) {\n                                  return response.json();\n                                })\n                                .then(function (sections) {\n                                  var filteredSections = filterSections(\n                                    communeCode,\n                                    sections\n                                  );\n\n                                  if (sectionsLayer) {\n                                    map.removeLayer(sectionsLayer);\n                                  }\n\n                                  sectionsLayer = L.geoJSON(filteredSections, {\n                                    onEachFeature: function (feature, layer) {\n                                      layer.on('click', function () {\n                                        var sectionID = feature.properties.id;\n\n                                        // Extraire le l_codinsee et l_section de l'ID de la section\n                                        var l_codinsee = sectionID.substring(\n                                          0,\n                                          5\n                                        );\n                                        var l_section = sectionID.substring(\n                                          8\n                                        );\n\n                                        if (\n                                          document.getElementById('Create')\n                                            .checked\n                                        ) {\n                                          var section = {\n                                            code:\n                                              l_codinsee +\n                                              '; ' +\n                                              l_section,\n                                            nom: communesData.features.find(\n                                              (commune) =>\n                                                commune.properties.code ===\n                                                l_codinsee\n                                            ).properties.nom,\n                                          };\n                                          selectedSectionsCodinsee.push(\n                                            section\n                                          );\n                                          layer.setStyle({\n                                            fillColor: 'green',\n                                          }); // Change la couleur de la section sélectionnée\n                                        }\n\n                                        // Vérifier si la section a déjà été cliquée\n                                        var alreadyClicked = clickedSections.some(\n                                          (clickedSection) =>\n                                            clickedSection._leaflet_id ===\n                                            layer._leaflet_id\n                                        );\n\n                                        if (alreadyClicked) {\n                                          return; // Si la section a déjà été cliquée, ne rien faire\n                                        }\n\n                                        var ventesDansCetteSection = ventes\n                                          .flatMap((vente) => {\n                                            var venteCommunes = JSON.parse(\n                                              vente.l_codinsee.replace(/'/g, '\"')\n                                            );\n                                            var venteSections = JSON.parse(\n                                              vente.l_section.replace(/'/g, '\"')\n                                            );\n\n                                            return venteCommunes.map(\n                                              (commune, index) => ({\n                                                id:\n                                                  commune +\n                                                  '000' +\n                                                  venteSections[index],\n                                                vente: vente,\n                                              })\n                                            );\n                                          })\n                                          .filter(\n                                            (venteParSection) =>\n                                              venteParSection.id === sectionID &&\n                                              (venteParSection.vente.idnatmut ===\n                                                '1' ||\n                                                venteParSection.vente.idnatmut ===\n                                                  '4') &&\n                                              (venteParSection.vente.codtypbien.startsWith(\n                                                '1'\n                                              ) &&\n                                                venteParSection.vente.codtypbien !==\n                                                  '14' ||\n                                                venteParSection.vente.codtypbien ===\n                                                  '21') &&\n                                              venteParSection.vente.anneemut >=\n                                                '2017' &&\n                                              venteParSection.vente.anneemut <=\n                                                '2020'\n                                          );\n\n                                        if (\n                                          document.getElementById('Count')\n                                            .checked\n                                        ) {\n                                          totalVentes += Math.round(\n                                            ventesDansCetteSection.length / 4\n                                          );\n                                          document.getElementById('NumberSell').textContent =\n                                            'Total: ' + totalVentes;\n                                          layer.setStyle({\n                                            fillColor: 'red',\n                                          });\n                                          clickedSections.push(layer);\n                                        } else {\n                                          totalVentes = Math.round(\n                                            ventesDansCetteSection.length / 4\n                                          );\n                                          document.getElementById('NumberSell').textContent =\n                                            'Total: ' + totalVentes;\n                                        }\n                                      });\n                                    },\n                                  }).addTo(map);\n                                });\n                            }\n                          },\n                        });\n                      },\n                    }).addTo(map);\n                  });\n              });\n            },\n          }).addTo(map);\n        });\n    });\n\n    function filterCommunes(departementCode, communes) {\n      return communes.features.filter(function (commune) {\n        return commune.properties.code.startsWith(departementCode);\n      });\n    }\n\n    function filterSections(communeCode, sections) {\n      return sections.features.filter(function (section) {\n        return section.properties.id.startsWith(communeCode);\n      });\n    }\n\n    // Reset totalVentes and clickedCommunes when reset button is clicked\n    document.getElementById('reset').addEventListener('click', function () {\n      totalVentes = 0;\n      document.getElementById('NumberSell').textContent = '';\n      clickedCommunes.forEach(function (commune) {\n        commune.setStyle({\n          fillColor: 'blue',\n        }); // Replace 'blue' with your original color\n      });\n      clickedCommunes = [];\n    });\n"]}