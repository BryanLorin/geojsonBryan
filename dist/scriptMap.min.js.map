{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","sectionsLayer","document","comsecTDiv","decrement","arguments","length","undefined","ventesDansCetteCommune","flatMap","vente","venteCommunes","updateTotalVentes","communeCode","l_codinsee","replace","JSON","parse","l_section","id","venteSections","section","index","venteParCommune","idnatmut","codtypbien","startsWith","anneemut","Math","round","textContent","filterCommunes","departementCode","communes","features","filter","commune","properties","code","filterSections","sections","addEventListener","inputContainer","querySelector","innerHTML","communesInput","type","value","concat","nom","join","readOnly","appendChild","sectionsInput","createElement","forEach","selectedCommune","totalSecteur","ventesDansCetteSection","sectionID","substring","venteParSection","geoJSON","departements","onEachFeature","layer","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","fillColor","some","_leaflet_id","communeElement","filteredSections","removeChild","setStyle","alreadyClicked","clickedSection"],"mappings":"aAAA,IAIGA,aACCC,OALAC,IAAMC,EAAED,IAAI,OAAOE,QAAQ,CAAC,KAAM,MAAO,GAA7CD,EAAAE,UAAYH,qDAAZ,CAEEG,QAAF,KACEC,MAAOJ,KAGT,IAOIK,cAFAC,cALAC,YAAJ,EACIC,gBAAJ,GACIC,gBAAkB,GAClBC,WAAAA,SAAuBC,eAAA,cAEvBL,yBAA2B,GAD3BM,yBAAsBD,GAEtBE,aAAAA,EACAR,OAAAA,SAAJM,eAAA,UACIG,WAAJC,SAAAJ,eAAA,WAGA,SAAIK,kBAAsBL,GAE1B,IAFiBM,EAEjB,EAAAC,UAAAC,aAAAC,IAAAF,UAAA,IAAAA,UAAA,GAEMG,EAAyBd,OAAOe,QAAQ,SAAAC,GAD9C,IAAAC,EAASC,KAAkBC,MAAAA,EAAgCC,WAAAC,QAAA,KAAA,MAAnBX,EAAmBY,KAAAC,MAAAP,EAAAQ,UAAAH,QAAA,KAAA,MAEvD,OAAIJ,EAAgBK,IAAKC,SAAAA,EAAMP,GAANO,MAAYH,CACrCK,GAAIC,EAEJC,QAAOV,EAAkBW,GAAAZ,MAAqBA,OAE5CW,OAAAA,SAAAA,GAASD,OACTV,EAAOA,KAAAA,IAHgB,MAAqBa,EAArBb,MAAAc,UAAA,MAAAD,EAAAb,MAAAc,YAAlBD,EAAPb,MAAAe,WAAAC,WAAA,MAAA,OAAAH,EAAAb,MAAAe,YAAA,OAAAF,EAAAb,MAAAe,aAKuB,QATIF,EASnBb,MAAAa,UAAeA,EAAAb,MAAAiB,UAAA,SAOrBvB,EAAJT,aAAeiC,KAAAC,MAAArB,EAAAF,OAAA,GAAfX,aAEOiC,KAAAC,MAAArB,EAAAF,OAAA,GAIPJ,SAASJ,eAAe,cAAcgC,YAAc,UAAYnC,YA6R/D,SAFDoC,eAAAC,EAAAC,GAGArC,OAAAA,EAAesC,SAAfC,OAAA,SAAAC,GANF,OAAAA,EAAAC,WAAAC,KAAAZ,WAAAM,KANA,SAASO,eAAe1B,EAAa2B,GACnC,OAAOA,EAASN,SAASC,OAAO,SAAUd,GACxC,OAAOA,EAAQgB,WAAWlB,GAAGO,WAAWb,KAjR5CX,SAASJ,eAAe,SAAS2C,iBAAiB,QAAS,WAA1BA,IAAjCvC,gBAASJ,SACPH,YAAIC,EACFD,SAAAA,eAAA,cAAAmC,YAAA,UAAAnC,eAKJO,SAASJ,eAAe,UAAU2C,iBAAiB,QAAS,WAE1D,IAAIC,EAAiBxC,SAASyC,cAAc,iCAG5CD,EAAeE,UAAY,GAK3BC,IAAAA,EAAA3C,SAAsBT,cAAAA,SAAoCoD,EAAAC,KAAOV,OAAPS,EAA1DE,MAAAtD,yBAAAN,IAAA,SAAAiD,GAAA,MAAA,GAAAY,OAAAZ,EAAAa,IAAA,MAAAD,OAAAZ,EAAAE,QAAAY,KAAA,MACAL,EAAcM,UAAW,EACzBT,EAAeU,YAAYP,GAG3B,IAAIQ,EAAgBnD,SAASoD,cAAc,SAC3CD,EAAcP,KAAO,OACrBO,EAAcN,MAAQ/C,yBAAyBb,IAAI,SAAAkC,GAAA,MAAA,GAAA2B,OAAA3B,EAAO4B,IAAP,MAAAD,OAAO3B,EAAAiB,QAAAY,KAAA,MAAAG,EAAAF,UAAO9B,EAAPqB,EAA1DU,YAAAC,GAMA5D,yBAAyB8D,QAAQ,SAAAC,GAAjC/D,IAAAA,EAAyB8D,OAAQ9C,QAAA+C,SAAAA,GAC/B,IAAIhD,EAAAA,KAAsBS,MAAGvB,EAAOe,WAAQM,QAAAL,KAAS,MAC/CC,EAAgBK,KAAKC,MAAMP,EAAMI,UAANC,QAAA,KAAA,MAG/B,OAAOJ,EAAcxB,IAAI,SAAAiD,EAACA,GAAD,MAAUd,CAAVH,GAAAiB,EACvBjB,QAAIiB,EADwCd,GAE5CD,MAAAA,OAF4Cc,OAArB,SAAAZ,GAAA,OAAAA,EAAzBJ,KAAAqC,EAAAlB,OAKuB,MAAtBH,EAAOzB,MAAAa,UAAe,MAAAA,EAAAb,MAAAc,YAAAD,EACvBA,MAAgBJ,WAAOqC,WAAe,MACF,OADpCjC,EACCA,MAAgBb,YADjB,OAC2Ca,EAAgBb,MAAMc,aAXnE,QAAAD,EAAAb,MAAAiB,UAAAJ,EAAAb,MAAAiB,UAAA,SAgBA8B,cAAgB7B,KAAKC,MAAMrB,EAAuBF,OAAS,KAQ3DN,yBAAI0D,QAAyBhE,SAAAA,GAC3B,IACAiE,EADIhD,EAA2BD,KAAMI,UAAN,EAAiBC,GACvBE,KAAMP,EAAgBK,KAAQ6C,UAAnC,GAEKF,EAAqBhE,OAAAe,QAAA,SAAAC,GAC5CS,IAAAA,EAAcH,KAAVC,MAAkBG,EAAAA,WADsBL,QAAA,KAAA,MAE5CL,EAAOA,KAAAA,MAAAA,EAAAA,UAAAA,QAAAA,KAAAA,MAFgB,OAAzBC,EAAAxB,IAAA,SAAAiD,EAAAd,GAAA,MAAA,CAICa,GAAAA,EAAO,MAAA0B,EAAevC,GAAAZ,MACvBmD,OAMFJ,OAAAA,SAAAA,GAAqB5B,OAGvBgC,EAAA1C,KAAAwC,IARwC,MAAnCE,EAAgBnD,MAAMc,UAAuD,MAAnCqC,EAAgBnD,MAAMc,YASrEtB,EAASJ,MAAe2B,WAAxBC,WAAgD+B,MAAhD,OAAgDA,EAAhD/C,MAAAe,YAAA,OAAAoC,EAAAnD,MAAAe,aAnEF,QAAAoC,EAAAnD,MAAAiB,UAAAkC,EAAAnD,MAAAiB,UAAA,SA0EExC,cAAcyC,KAAAC,MAAA6B,EAAiBpD,OAAA,KAI7Bf,SAAOO,eAAE,gBAAAiD,MAAAU,eAQPrE,OAAE0E,iBAAQC,SAAc,WACtBC,IAAAA,EAAAA,KAAajB,MACXkB,IAAAA,UAAA,SAAkBA,GAChB9E,IAAA+E,YAAIlC,KAGY5C,EAAAE,UAAA,qDAAA,CAAAC,QACb4E,KACCzE,MAAAA,KAGJ0E,MAAAA,kEAAAA,OAAKC,EAALD,kBAAAA,OAAKC,EAALD,aAEID,KAAA,SAAOG,GACR,OACAH,EAAKI,SAEJJ,KAAA,SAAIK,GAjBdpF,EAAE0E,QAAQC,EAAc,CAmBdC,cAAIxE,SAAeiF,EAAAR,GACjB9E,EAAAA,GAAI+E,QAAAA,WACL,IAAAlC,EAAAyC,EAAApC,WAAAC,KAED9C,MAAAA,kEAAAA,OAA4C6E,EAA5C7E,eAAAA,OAA4C6E,EAA5C7E,KAAAA,OAA4CwC,EAA5CxC,UACEwE,KAAAA,SAAAA,GAAa,OAAEM,EAAAC,SACbN,KAAAA,SAAAA,GACES,OAAOC,IAIjB5E,MAAAA,kEAAAA,OAEYsE,EAFZtE,cAAAA,OAEYsE,EAFZtE,aAlBGoE,KAAK,SAAUG,GAqBN,OAAAA,EAAWC,SAETJ,KAAA,SAAI/B,GAEFa,IAAAA,EAAaZ,eAAgBL,EAD7BM,aAAMzB,GADMrB,eAIdC,IAAAA,YAAAA,eACeD,cAAwBJ,EAAA0E,QAAAU,EAAA,CACxCR,cAED,SAAAS,EAAAR,GAlBJA,EAAMW,GAAG,CACPF,MAAO,WAkBmD,IAAA7D,EAAA4D,EACtDI,WAAcvC,KADwCwC,EAAxDL,EAAApC,WAAAY,IAMC,GApBblD,WAAW+B,YAAc,QAAUgD,EAoBtB5E,SAAAJ,eAAA,UAAAiF,QAAA,CAEGvE,IAAAA,EAAAA,CACEG,KAAAA,EACAS,IAAAA,EAAaiB,WAAGY,KAEKxD,yBAAqBuF,KAAA5C,GAC5CjB,EAAIiB,SADwC,CAAA6C,UAAA,SARhD,IAQErF,gBAAAsF,KAAA,SAAAL,GAAA,OAKC1C,EAAOZ,cAAe0C,EAAAkB,cAbzB,CAwBI,IAAIC,EAAyB1F,OAAC4D,QAAc,SAAA5C,GAC5C0E,IAAAA,EAAetD,KAAfb,MAA6B6D,EAA7BhE,WAAAC,QAAA,KAAA,MACAqE,EAAApE,KAAuBH,MAAAA,EAAcA,UALOE,QAKO,KAAA,MACnDqE,OAAAA,EAAe3C,IAAAA,SAAAA,EAAiBnB,GAAjBmB,MAA0B,CACvC7B,GAAAA,EAlBFS,QAASD,EAAcE,GAmBrBnB,MAAAA,OAEFA,OAAU,SAAAoB,GAAa6D,OAEvBnB,EAAe9C,KAAAN,IAAa,MAAXoE,EAAWvE,MAAAc,UAAA,MAAAD,EAAAb,MAAAc,YAA5BD,EAAAb,MAAAe,WAAAC,WAAA,MAAA,OAAAH,EAAAb,MAAAe,YAAA,OAAAF,EAAAb,MAAAe,aACA,QAAA7B,EAAgBoF,MAAKf,UAArB1C,EAAAb,MAAAiB,UAAA,SAGAzB,GAAAA,SAASJ,eAAe,YAAcgC,QACvC,GAAA5B,SAAAJ,eAAA,SAAAiF,QAAA,CACFnE,kBAAAC,GAEGX,IAAQkF,EAAgBlF,SAAxBoD,cAA6C,OAC1C8B,EAAAtD,YAAAgD,EAEDM,EAAgBb,QAAhB1D,YAAAA,EAEDsD,EAAe3B,iBAAU,QAAA,WACpB6C,kBAAmB9C,GAAc,GAlBrCpC,WAAWmF,YAAYF,KAqBrBjG,WAAI+E,YAAYjE,GAjBpBgE,EAAMsB,SAAS,CAAEN,UAAW,QAoB3BhF,gBAAkB6D,KAAFG,QAEbA,YAASrC,KAASC,MAAArB,EAAYF,OAAA,GAC5BJ,SAAIyD,eAAYc,cAAmBtD,YAEnC,UAAAxB,YAjBNO,SAASJ,eAAe,YAAYiF,SAsB9BX,MAAA,kEAAApB,OAA8CqB,EAA9C,cAAArB,OAA8CqB,EAA9C,KAAArB,OAA8ChB,EAA9C,UACAmC,KAAA,SAAWG,GACThC,OAAAA,EAAMxB,SACiCqD,KAAA,SAAI/B,GAAJ,IAAAiD,EAAuDpC,eAAAA,EAAAA,GAEhGjD,eACAiE,IAAAA,YAAehE,eAChBA,cAGCb,EAAA0E,QAAAuB,EAAA,CAnBJrB,cAAe,SAAUS,EAASR,GAChCA,EAAMW,GAAG,QAAS,WAmBZY,IAAAA,EAAcf,EAAG5E,WAAgBqF,GAfjCpE,EAAa6C,EAAUC,UAAU,EAAG,GAmBpC4B,EAAgB7B,EAAAC,UAAA,GAfpB,GAAG1D,SAASJ,eAAe,UAAUiF,QAAS,CAoBxCrB,IAAAA,EAAAA,CACE/C,KAAAA,EAAgBK,KAAAE,EAChBE,IAAAA,aAAgBJ,SAAWN,KAAK,SAAA0B,GAAClB,OAAUH,EAAQsB,WAAnCC,OAApBxB,IAAAuB,WAAAY,KAEyBjD,yBAAqBgF,KAAA3D,GAC5CF,EAAIiB,SAAO,CAAG6C,UAAQ7D,UAWxBzB,IAPgBwB,gBAAhB+D,KACCrB,SAAAA,GAAAA,OAVH4B,EAAAN,cAAAlB,EAAAkB,cAgBExF,CAGAE,IAAAA,EAAAH,OAAAe,QAAA,SAAAC,GACK,IAAAC,EAAAK,KAAAC,MAAAP,EAAAI,WAAAC,QAAA,KAAA,MACLpB,EAAyB+D,KAAAA,MAAAA,EAAAA,UAAuBpD,QAAhD,KAAA,MAED,OAAAK,EAAAxB,IAAA,SAAAiD,EAAAd,GAAA,MAAA,CAnDLH,GAAAiB,EAAA,MAAAhB,EAAAE,GAqDCZ,MAAAA,OAlEPyB,OAAA,SAAA0B,GAAA,OAqEDA,EAAA1C,KAAAwC,IACF,MAAAE,EAAAnD,MAAAc,UAAA,MAAAqC,EAAAnD,MAAAc,YAvIHqC,EAAAnD,MAAAe,WAAAC,WAAA,MAAA,OAAAmC,EAAAnD,MAAAe,YAAA,OAAAoC,EAAAnD,MAAAe,aA0ID,QAAAoC,EAAAnD,MAAAiB,UAAAkC,EAAAnD,MAAAiB,UAAA,SAjKTzB,SAAAJ,eAAA,SAAAiF,SAqKDpF,aAAAiC,KAAAC,MAAA6B,EAAApD,OAAA,GAvKHJ,SAAAJ,eAAA,cAAAgC,YAAA,UAAAnC,YALJsE,EAAAsB,SAAA,CAAAN,UAAA,QATFpF,gBAAAmF,KAAAf,KA0LwBjC,YAA2BJ,KAAAC,MAAA6B,EAAApD,OAAA,GACjBJ,SAAUkC,eAAS,cAAAN,YAAA,UAAAnC,mBAhBpBV,MAAME,cAOpBF,MAAME,YAuBvBS,MAAAA,SAHFM,SAASJ,eAAe,SAAS2C,iBAAiB,QAAS,WACzD9C,YAAc,EACdO,SAASJ,eAAe,cAAcgC,YAAc,GACpDlC,gBAAgB2D,QAAQ,SAAUnB,GAChCA,EAAQmD,SAAS,CAAEN,UAAW,WAEhCrF,gBAAkB","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\nvar comsecTDiv = document.getElementById('comsecT');\n\n// Ajout de la fonction pour mettre à jour le total\nfunction updateTotalVentes(communeCode, decrement = false) {\n  var ventesDansCetteCommune = ventes.flatMap(vente => {\n    var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n    var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n      \n    return venteCommunes.map((commune, index) => ({\n      id: commune,\n      section: venteSections[index],\n      vente: vente\n    }));\n  }).filter(venteParCommune => \n    venteParCommune.id === communeCode && \n    (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n    (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n    venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n  );\n\n  if (decrement) {\n    totalVentes -= Math.round(ventesDansCetteCommune.length / 4);\n  } else {\n    totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n  }\n\n  document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n}\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            updateTotalVentes(communeCode);\n                      \n                            var communeElement = document.createElement('div');\n                            communeElement.textContent = communeNom;\n                            communeElement.dataset.communeCode = communeCode;  // Stocker le code de la commune pour le retrouver lors de la suppression\n                            communeElement.addEventListener('click', function () {\n                              updateTotalVentes(communeCode, true);  // Mettre à jour le total en décrémentant\n                              comsecTDiv.removeChild(communeElement);  // Supprimer la commune de la div\n                            });\n                            comsecTDiv.appendChild(communeElement);\n                      \n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}