{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","totalSecteur","document","fillColor","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","comsecTDiv","firstChild","forEach","communeInput","type","nom","value","sectionInput","concat","join","sectionsInput","readOnly","appendChild","textContent","addEventListener","querySelector","inputContainer","innerHTML","communesInput","createElement","selectedCommune","vente","venteCommunes","JSON","parse","l_codinsee","replace","l_section","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","Math","round","ventesDansCetteCommune","length","selectedSection","ventesDansCetteSection","sectionCode","flatMap","venteParSection","sectionID","select","then","this","departements","geoJSON","layer","onEachFeature","fetch","region","response","json","filteredCommunes","feature","filterCommunes","on","communeNom","removeLayer","setStyle","click","alreadyClicked","clickedCommune","_leaflet_id","checked","filteredSections","sectionsLayer","push","substring","clickedSection","some"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nvar comsecTDiv = document.getElementById('comsecT');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  // Supprimez tous les enfants de comsecTDiv\n  while(comsecTDiv.firstChild){\n    comsecTDiv.removeChild(comsecTDiv.firstChild);\n  }\n\n  // Pour chaque commune sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  selectedCommunesCodinsee.forEach(commune => {\n    var communeInput = document.createElement('input');\n    communeInput.type = 'text';\n    communeInput.value = `${commune.nom}: ${commune.code}`;\n    communeInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(communeInput);\n  });\n\n  // Pour chaque section sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  selectedSectionsCodinsee.forEach(section => {\n    var sectionInput = document.createElement('input');\n    sectionInput.type = 'text';\n    sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n    sectionInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(sectionInput);\n  });\n\n  // Votre code existant\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});"]}