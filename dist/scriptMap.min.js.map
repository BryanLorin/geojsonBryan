{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","totalSecteur","addEventListener","this","isNaN","partValue","textContent","marketShare","parseFloat","replace","toFixed","inputContainer","querySelector","communesInput","value","readOnly","createElement","type","appendChild","concat","nom","join","sectionsInput","JSON","parse","ventesDansCetteCommune","vente","l_section","venteCommunes","index","venteSections","venteParCommune","selectedCommune","Math","round","idnatmut","codtypbien","anneemut","sectionCode","selectedSection","substring","ventesDansCetteSection","flatMap","l_codinsee","venteParSection","sectionID","region","eachLayer","layer","length","response","select","feature","fetch","removeLayer","then","filteredCommunes","json","geoJSON","departements","onEachFeature","click","data","fillColor","alreadyClicked","on","clickedCommune","communeNom","setStyle","some","_leaflet_id","filteredSections","checked","sectionsLayer","push","clickedSection","forEach"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Part').addEventListener('input', function() {\n  // Récupérer la valeur de l'input \"Part\"\n  var partValue = parseFloat(this.value);\n\n  // Vérifier si \"Part\" est un nombre valide\n  if (!isNaN(partValue)) {\n    // Récupérer le total des ventes\n    var totalVentes = parseFloat(document.getElementById('NumberSell').textContent.replace('Total: ', ''));\n\n    // Calculer le résultat et l'afficher dans le \"text block\" avec l'ID \"MarketShare\"\n    var marketShare = (partValue * 100) / totalVentes;\n    document.getElementById('MarketShare').textContent = 'Market Share: ' + marketShare.toFixed(2) + '%';\n  } else {\n    // Si \"Part\" n'est pas un nombre valide, afficher un message d'erreur ou laisser le \"text block\" vide\n    document.getElementById('MarketShare').textContent = 'Market Share: -';\n  }\n});\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}