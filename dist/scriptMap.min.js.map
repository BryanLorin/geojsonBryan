{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","totalSecteur","addEventListener","resultat","parseFloat","value","console","resultatInput","createElement","type","readOnly","resultatDiv","innerHTML","appendChild","length","textContent","inputContainer","querySelector","communesInput","nom","concat","join","sectionsInput","forEach","selectedCommune","ventesDansCetteCommune","flatMap","vente","venteCommunes","JSON","parse","l_codinsee","replace","venteSections","l_section","index","venteParCommune","idnatmut","codtypbien","Math","round","anneemut","selectedSection","sectionID","substring","venteParSection","layer","ventesDansCetteSection","onEachFeature","on","eachLayer","fetch","then","region","response","departements","geoJSON","removeLayer","feature","json","click","filteredCommunes","filterCommunes","setStyle","alreadyClicked","communeNom","checked","push","some","clickedCommune","_leaflet_id","fillColor","sectionsLayer","filteredSections","clickedSection","find"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('egalmarcher').addEventListener('click', function() {\n  // Get the input value from the 'nbventesclient' text field\n  var nbventesclientValue = parseFloat(document.getElementById('nbventesclient').value);\n\n  // Calculate the result as (nbventesclient * totalVentes) / 100\n  var resultat = (nbventesclientValue * totalVentes) / 100;\n  console.log('Résultat du calcul :', resultat);\n\n  // Create a new input element for the result\n  var resultatInput = document.createElement('input');\n  resultatInput.type = 'text';\n  resultatInput.value = resultat;\n  resultatInput.readOnly = true; // Set the input to read-only\n\n  // Append the new input element to the 'resultatmarcher' div\n  var resultatDiv = document.getElementById('resultatmarcher');\n  resultatDiv.innerHTML = ''; // Clear any previous inputs\n  resultatDiv.appendChild(resultatInput);\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n\n\n"]}