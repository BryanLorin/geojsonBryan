{"version":3,"sources":["scriptMap.js"],"names":["window","onload","location","href","indexOf","sessionStorage","clear","localStorage","replace","addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","totalSecteur","document","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","comsecTDiv","firstChild","forEach","communeInput","type","nom","value","sectionsInput","createElement","concat","join","appendChild","textContent","length","addEventListener","inputContainer","querySelector","innerHTML","communesInput","readOnly","selectedCommune","flatMap","ventesDansCetteCommune","parse","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","Math","round","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","onEachFeature","layer","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","fillColor","some","_leaflet_id","setStyle","l_section","sectionsLayer","filteredSections","alreadyClicked","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["window.onload = function() {\n  if(window.location.href.indexOf('reload')==-1) {\n    window.location.href=window.location.href+'?reload';\n  } else {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.href=window.location.href.replace('?reload','');\n  }\n}\n\nvar map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nvar comsecTDiv = document.getElementById('comsecT');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  // Supprimez tous les enfants de comsecTDiv\n  while(comsecTDiv.firstChild){\n    comsecTDiv.removeChild(comsecTDiv.firstChild);\n  }\n\n  // Pour chaque commune sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  selectedCommunesCodinsee.forEach(commune => {\n    var communeInput = document.createElement('input');\n    communeInput.type = 'text';\n    communeInput.value = `${commune.nom}: ${commune.code}`;\n    communeInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(communeInput);\n  });\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  comsecTDiv.appendChild(sectionsInput);\n});\n\n// Votre code existant\nif (clickedSections.length === 0) {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n}\n\n\n\n  // Votre code existant\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});"]}