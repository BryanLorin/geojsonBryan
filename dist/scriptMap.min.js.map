{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","document","sectionsLayer","select","color","div","createElement","className","createSelectionDiv","type","nom","item","code","style","textContent","addEventListener","filter","clicked","comsecTDiv","removeChild","filterCommunes","departementCode","communes","features","commune","onSectionClick","startsWith","sectionName","communeCode","sections","sectionVentes","section","properties","id","onCommuneClick","e","push","communeName","communeVentes","fillColor","sectionCode","innerHTML","forEach","appendChild","inputContainer","querySelector","communesInput","value","concat","join","readOnly","sectionsInput","ventesDansCetteCommune","flatMap","vente","JSON","l_codinsee","selectedCommune","parse","replace","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","totalSecteur","Math","round","length","selectedSection","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","removeLayer","on","click","alreadyClicked","communeNom","clickedCommune","_leaflet_id","checked","setStyle","some","l_section","filteredSections","filterSections","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar comsecTDiv = document.getElementById('comsecT');\nvar select = document.getElementById('region');\n\n\nfunction createSelectionDiv(type, item, color) {\n  var div = document.createElement('div');\n  div.className = type + '-selection';\n  div.style.color = color;\n  div.textContent = item.nom + ': ' + item.code;\n  div.addEventListener('click', function () {\n    if (type === 'commune') {\n      clickedCommunes = clickedCommunes.filter(clicked => clicked.code !== item.code);\n    } else {\n      clickedSections = clickedSections.filter(clicked => clicked.code !== item.code);\n    }\n\n    totalVentes -= item.ventes;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n\n    comsecTDiv.removeChild(div);\n  });\n  return div;\n}\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  comsecTDiv.innerHTML = '';\n  totalVentes = 0;\n\n  clickedCommunes.forEach(commune => {\n    comsecTDiv.appendChild(createSelectionDiv('commune', commune, 'blue'));\n    totalVentes += commune.ventes;\n  });\n\n  clickedSections.forEach(section => {\n    comsecTDiv.appendChild(createSelectionDiv('section', section, 'red'));\n    totalVentes += section.ventes;\n  });\n\n  document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\nfunction onCommuneClick(e) {\n  // ...\n  clickedCommunes.push({ code: communeCode, nom: communeName, ventes: communeVentes });\n  // ...\n}\n\nfunction onSectionClick(e) {\n  // ...\n  clickedSections.push({ code: sectionCode, nom: sectionName, ventes: sectionVentes });\n  // ...\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}