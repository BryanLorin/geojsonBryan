{"version":3,"sources":["scriptMap.js"],"names":["window","onload","location","href","indexOf","sessionStorage","clear","localStorage","replace","addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","totalSecteur","document","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","comsecTDiv","firstChild","forEach","communeInput","type","nom","value","sectionInput","concat","join","appendChild","console","log","innerHTML","length","textContent","addEventListener","inputContainer","querySelector","communesInput","createElement","readOnly","sectionsInput","ventesDansCetteCommune","flatMap","vente","JSON","l_codinsee","selectedCommune","parse","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","Math","round","sectionCode","selectedSection","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","select","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","removeLayer","fillColor","on","click","alreadyClicked","communeNom","clickedCommune","_leaflet_id","checked","push","setStyle","some","l_section","filteredSections","sectionsLayer","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["window.onload = function() {\n  if(window.location.href.indexOf('reload')==-1) {\n    window.location.href=window.location.href+'?reload';\n  } else {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.href=window.location.href.replace('?reload','');\n  }\n}\n\nvar map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nvar comsecTDiv = document.getElementById('comsecT');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  // Supprimez tous les enfants de comsecTDiv\n  while(comsecTDiv.firstChild){\n    comsecTDiv.removeChild(comsecTDiv.firstChild);\n  }\n\n  // Pour chaque commune sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  selectedCommunesCodinsee.forEach(commune => {\n    var communeInput = document.createElement('input');\n    communeInput.type = 'text';\n    communeInput.value = `${commune.nom}: ${commune.code}`;\n    communeInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(communeInput);\n  });\n\n  selectedSectionsCodinsee.forEach(section => {\n    var sectionInput = document.createElement('input');\n    sectionInput.type = 'text';\n    sectionInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n    sectionInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(sectionInput);\n    console.log('Input créé pour section: ', sectionInput);\n  });\n  \n  console.log('Etat de comsecTDiv après ajout des sections: ', comsecTDiv.innerHTML);\n\n  // Votre code existant\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});"]}