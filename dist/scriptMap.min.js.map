{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","totalSecteur","addEventListener","select","textContent","split","trim","partValue","parseFloat","parseInt","inputContainer","querySelector","innerHTML","communesInput","type","value","concat","nom","join","readOnly","appendChild","sectionsInput","createElement","forEach","selectedCommune","flatMap","ventesDansCetteCommune","parse","replace","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","Math","round","length","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","onEachFeature","layer","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","fillColor","some","_leaflet_id","setStyle","l_section","sectionsLayer","filteredSections","alreadyClicked","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById(\"Part\").addEventListener('input', function () {\n  var partValue = parseFloat(this.value);\n  var totalVentes = parseInt(document.getElementById(\"NumberSell\").textContent.split(\":\")[1].trim());\n  var marketShare = Math.ceil((partValue * 100) / totalVentes);\n  document.getElementById(\"MarketShare\").textContent = \"Part de marché : \" + marketShare + \"%\";\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\n\n\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}