{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","selectedSectionsCodinsee","communesLayer","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedCommunesCodinsee","sectionsLayer","totalSecteur","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","addEventListener","marketShare","value","this","textContent","toFixed","console","log","error","length","inputContainer","querySelector","innerHTML","communesInput","type","join","createElement","readOnly","concat","nom","appendChild","sectionsInput","ventesDansCetteCommune","parse","vente","l_codinsee","venteSections","JSON","l_section","replace","index","venteCommunes","venteParCommune","selectedCommune","idnatmut","Math","round","codtypbien","anneemut","selectedSection","sectionID","substring","venteParSection","region","ventesDansCetteSection","fetch","layer","removeLayer","response","filteredCommunes","then","onEachFeature","feature","on","geoJSON","click","json","data","communeNom","fillColor","alreadyClicked","clickedCommune","flatMap","setStyle","_leaflet_id","filteredSections","checked","push","clickedSection","find","some","forEach"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  \nvar historyDiv = document.getElementById('Historique'); \nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('NumberSell').addEventListener('input', function() {\n  try {\n    let partValue = document.getElementById('Part').value;\n    let marketShare = (partValue * 100) / this.value;\n    document.getElementById('MarketShare').textContent = \"Market Share: \" + marketShare.toFixed(2) + \"%\";\n    console.log(\"Market Share: \" + marketShare.toFixed(2) + \"%\"); // Log the result to the console\n  } catch (error) {\n    console.error(\"An error occurred: \", error);\n  }\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}