{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","totalSecteur","document","select","numberSellElement","updateMarketShare","numberSell","parseInt","textContent","split","marketShare","marketShareElement","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","addEventListener","inputContainer","querySelector","communesInput","value","readOnly","createElement","type","appendChild","concat","nom","join","sectionsInput","JSON","parse","ventesDansCetteCommune","vente","l_section","venteCommunes","index","venteSections","replace","venteParCommune","selectedCommune","Math","round","idnatmut","codtypbien","anneemut","sectionCode","selectedSection","substring","ventesDansCetteSection","flatMap","l_codinsee","venteParSection","sectionID","region","eachLayer","layer","length","response","feature","fetch","this","removeLayer","then","filteredCommunes","json","geoJSON","departements","onEachFeature","click","data","fillColor","alreadyClicked","on","clickedCommune","communeNom","setStyle","some","_leaflet_id","filteredSections","checked","sectionsLayer","push","clickedSection","forEach"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nvar numberSellElement = document.getElementById(\"NumberSell\");\nvar partElement = document.getElementById(\"Part\");\nvar marketShareElement = document.getElementById(\"MarketShare\");\n\n// Définir une fonction pour mettre à jour la part de marché\nfunction updateMarketShare() {\n  // Obtenir les valeurs actuelles\n  var numberSell = parseInt(numberSellElement.textContent.split(\" \")[1]);\n  var part = parseInt(partElement.value);\n\n  // Effectuer le calcul\n  var marketShare = (part * 100) / numberSell;\n\n  // Mettre à jour la valeur de \"MarketShare\"\n  marketShareElement.textContent = \"Market Share: \" + marketShare + \"%\";\n}\n\n// Attacher la fonction d'update à l'événement 'input' de l'élément \"Part\"\npartElement.addEventListener('input', updateMarketShare);\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}