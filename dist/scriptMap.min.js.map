{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","sectionsLayer","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","cumulativeVentes","addEventListener","select","part","textContent","marketShare","inputContainer","querySelector","innerHTML","communesInput","type","value","concat","nom","join","readOnly","appendChild","sectionsInput","createElement","forEach","selectedCommune","flatMap","ventesDansCetteCommune","parse","replace","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","totalSecteur","Math","round","length","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","layer","on","eachLayer","fetch","then","region","response","removeLayer","feature","onEachFeature","json","click","filteredCommunes","setStyle","alreadyClicked","communeNom","checked","push","some","clickedCommune","_leaflet_id","fillColor","l_section","filteredSections","clickedSection","find"],"mappings":"aAAA,IAIGA,aACCC,OALAC,IAAMC,EAAED,IAAI,OAAOE,QAAQ,CAAC,KAAM,MAAO,GAA7CD,EAAAE,UAAYH,qDAAZ,CAEEG,QAAF,KACEC,MAAOJ,KAGT,IAOIK,cAFAC,cALAC,YAAJ,EACIC,gBAAJ,GACIC,gBAAkB,GAClBC,WAAAA,SAAuBC,eAAA,cAEvBL,yBAA2B,GAD3BM,yBAAsBD,GAEtBE,aAAAA,EACAR,iBAAJ,EACIS,OAAAA,SAAJH,eAAA,UAkSK,SAFDI,eAAAC,EAAAC,GAGAR,OAAAA,EAAeS,SAAfC,OAAA,SAAAC,GAPF,OAAAA,EAAAC,WAAAC,KAAAC,WAAAP,KANF,SAASQ,eAAeC,EAAaC,GACnC,OAAOA,EAASR,SAASC,OAAO,SAAUQ,GACxC,OAAOA,EAAQN,WAAWO,GAAGL,WAAWE,KAtR5CI,SAAIC,eAAJ,QAAAC,iBAAA,QAAA,WACA,IAAIC,EAASH,KAAAA,MAEbA,GAAAA,kBAAwBI,EAAxB,CACE,IAAIA,EAAJ,IAAAA,EAAAH,iBAGED,SAASlB,eAAe,eAAeuB,YAAcC,KAExDN,SANDlB,eAAA,SAAAoB,iBAAA,QAAA,WASiCA,IAAjCF,gBAASlB,SACPH,YAAIC,EACFD,SAAAA,eAAA,cAAA0B,YAAA,UAAA1B,eAKJqB,SAASlB,eAAe,UAAUoB,iBAAiB,QAAS,WAE1D,IAAIK,EAAiBP,SAASQ,cAAc,iCAG5CD,EAAeE,UAAY,GAK3BC,IAAAA,EAAAV,SAAsBvB,cAAAA,SAAoCiC,EAAAC,KAAOpB,OAAPmB,EAA1DE,MAAAnC,yBAAAN,IAAA,SAAAoB,GAAA,MAAA,GAAAsB,OAAAtB,EAAAuB,IAAA,MAAAD,OAAAtB,EAAAE,QAAAsB,KAAA,MACAL,EAAcM,UAAW,EACzBT,EAAeU,YAAYP,GAG3B,IAAIQ,EAAgBlB,SAASmB,cAAc,SAC3CD,EAAcP,KAAO,OACrBO,EAAcN,MAAQ5B,yBAAyBb,IAAI,SAAA2B,GAAA,MAAA,GAAAe,OAAAf,EAAOgB,IAAP,MAAAD,OAAOf,EAAAL,QAAAsB,KAAA,MAAAG,EAAAF,UAAOlB,EAAPS,EAA1DU,YAAAC,GAMAzC,yBAAyB2C,QAAQ,SAAAC,GAAjC5C,IAAAA,EAAyB2C,OAAQE,QAAAD,SAAAA,GAC/B,IAAIE,EAAAA,KAAsBC,MAAG9C,EAAO4C,WAAQG,QAAAC,KAAS,MAC/CC,EAAgBC,KAAKJ,MAAME,EAAMG,UAANJ,QAAA,KAAA,MAG/B,OAAOE,EAAcxD,IAAI,SAAAoB,EAACA,GAAD,MAAUuC,CAAV/B,GAAAR,EACvBQ,QAAIR,EADwCuC,GAE5ChC,MAAAA,OAF4CR,OAArB,SAAAyC,GAAA,OAAAA,EAAzBhC,KAAAsB,EAAA5B,OAKuB,MAAtBH,EAAOoC,MAAAK,UAAe,MAAAA,EAAAL,MAAAM,YAAAD,EACvBA,MAAgBhC,WAAOsB,WAAe,MACF,OADpCU,EACCA,MAAgBL,YADjB,OAC2CK,EAAgBL,MAAMM,aAXnE,QAAAD,EAAAL,MAAAO,UAAAF,EAAAL,MAAAO,UAAA,SAgBAC,cAAgBC,KAAKC,MAAMb,EAAuBc,OAAS,KAQ3DrD,yBAAIsD,QAAyB5D,SAAAA,GAC3B,IACA6D,EADIZ,EAA2BD,KAAMG,UAAN,EAAiBJ,GACvBD,KAAME,EAAgBD,KAAQe,UAAnC,GAEKF,EAAqB5D,OAAA4C,QAAA,SAAAI,GAC5C3B,IAAAA,EAAc6B,KAAVJ,MAAkBiB,EAAAA,WADsBhB,QAAA,KAAA,MAE5CC,EAAOA,KAAAA,MAAAA,EAAAA,UAAAA,QAAAA,KAAAA,MAFgB,OAAzBC,EAAAxD,IAAA,SAAAoB,EAAAuC,GAAA,MAAA,CAICxC,GAAAA,EAAO,MAAAoD,EAAeZ,GAAAJ,MACvBgB,OAMFR,OAAAA,SAAAA,GAAqBE,OAGvBM,EAAA3C,KAAAwC,IARwC,MAAnCG,EAAgBhB,MAAMM,UAAuD,MAAnCU,EAAgBhB,MAAMM,YASrEhC,EAASlB,MAAe6D,WAAxBjD,WAAgDwC,MAAhD,OAAgDA,EAAhDR,MAAAiB,YAAA,OAAAD,EAAAhB,MAAAiB,aAnEF,QAAAD,EAAAhB,MAAAO,UAAAS,EAAAhB,MAAAO,UAAA,SA2EE9D,cAAcgE,KAAAC,MAAAE,EAAiBD,OAAA,KAI7B9D,SAAOO,eAAE,gBAAA8B,MAAAsB,eAQP9D,OAAEwE,iBAAQC,SAAc,WAEpBC,IAAAA,EAAMC,KAAGnC,MACPzC,IAAA6E,UAAI7D,SAAAA,GAEJ8D,IAAAA,YAAKH,KACW1E,EAAAE,UACb4E,qDAAa,CACZxE,QAAAA,KACDT,MAJHE,KAQI8E,MAAA,kEAAApC,OAAAsC,EAAA,kBAAAtC,OAAAsC,EAAA,aACDD,KAAA,SACKE,GACJlF,OAAAA,EAAAA,SAjBXgF,KAAK,SAAUL,GAoBJzE,EAAAwE,QAAIpE,EAAJ,CACEL,cAAIkF,SAAY7E,EAAAA,GACjBsE,EAAAC,GAAA,QAAA,WAlBL,IAAI5D,EAAkBmE,EAAQ9D,WAAWC,KAqBnC8D,MAAAA,kEAAAA,OAAyCJ,EAAzCI,eAAAA,OAAyCJ,EAAzCI,KAAAA,OAAyCpE,EAAzCoE,UACET,KAAAA,SAAAA,GAAS,OAAAM,EAAAI,SACPC,KAAAA,SAAAA,GAEhB/E,OAAIkB,IAjBEqD,MAAK,kEAAApC,OAAmEsC,EAAnE,cAAAtC,OAAsFsC,EAAtF,aAsBOD,KAAA,SAAGlD,GACD,OAAAoD,EAAAI,SAEE/D,KAAAA,SAAMG,GAnBlB,IAAI8D,EAAmBxE,eAAeC,EAoB1B2B,aAAKwC,GAEP7E,eACAqE,IAAAA,YAAMa,eACPnF,cAEDJ,EAAAwE,QAAAc,EAAA,CAnBNH,cAAe,SAAUD,EAASR,GAChCA,EAAMC,GAAG,CAmBLU,MAAIG,WAAoD,IAAAhE,EAAxD0D,EAAA9D,WAAAC,KAfRoE,EAAaP,EAAQ9D,WAAWsB,IAIxB,GAeA/B,WAAAsB,YAAIuD,QAAgBC,EAfjB7D,SAASlB,eAAe,UAAUgF,QAAS,CAoBxCnC,IAAAA,EAAa,CACbc,KAAAA,EAEJ3B,IAAOa,EAAAA,WAAkBb,KACvBf,yBAD4CgE,KAAAxE,GAE5CO,EAAAA,SAAS2C,CAAAA,UAAa,SAUtBzC,IAPM+B,gBAAeiC,KAAA,SAAAC,GAAA,OAAAA,EACvBlC,cAAuBnC,EAAvBsE,cAMElE,CAIF8C,IAAMa,EAASjF,OAAA4C,QAAA,SAAAI,GAAEyC,IAAAA,EAAWvC,KAAAJ,MAAAE,EAAAG,WAAAJ,QAAA,KAAA,MAA5BgB,EAAAb,KAAAJ,MAAAE,EAAA0C,UAAA3C,QAAA,KAAA,MAJF,OAMOE,EAAAxD,IAAA,SAAAoB,EAAAuC,GAAA,MAAA,CACLnD,GAAAA,EACAqB,QAASlB,EAAegD,GACxB7B,MAAAA,OAhBCX,OAAO,SAAAyC,GAAe,OAmBrB/B,EAASlB,KAAec,IACrB,MAAAmC,EAAAL,MAAAM,UAAmEmB,MAAnEpB,EAAAL,MAAAM,YAEDD,EAAgByB,MAAhBb,WAAAjD,WAAA,MAAA,OAAAqC,EAAAL,MAAAiB,YAAA,OAAAZ,EAAAL,MAAAiB,aAEwB,QAAzBO,EAAerD,MAAVoC,UAAoBF,EAAAL,MAAAO,UAAA,SAGpBhD,SAAAA,eAAe,SAAA6E,SACjB3F,aAAAgE,KAAgBlD,MAAAA,EAAhBoD,OAAA,GACDrC,SAAAlB,eAAA,cAAAuB,YAAA,UAAA1B,YAnBLsB,kBAAoBtB,YAqBjBM,EAAAA,SAAiB,CAAC2D,UAAQyB,QACzBd,gBAAeQ,KAAAjB,KAEXnE,YAAI4D,KAASH,MAAGkB,EAEhBjB,OAAA,GArBRrC,SAASlB,eAAe,cAAcuB,YAAc,UAAY1B,YAsBxDsB,kBAActB,aAIdqB,SAAGA,eAASlB,YAAegF,SAC3Bb,MAAA,kEAAApC,OAAcsC,EAAd,cAAAtC,OAAcsC,EAAd,KAAAtC,OAAc1B,EAAd,UACEM,KAAAA,SAAMoC,GACNf,OAAGsC,EAAElF,SAAkCgF,KAAA,SAA4C1D,GAFvE,IAAd6E,EAAA1E,eAAAC,EAAAC,GAKAiD,eAAiBqB,IAAAA,YAAWlF,eAhBjCA,cAAgBb,EAAEwE,QAAQyB,EAAkB,CAC3Cd,cAAe,SAAUD,EAASR,GAoB9BA,EAAIc,GAAAA,QAAc,WAAsC,IAAArB,EACtD+B,EAAeJ,WAAfnE,GAGE6D,EAAgBrB,EAAAC,UAAA,EAAA,GAClB4B,EAAS7B,EAAAC,UAAA,GAILF,GAAAA,SAAAA,eAAyB5D,UAAO4C,QAAQ,CAC1C,IAAIK,EAAAA,CACAc,KAAAA,EAAgBb,KAAAwC,EAEpBtD,IAAOa,aAAcxD,SAAIoG,KAAChF,SAAAA,GAAD,OAAUuC,EAAVtC,WAAAC,OAAAoC,IAAArC,WAAAsB,KACvBf,yBAAsB0C,KAAAA,GACtBf,EAAAA,SAAOA,CAAAA,UAAAA,UAWT1B,IAjBFnB,gBAAAmF,KAAA,SAAAM,GAAA,OARAA,EAAeJ,cAAgBpB,EAAMoB,cAyBnClE,CAFF,IAKOsC,EAAA5D,OAAA4C,QAAA,SAAAI,GACL/C,IAAAA,EAAyB2D,KAAAA,MAAAA,EAAAA,WAAAb,QAAzB,KAAA,MACS3C,EAAe8C,KAAAJ,MAAxBE,EAAsCrB,UAAcoB,QAAA,KAAY9C,MAEjE,OAAAgD,EAAAxD,IAAA,SAAAoB,EAAAuC,GAAA,MAAA,CApDL/B,GAAAR,EAAA,MAAAkD,EAAAX,GAsDCJ,MAAAA,OAnEPpC,OAAA,SAAAoD,GAAA,OAsEDA,EAAA3C,KAAAwC,IACF,MAAAG,EAAAhB,MAAAM,UAAA,MAAAU,EAAAhB,MAAAM,YA/HHU,EAAAhB,MAAAiB,WAAAjD,WAAA,MAAA,OAAAgD,EAAAhB,MAAAiB,YAAA,OAAAD,EAAAhB,MAAAiB,aAkID,QAAAD,EAAAhB,MAAAO,UAAAS,EAAAhB,MAAAO,UAAA,SAzJTjC,SAAAlB,eAAA,SAAAgF,SA6JDnF,aAAAwD,KAAAC,MAAAE,EAAAD,OAAA,GA/JHrC,SAAAlB,eAAA,cAAAuB,YAAA,UAAA1B,YALJmE,EAAAa,SAAA,CAAAQ,UAAA,QAVFtF,gBAAAkF,KAAAjB,KAmLwB3D,YAA2BgD,KAAAC,MAAAE,EAAAD,OAAA,GACjBrC,SAAUT,eAAS,cAAAc,YAAA,UAAA1B,YAClBe,kBAAWP,mBAItBS,MAAaC,cAM1Bf,MAAeX,YAItBS,MAAAA,SAJFoB,SAASlB,eAAe,SAASoB,iBAAiB,QAAS,WAEzDD,iBADAtB,YAAc,EAEdqB,SAASlB,eAAe,cAAcuB,YAAc,GACpDzB,gBAAgBwC,QAAQ,SAAU7B,GAChCA,EAAQoE,SAAS,CAAEQ,UAAW,WAEhCvF,gBAAkB","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar cumulativeVentes = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Part').addEventListener('input', function() {\n  var part = this.value;\n  if(cumulativeVentes && part) {\n    var marketShare = (part * 100) / cumulativeVentes;\n    document.getElementById('MarketShare').textContent = marketShare;\n  }\n});\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  \n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Count\").checked) {\n                          totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                          document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          cumulativeVentes += totalVentes;\n                          layer.setStyle({ fillColor: 'red' });\n                          clickedCommunes.push(layer);\n                        } else {\n                          totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                          document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          cumulativeVentes += totalVentes;\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      cumulativeVentes += totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\n  document.getElementById(\"reset\").addEventListener('click', function () {\n    totalVentes = 0;\n    cumulativeVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"\";\n    clickedCommunes.forEach(function (commune) {\n      commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n    });\n    clickedCommunes = [];\n  });\n"]}