{"version":3,"sources":["scriptMap.js"],"names":["window","onload","location","href","indexOf","sessionStorage","clear","localStorage","replace","addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","totalSecteur","document","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","comsecTDiv","firstChild","forEach","communeInput","type","nom","value","createElement","sectionInput","console","log","innerHTML","length","textContent","inputContainer","querySelector","communesInput","join","readOnly","concat","appendChild","sectionsInput","ventesDansCetteCommune","parse","vente","l_codinsee","venteSections","JSON","l_section","index","venteCommunes","venteParCommune","selectedCommune","idnatmut","Math","round","codtypbien","anneemut","selectedSection","sectionID","substring","venteParSection","addEventListener","region","ventesDansCetteSection","fetch","layer","removeLayer","response","filteredCommunes","then","onEachFeature","feature","on","geoJSON","click","json","data","communeNom","fillColor","alreadyClicked","clickedCommune","flatMap","setStyle","_leaflet_id","filteredSections","sectionsLayer","checked","push","clickedSection","find","some"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["window.onload = function() {\n  if(window.location.href.indexOf('reload')==-1) {\n    window.location.href=window.location.href+'?reload';\n  } else {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.href=window.location.href.replace('?reload','');\n  }\n}\n\nvar map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nvar comsecTDiv = document.getElementById('comsecT');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  // Supprimez tous les enfants de comsecTDiv\n  while(comsecTDiv.firstChild){\n    comsecTDiv.removeChild(comsecTDiv.firstChild);\n  }\n\n  // Pour chaque commune sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  selectedCommunesCodinsee.forEach(commune => {\n    var communeInput = document.createElement('input');\n    communeInput.type = 'text';\n    communeInput.value = `${commune.nom}: ${commune.code}`;\n    communeInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(communeInput);\n  });\n\n  // Faire la même chose pour les sections\n  clickedSections.forEach(section => {\n    var sectionInput = document.createElement('input');\n    sectionInput.type = 'text';\n    sectionInput.value = `${section.nom}: ${section.code}`;\n    sectionInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(sectionInput);\n    console.log('Input créé pour section: ', sectionInput);\n  });\n  \n  console.log('Etat de comsecTDiv après ajout des sections: ', comsecTDiv.innerHTML);\n\n  // Votre code existant\n  if (clickedCommunes.length === 0 && clickedSections.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});"]}