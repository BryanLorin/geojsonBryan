{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","totalSecteur","document","fillColor","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","comsecTDiv","firstChild","forEach","communeInput","type","nom","value","sectionInput","l_section","find","l_codinsee","appendChild","textContent","addEventListener","querySelector","inputContainer","innerHTML","communesInput","createElement","concat","join","readOnly","sectionsInput","selectedCommune","vente","venteCommunes","JSON","parse","replace","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","Math","round","ventesDansCetteCommune","length","selectedSection","ventesDansCetteSection","sectionCode","flatMap","venteParSection","sectionID","select","then","this","departements","geoJSON","layer","onEachFeature","fetch","region","response","json","filteredCommunes","feature","filterCommunes","on","communeNom","removeLayer","setStyle","click","alreadyClicked","clickedCommune","_leaflet_id","checked","filteredSections","sectionsLayer","push","substring","clickedSection","some"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nvar comsecTDiv = document.getElementById('comsecT');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  // Supprimez tous les enfants de comsecTDiv\n  while(comsecTDiv.firstChild){\n    comsecTDiv.removeChild(comsecTDiv.firstChild);\n  }\n\n  // Pour chaque commune sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  selectedCommunesCodinsee.forEach(commune => {\n    var communeInput = document.createElement('input');\n    communeInput.type = 'text';\n    communeInput.value = `${commune.nom}: ${commune.code}`;\n    communeInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(communeInput);\n  });\n\n  // Pour chaque section sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  selectedSectionsCodinsee.forEach(section => {\n    var sectionInput = document.createElement('input');\n    sectionInput.type = 'text';\n    sectionInput.value = `Section ${l_section}: ${communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom}`;\n    console.log(sectionInput);\n    sectionInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(sectionInput);\n  });\n\n  // Votre code existant\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});"]}