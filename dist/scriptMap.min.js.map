{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","select","document","marketShareText","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","partInput","addEventListener","partValue","Number","value","console","marketShare","textContent","split","toFixed","length","inputContainer","innerHTML","communesInput","createElement","nom","type","appendChild","concat","join","sectionsInput","readOnly","JSON","parse","ventesDansCetteCommune","flatMap","vente","venteCommunes","l_codinsee","replace","l_section","venteSections","index","venteParCommune","totalSecteur","Math","round","idnatmut","codtypbien","forEach","selectedSection","anneemut","ventesDansCetteSection","venteParSection","sectionID","region","eachLayer","layer","departements","fetch","this","response","then","geoJSON","filteredCommunes","onEachFeature","feature","communeNom","data","removeLayer","alreadyClicked","some","clickedCommune","_leaflet_id","on","click","push","setStyle","fillColor","checked","json","filteredSections","sectionsLayer","find","clickedSection","substring"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n// Obtenir l'input \"Part\" et le texte \"MarketShare\"\nvar partInput = document.getElementById('Part');\nvar marketShareText = document.getElementById('MarketShare');\n\n// Ajouter un gestionnaire d'événements input à l'input \"Part\"\npartInput.addEventListener('input', function() {\n    // Obtenir la valeur actuelle de l'input \"Part\" et convertir en nombre\n    var partValue = Number(partInput.value);\n    console.log(\"Part Value: \", partValue);\n    // Obtenir le total de vente\n    var totalVentes = Number(document.getElementById(\"NumberSell\").textContent.split(\": \")[1]);\n\n    // Calculer la part de marché\n    var marketShare = (partValue * 100) / totalVentes;\n\n    // Mettre à jour le texte \"MarketShare\"\n    marketShareText.textContent = marketShare.toFixed(2) + '%';  // .toFixed(2) pour avoir deux chiffres après la virgule\n});\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            console.log(\"Total Ventes after adding: \", totalVentes); // Ici\n\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}