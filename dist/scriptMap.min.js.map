{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","select","comsecTDiv","document","querySelector","updateSelectedCommunesAndSections","forEach","commune","communeSpan","createElement","nom","code","textContent","deleteButton","addEventListener","indexOf","index","appendChild","section","sectionSpan","fillColor","departementCode","communes","features","filter","properties","startsWith","filterSections","communeCode","sections","id","inputContainer","innerHTML","communesInput","type","value","concat","join","readOnly","sectionsInput","selectedCommune","vente","venteCommunes","JSON","parse","l_codinsee","replace","l_section","venteSections","venteParCommune","idnatmut","codtypbien","anneemut","totalSecteur","Math","round","ventesDansCetteCommune","length","selectedSection","ventesDansCetteSection","sectionCode","flatMap","venteParSection","sectionID","then","this","departements","geoJSON","layer","onEachFeature","fetch","region","response","json","filteredCommunes","feature","filterCommunes","on","communeNom","removeLayer","setStyle","click","alreadyClicked","clickedCommune","_leaflet_id","checked","filteredSections","sectionsLayer","push","substring","clickedSection","some"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n// Fonction pour mettre à jour l'affichage des communes et sections sélectionnées\nfunction updateSelectedCommunesAndSections() {\n  var comsecTDiv = document.querySelector('.comsecT');\n  comsecTDiv.innerHTML = ''; // Réinitialiser le contenu de la div\n\n  // Afficher les communes sélectionnées\n  selectedCommunesCodinsee.forEach(commune => {\n    var communeSpan = document.createElement('span');\n    communeSpan.textContent = commune.nom + ' (' + commune.code + ') ';\n    var deleteButton = document.createElement('button');\n    deleteButton.textContent = 'Supprimer';\n    deleteButton.addEventListener('click', function () {\n      // Supprimer la commune de la liste des communes sélectionnées\n      var index = selectedCommunesCodinsee.indexOf(commune);\n      if (index !== -1) {\n        selectedCommunesCodinsee.splice(index, 1);\n        updateSelectedCommunesAndSections(); // Mettre à jour l'affichage\n      }\n    });\n    communeSpan.appendChild(deleteButton);\n    comsecTDiv.appendChild(communeSpan);\n  });\n\n  // Afficher les sections sélectionnées\n  selectedSectionsCodinsee.forEach(section => {\n    var sectionSpan = document.createElement('span');\n    sectionSpan.textContent = section.nom + ' (' + section.code + ') ';\n    var deleteButton = document.createElement('button');\n    deleteButton.textContent = 'Supprimer';\n    deleteButton.addEventListener('click', function () {\n      // Supprimer la section de la liste des sections sélectionnées\n      var index = selectedSectionsCodinsee.indexOf(section);\n      if (index !== -1) {\n        selectedSectionsCodinsee.splice(index, 1);\n        updateSelectedCommunesAndSections(); // Mettre à jour l'affichage\n      }\n    });\n    sectionSpan.appendChild(deleteButton);\n    comsecTDiv.appendChild(sectionSpan);\n  });\n}\n\nupdateSelectedCommunesAndSections();\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n  updateSelectedCommunesAndSections();\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}