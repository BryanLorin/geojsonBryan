{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","sectionsLayer","filterCommunes","properties","startsWith","communes","features","filter","commune","code","departementCode","newInput","document","createElement","section","value","id","communeCode","addInputToComsecT","fillColor","comsecT","select","textContent","addEventListener","inputContainer","querySelector","innerHTML","communesInput","concat","nom","join","readOnly","sectionsInput","type","appendChild","ventesDansCetteCommune","flatMap","vente","JSON","forEach","l_codinsee","selectedCommune","parse","replace","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","totalSecteur","Math","round","length","sectionCode","selectedSection","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","removeLayer","on","click","communeNom","checked","push","setStyle","alreadyClicked","clickedCommune","_leaflet_id","l_section","sections","filteredSections","filterSections","find","clickedSection","some"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar comsecT = document.getElementById('comsecT');\nvar select = document.getElementById('region');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n}); \n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                        if(document.getElementById(\"Count\").checked) {\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        \n                          // Ajouter la commune à la div comsecT\n                          addInputToComsecT(`Commune: ${commune.nom}`);\n                        }\n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n                                  if(document.getElementById(\"Count\").checked) {\n                                    var section = {\n                                      code: l_codinsee + '; ' + l_section,\n                                      nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                    };\n                                    selectedSectionsCodinsee.push(section);\n                                    layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                  \n                                    // Ajouter la section à la div comsecT\n                                    addInputToComsecT(`Section: ${section.nom}`);\n                                  }\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n\nfunction addInputToComsecT(value) {\n  // Créer un nouvel élément input\n  var newInput = document.createElement('input');\n  newInput.type = 'text';\n  newInput.value = value;\n  newInput.readOnly = true;\n\n  // Ajouter le nouvel input à la div comsecT\n  comsecT.appendChild(newInput);\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n\n"]}