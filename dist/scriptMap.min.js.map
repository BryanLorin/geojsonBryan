{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","totalSecteur","addEventListener","select","textContent","split","trim","partValue","parseInt","marketShare","length","inputContainer","querySelector","innerHTML","communesInput","createElement","value","concat","nom","join","readOnly","sectionsInput","type","appendChild","ventesDansCetteCommune","flatMap","vente","JSON","forEach","l_codinsee","selectedCommune","parse","replace","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","Math","round","sectionCode","selectedSection","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","removeLayer","fillColor","on","click","alreadyClicked","communeNom","clickedCommune","_leaflet_id","checked","push","setStyle","some","l_section","filteredSections","sectionsLayer","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById(\"Part\").addEventListener('input', function () {\n  var partValue = parseInt(this.value); // Use parseInt instead of parseFloat\n  var totalVentes = parseInt(document.getElementById(\"NumberSell\").textContent.split(\":\")[1].trim());\n  var marketShare = Math.ceil((partValue * 100) / totalVentes);\n  document.getElementById(\"MarketShare\").textContent = \"Part de marché : \" + marketShare + \"%\";\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\n\n\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}