{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","numbersell","parseInt","sections","section","inputValue","id","value","communeCode","document","totalSecteur","addEventListener","select","textContent","inputContainer","querySelector","innerHTML","communesInput","createElement","concat","nom","join","readOnly","sectionsInput","type","appendChild","ventesDansCetteCommune","flatMap","vente","JSON","forEach","l_codinsee","selectedCommune","parse","replace","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","Math","round","length","sectionCode","selectedSection","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","removeLayer","fillColor","on","click","alreadyClicked","communeNom","clickedCommune","_leaflet_id","checked","push","setStyle","some","l_section","filteredSections","filterSections","sectionsLayer","clickedSection","result","this","toFixed"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\ndocument.getElementById('nbventesclient').addEventListener('change', function() {\n  // Récupérer le nombre de ventes\n  var numbersell = parseInt(document.getElementById(\"NumberSell\").textContent.replace(\"Total: \", \"\"));\n  \n  // Récupérer la valeur de l'input\n  var inputValue = parseInt(this.value);\n  \n  // Calculer le résultat\n  var result = (inputValue * numbersell) / 100;\n  \n  // Afficher le résultat dans le textblock \"resultatmarcher\"\n  document.getElementById(\"resultatmarcher\").textContent = \"Résultat : \" + result.toFixed(2); // Utiliser toFixed(2) pour limiter à 2 chiffres après la virgule\n});\n"]}