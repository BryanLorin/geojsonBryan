{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","totalSecteur","addEventListener","resultat","parseFloat","value","resultatInput","createElement","type","readOnly","resultatDiv","innerHTML","appendChild","console","log","length","textContent","inputContainer","querySelector","communesInput","join","concat","nom","sectionsInput","ventesDansCetteCommune","parse","vente","l_codinsee","venteSections","JSON","l_section","replace","index","venteCommunes","venteParCommune","selectedCommune","idnatmut","Math","round","codtypbien","anneemut","selectedSection","sectionID","substring","venteParSection","region","ventesDansCetteSection","fetch","layer","removeLayer","response","filteredCommunes","then","onEachFeature","feature","on","geoJSON","click","json","data","communeNom","fillColor","alreadyClicked","clickedCommune","flatMap","setStyle","_leaflet_id","filteredSections","sectionsLayer","checked","push","clickedSection","find","some","forEach"],"mappings":"aAAA,IAIGA,aACCC,OALAC,IAAMC,EAAED,IAAI,OAAOE,QAAQ,CAAC,KAAM,MAAO,GAA7CD,EAAAE,UAAYH,qDAAZ,CAEEG,QAAF,KACEC,MAAOJ,KAGT,IAOIK,cAFAC,cALAC,YAAJ,EACIC,gBAAJ,GACIC,gBAAkB,GAClBC,WAAAA,SAAuBC,eAAA,cAEvBL,yBAA2B,GAD3BM,yBAAsBD,GAEtBE,aAAAA,EACAR,OAAAA,SAAJM,eAAA,UA6SC,SAPDG,eAAAC,EAAAC,GAXE,OAAOA,EAASC,SAASC,OAAO,SAAUC,GACxC,OAAOA,EAAQC,WAAWC,KAAKC,WAAWP,KAI9C,SAASQ,eAAeC,EAAaC,GACnC,OAAOA,EAASR,SAASC,OAAO,SAAUQ,GACxC,OAAOA,EAAQN,WAAWO,GAAGL,WAAWE,KAhS5CI,SAAIC,eAAJ,eAAAC,iBAAA,QAAA,WAGAF,IAKMG,EALkBC,WAAeF,SAAAA,eAAvC,kBAA4EG,OAKpCzB,YAAe,IAGjD0B,EAAgBN,SAASO,cAAc,SAC3CD,EAAcE,KAAO,OACrBF,EAAcD,MAAQF,EACtBG,EAAcG,UAAW,EAGzB,IAAIC,EAAcV,SAASjB,eAAe,mBAC1C2B,EAAYC,UAAY,GACxBD,EAAYE,YAAYN,GAExBO,QAAQC,IAAIR,KAIZN,SAAInB,eAAgBkC,SAAWb,iBAAG,QAAA,WAChC,IAAAtB,gBAAAmC,SACAf,YAASjB,EACViB,SAAAjB,eAAA,cAAAiC,YAAA,UAAApC,eAKDoB,SAAIiB,eAAiBjB,UAASkB,iBAAc,QAAA,WAG5CD,IAAAA,EAAeN,SALsDO,cAOrE,iCAEAC,EAAcX,UAAd,GAC0D,IAAuCY,EAAjGpB,SAAAO,cAAA,SACAY,EAAcV,KAAAA,OADdU,EAAcd,MAAQ3B,yBAAyBN,IAAI,SAAAmB,GAAO,MAAA,GAAA8B,OAAO9B,EAAQ+B,IAAf,MAAAD,OAAuB9B,EAAQE,QAAQ2B,KAAK,MAEtGH,EAAcR,UAACG,EAAfK,EAAeL,YAAYO,GAK3BI,IAAAA,EAAAvB,SAAsBf,cAAAA,SAAoCsC,EAAAf,KAAOV,OAAPyB,EAA1DlB,MAAApB,yBAAAb,IAAA,SAAA0B,GAAA,MAAA,GAAAuB,OAAAvB,EAAAwB,IAAA,MAAAD,OAAAvB,EAAAL,QAAA2B,KAAA,MACAG,EAAcd,UAAW,EACzBQ,EAAeL,YAAYW,GAKzB7C,yBAAI8C,QAAyB7C,SAAAA,GAC3B,IAAA6C,EAAyBC,OAAMC,QAAMC,SAAAA,GACrC,IAAIC,EAAgBC,KAAKJ,MAAMC,EAAMI,WAAUC,QAAQ,KAAM,MAE7DH,EAAoBC,KAAKJ,MAAAC,EAACnC,UAASyC,QAAV,KAAA,MACvBjC,OAAEkC,EAD0C7D,IAAA,SAAAmB,EAAAyC,GAAA,MAAA,CAE5ClC,GAAAA,EACA4B,QAAOA,EAAAA,GAHqCA,MAArBA,OAKxBpC,OAAO,SAAA4C,GAAAA,OAAeA,EACvBA,KAAgBnC,EAAOoC,OAVzB,MAAAD,EAAAR,MAAAU,UAAA,MAAAF,EAAAR,MAAAU,YAgBAnC,EAAgBoC,MAAKC,WAAMd,WAAAA,MAA3B,OAAkDT,EAAlDW,MAAAa,YAAA,OAAAL,EAAAR,MAAAa,aAGF,QAAAL,EAAAR,MAAAc,UAAAN,EAAAR,MAAAc,UAAA,SAEEvC,cAAeoC,KAAGI,MAAAA,EAAA1B,OAAlB,KAKE9B,yBAAoB4C,QAAKJ,SAAAA,GAEzB,IAAyBiB,EAAlBT,EAAkBxC,KAACF,UAASyC,EAAV,GAAqB,KAAAS,EAAAhD,KAAAkD,UAAA,GAE5CjB,EAAOA,OAAAA,QAAAA,SAAAA,GAFqC,IAArBO,EAAAJ,KAAAJ,MAAAC,EAAAC,WAAAI,QAAA,KAAA,MAAzBH,EAAAC,KAAAJ,MAAAC,EAAAI,UAAAC,QAAA,KAAA,MAIuB,OACvBa,EAAAA,IAAA,SAAArD,EAAuBmD,GAAvB,MACCE,CAVH7C,GAAAR,EAAA,MAAAqC,EAAAI,GAeA/B,MAAAA,OAPGX,OAAO,SAAAsD,GAAe,OAW3B5C,EAASjB,KAAe2D,IAnE1B,MAAAE,EAAAlB,MAAAU,UAAA,MAAAQ,EAAAlB,MAAAU,YAwEOlC,EAAPwB,MAAwBa,WAAU7C,WAAY,MAAA,OAAAkD,EAAAlB,MAAAa,YAAA,OAAAK,EAAAlB,MAAAa,aAC5C,QAAIM,EAAcxC,MAAlBmC,UAAAI,EAAAlB,MAAAc,UAAA,SACAvC,cAAAoC,KAAAC,MAAAQ,EAAA/B,OAAA,KAOAgC,SAAKhE,eAAA,gBAAAsB,MAAAJ,eAOG+C,OAAAA,iBAAA,SAAkB,WAChB,IAAAH,EAAI1D,KAAAA,MAEJ4D,IAAAA,UAAK,SAAAC,GACW5E,IAAA6E,YAAIC,KAEhBvE,EAAAA,UAAAA,qDAAA,CACDH,QAJH,KAMAuE,MAAAA,KAGGA,MAAA,kEAAA1B,OACyBwB,EADzB,kBAAAxB,OACyBwB,EADzB,aAEC1E,KAAAA,SAAAA,GACA,OAAA+E,EAAIC,SAEJC,KAAA,SAAI3E,GACFL,EAAAA,QAAAA,EAAgBK,CACjB4E,cAAA,SAAAC,EAAAN,GAnBPA,EAAMO,GAAG,QAAS,WAqBZ9E,IAAAA,EAAkB+E,EAAQL,WAAAA,KAEtBH,MAAAA,kEAAAA,OAASH,EAATG,eAAAA,OAASH,EAATG,KAAAA,OAAS7D,EAAT6D,UACES,KAAAA,SAAAA,GAAO,OAAAP,EAAAQ,SAEvBN,KAAA,SAAAO,GACMhF,OAAIiF,IAIQb,MAAA,kEAAA1B,OAA8CwB,EAA9C,cAAAxB,OAA8CwB,EAA9C,aACEO,KAAA,SAAAF,GACA,OAAAA,EAAI3D,SAEF+B,KAAAA,SAAKgC,GAFO,IAAAH,EAAdjE,eAAAC,EAnBVhB,aAAeiB,GAwBL4D,eAAiBa,IAAAA,YAASpF,eAjBpCA,cAAgBJ,EAAEmF,QAAQL,EAAkB,CAC1CE,cAAe,SAAUC,EAASN,GAoB5BA,EAAIc,GAAAA,CAAoDL,MACtDM,WAjBpB,IAAInE,EAAc0D,EAAQ9D,WAAWC,KAoBnBmE,EAAIE,EAAAA,WAAgBxC,IAIhBE,GAHFxC,WAAAgC,YAAS,QAAA4C,EAGPpC,SAAAA,eAAyB7C,UAAOqF,QAAQ,CAEtCpC,IAAAA,EAAa,CAEjBnC,KAAOwC,EAAkBX,IAAqBgC,EAAA9D,WAAA8B,KAE5CxB,yBAAuBkC,KAFqBzC,GAG5CmC,EAAKuC,SAAEvC,CAAAA,UAAAA,SAUT,IAPgB3B,gBAAOH,KAAvB,SAAAmE,GACC7B,OAXH6B,EAAAG,cAAAlB,EAAAkB,cAiBE,CAGmBL,IAAAA,EAAWlF,OAAAqF,QAAA,SAAAtC,GAA5B,IAAAO,EAAAJ,KAAAJ,MAAAC,EAAAC,WAAAI,QAAA,KAAA,MACAlD,EAAqBmE,KAArBvB,MAAAC,EAAAI,UAAAC,QAAA,KAAA,MAEAnD,OAAAA,EAAmB0D,IAAMd,SAAAA,EAAAA,GAAAA,MAAuBT,CAChDf,GAAQT,EACTO,QAAA8B,EAAAI,GACFN,MAAAA,OAEG1B,OAASjB,SAAAA,GAAe,OAC1BgE,EAAKhD,KAAAH,IAED,MAAAsC,EAAgBwB,MAAhBtB,UAAA,MAAAF,EAAAR,MAAAU,YAEDgB,EAAevD,MAAV0C,WAAoB7C,WAAA,MAAA,OAAAwC,EAAAR,MAAAa,YAAA,OAAAL,EAAAR,MAAAa,aACD5C,QAAvBuC,EAAIiC,MAAmBxE,UAAeC,EAAtC8B,MAAAc,UAAA,SAGEpE,SAAI6E,eAAYmB,YAAhBC,UACDrE,SAAAjB,eAAA,SAAAsF,SApBHzF,aAAeyD,KAAKC,MAAMd,EAAuBT,OAAS,GAsBzDqD,SAAarF,eAAaoF,cAAVnD,YAA4B,UAAApC,YAC3CyE,EAAAA,SAAe,CAAAQ,UAAA,QACbb,gBAAAsB,KAAkBtB,KAnBtBpE,YAAcyD,KAAKC,MAAMd,EAAuBT,OAAS,GAuBnDf,SAAI2B,eAAae,cAAA1B,YAAjB,UAAApC,cAKAoB,SAAIF,eAAU,YAAAuE,SACZ5E,MAAAA,kEAAAA,OADYoD,EACZpD,cAAAA,OADYoD,EACZpD,KAAAA,OADYN,EACZM,UACA6B,KAAAA,SAAKnD,GAAkC,OAAA+E,EAAI3D,SAF/B6D,KAAd,SAAAvD,GAIAZ,IAAAA,EAAAA,eAA8Ba,EAA9BD,GACiBgE,eAAFzF,IAAyB6E,YAAAmB,eAhB7CA,cAAgB/F,EAAEmF,QAAQW,EAAkB,CAqBvCd,cAAIS,SAAiBhF,EAAAA,GAAmCkE,EAAAO,GACtDgB,QAAAA,WADF,IAAA7B,EAAAY,EAAA9D,WAAAO,GAKE4B,EAASe,EAAAC,UAAA,EAAA,GACVb,EAAAY,EAAAC,UAAA,GAIG,GAAIV,SAAAA,eAAqBR,UAAYE,QAAWI,CAChD,IAAIH,EAAAA,CAEJnC,KAAOwC,EAAc7D,KAAI0D,EAAAR,IAAqBnD,aAAAkB,SAAAmF,KAAA,SAAAjF,GAAA,OAAAA,EAAAC,WAAAC,OAAAkC,IAAAnC,WAAA8B,KAE5CI,yBAAOA,KAAAA,GAFqCsB,EAArBiB,SAAA,CAAAJ,UAAA,UAczBb,IA3BiBlE,gBAAgB2F,KAAK,SAAAF,GAAc,OAwBlDvE,EAASjB,cAAwBsF,EAAAA,cAGnCrB,CAGApE,IAAAA,EAAyBkE,OAAAA,QAAuB/B,SAAAA,GAChDf,IAASjB,EAAe8C,KAAAJ,MAAxBC,EAAsCV,WAAce,QAAA,KAAYnD,MACjEgD,EAAAC,KAAAJ,MAAAC,EAAAI,UAAAC,QAAA,KAAA,MAEJ,OAAAE,EAAA7D,IAAA,SAAAmB,EAAAyC,GAAA,MAAA,CAvDJjC,GAAAR,EAAA,MAAAqC,EAAAI,GAXHN,MAAAA,OAsEHpC,OAAA,SAAAsD,GAAA,OA9HHA,EAAA7C,KAAA2C,IAiID,MAAAE,EAAAlB,MAAAU,UAAA,MAAAQ,EAAAlB,MAAAU,YAnIHQ,EAAAlB,MAAAa,WAAA7C,WAAA,MAAA,OAAAkD,EAAAlB,MAAAa,YAAA,OAAAK,EAAAlB,MAAAa,aAZJ,QAAAK,EAAAlB,MAAAc,UAAAI,EAAAlB,MAAAc,UAAA,SAXNxC,SAAAjB,eAAA,SAAAsF,SALJzF,aAAAyD,KAAAC,MAAAQ,EAAA/B,OAAA,GATFf,SAAAjB,eAAA,cAAAiC,YAAA,UAAApC,YA0JsCoE,EAAMiB,SAAS,CAAEJ,UAAW,QAuB1C1E,gBAA2BmF,KAAAtB,KAEhBtD,YAAWP,KAAAA,MAA1C2D,EAAA/B,OAAA,GADFf,SAAAjB,eAAA,cAAAiC,YAAA,UAAApC,mBAMOV,MAAyBE,cAMhCF,MAAAE,YAGqByF,MAASzF,SAJhC4B,SAASjB,eAAe,SAASmB,iBAAiB,QAAS,WACzDtB,YAAc,EACdoB,SAASjB,eAAe,cAAciC,YAAc,GACpDnC,gBAAgB6F,QAAQ,SAAUnF,GAChCA,EAAQ0E,SAAS,CAAEJ,UAAW,WAEhChF,gBAAkB","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('egalmarcher').addEventListener('click', function() {\n  // Get the input value from the 'nbventesclient' text field\n  var nbventesclientValue = parseFloat(document.getElementById('nbventesclient').value);\n\n  // Calculate the result as (nbventesclient * totalVentes) / 100\n  var resultat = (nbventesclientValue * totalVentes) / 100;\n\n  // Create a new input element for the result\n  var resultatInput = document.createElement('input');\n  resultatInput.type = 'text';\n  resultatInput.value = resultat;\n  resultatInput.readOnly = true; // Set the input to read-only\n\n  // Append the new input element to the 'resultatmarcher' div\n  var resultatDiv = document.getElementById('resultatmarcher');\n  resultatDiv.innerHTML = ''; // Clear any previous inputs\n  resultatDiv.appendChild(resultatInput);\n\n  console.log(resultatInput);\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n\n\n"]}