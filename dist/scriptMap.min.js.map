{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","document","communes","forEach","filter","commune","setStyle","code","startsWith","departementCode","communeCode","sections","section","id","createInputs","container","innerHTML","input","selectedCommune","appendChild","createElement","value","concat","nom","textContent","selectedSection","readOnly","deleteButton","splice","index","type","addEventListener","indexOf","totalSecteur","select","inputContainer","querySelector","communesInput","join","sectionsInput","ventesDansCetteCommune","flatMap","vente","JSON","l_codinsee","parse","replace","venteSections","venteParCommune","idnatmut","codtypbien","anneemut","Math","round","length","sectionCode","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","removeLayer","fillColor","on","properties","communeNom","alreadyClicked","checked","clickedCommune","_leaflet_id","filteredSections","filterSections","sectionsLayer","push","features","some","l_section","find","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n}); \n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                          createInputs(); // Mise à jour des inputs\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                  createInputs(); // Mise à jour des inputs\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n // Reset totalVentes, clickedCommunes, and inputs when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  totalSecteur = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  document.getElementById(\"TotalSecteur\").value = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n  selectedCommunesCodinsee = [];\n  selectedSectionsCodinsee = [];\n  createInputs(); // Supprimer les inputs existants\n});\n\nfunction createInputs() {\n  var container = document.getElementById('comsecT');\n  container.innerHTML = '';\n\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var input = document.createElement('input');\n    input.type = 'text';\n    input.value = `${selectedCommune.nom}: ${selectedCommune.code}`;\n    input.readOnly = true;\n\n    var deleteButton = document.createElement('button');\n    deleteButton.textContent = 'Supprimer';\n    deleteButton.addEventListener('click', function() {\n      var index = selectedCommunesCodinsee.indexOf(selectedCommune);\n      if (index !== -1) {\n        selectedCommunesCodinsee.splice(index, 1);\n        createInputs();\n      }\n    });\n\n    container.appendChild(input);\n    container.appendChild(deleteButton);\n    container.appendChild(document.createElement('br'));\n  });\n\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var input = document.createElement('input');\n    input.type = 'text';\n    input.value = `${selectedSection.nom}: ${selectedSection.code}`;\n    input.readOnly = true;\n\n    var deleteButton = document.createElement('button');\n    deleteButton.textContent = 'Supprimer';\n    deleteButton.addEventListener('click', function() {\n      var index = selectedSectionsCodinsee.indexOf(selectedSection);\n      if (index !== -1) {\n        selectedSectionsCodinsee.splice(index, 1);\n        createInputs();\n      }\n    });\n\n    container.appendChild(input);\n    container.appendChild(deleteButton);\n    container.appendChild(document.createElement('br'));\n  });\n}\n"]}