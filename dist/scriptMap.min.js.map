{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","selectedSectionsCodinsee","communesLayer","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedCommunesCodinsee","sectionsLayer","totalSecteur","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","addEventListener","numberSellValue","parseFloat","textContent","split","marketShare","this","value","toFixed","log","console","error","length","inputContainer","querySelector","communesInput","nom","type","readOnly","concat","join","appendChild","sectionsInput","createElement","forEach","selectedCommune","ventesDansCetteCommune","flatMap","vente","venteCommunes","JSON","parse","l_codinsee","replace","venteSections","l_section","index","venteParCommune","idnatmut","codtypbien","Math","round","anneemut","selectedSection","sectionID","substring","venteParSection","layer","ventesDansCetteSection","onEachFeature","on","eachLayer","fetch","then","region","response","departements","geoJSON","removeLayer","feature","json","click","filteredCommunes","filterCommunes","setStyle","alreadyClicked","communeNom","checked","push","some","clickedCommune","_leaflet_id","fillColor","filteredSections","clickedSection","find"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  \nvar historyDiv = document.getElementById('Historique'); \nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Part').addEventListener('input', function() {\n  try {\n    let numberSellValue = parseFloat(document.getElementById('NumberSell').textContent.split(': ')[1]); // Get the displayed total of sales\n    let marketShare = (this.value * 100) / numberSellValue;\n    document.getElementById('MarketShare').textContent = \"Market Share: \" + marketShare.toFixed(2) + \"%\";\n    console.log(\"Market Share: \" + marketShare.toFixed(2) + \"%\"); // Log the result to the console\n  } catch (error) {\n    console.error(\"An error occurred: \", error);\n  }\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}