{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","nbventesclientValue","parseFloat","sections","section","resultat","document","totalSecteur","addEventListener","select","textContent","inputContainer","querySelector","innerHTML","communesInput","createElement","value","concat","nom","join","readOnly","sectionsInput","type","appendChild","ventesDansCetteCommune","flatMap","vente","JSON","forEach","l_codinsee","selectedCommune","parse","replace","venteSections","id","index","venteParCommune","idnatmut","codtypbien","anneemut","Math","round","length","sectionCode","selectedSection","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","communeCode","removeLayer","fillColor","on","click","alreadyClicked","communeNom","clickedCommune","_leaflet_id","checked","push","setStyle","some","l_section","filteredSections","filterSections","sectionsLayer","clickedSection","resultatInput","resultatDiv"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\ndocument.getElementById('egalmarcher').addEventListener('click', function() {\n  // Get the input value from the 'nbventesclient' text field\n  var nbventesclientValue = parseFloat(document.getElementById('nbventesclient').value);\n\n  // Calculate the result as (nbventesclient * totalVentes) / 100\n  var resultat = (nbventesclientValue * totalVentes) / 100;\n\n  // Create a new input element for the result\n  var resultatInput = document.createElement('input');\n  resultatInput.type = 'text';\n  resultatInput.value = resultat;\n  resultatInput.readOnly = true; // Set the input to read-only\n\n  // Append the new input element to the 'resultatmarcher' div\n  var resultatDiv = document.getElementById('resultatmarcher');\n  resultatDiv.innerHTML = ''; // Clear any previous inputs\n  resultatDiv.appendChild(resultatInput);\n});\n\n"]}