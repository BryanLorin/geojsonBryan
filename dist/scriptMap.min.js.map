{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","selectedSectionsCodinsee","communesLayer","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedCommunesCodinsee","sectionsLayer","totalSecteur","calculateMarketShare","numberSellText","document","textContent","replace","marketShare","numberSellValue","parseFloat","value","partValue","toFixed","console","log","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","addEventListener","inputContainer","querySelector","innerHTML","communesInput","type","concat","nom","join","readOnly","appendChild","sectionsInput","createElement","forEach","selectedCommune","flatMap","ventesDansCetteCommune","parse","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","Math","round","length","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","onEachFeature","layer","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","fillColor","some","_leaflet_id","setStyle","l_section","filteredSections","alreadyClicked","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  \nvar historyDiv = document.getElementById('Historique'); \nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nfunction calculateMarketShare() {\n  try {\n    let numberSellText = document.getElementById('NumberSell').textContent;\n    let numberSellValue = parseFloat(numberSellText.replace(\"Total: \", \"\")); // Get the displayed total of sales\n    let partValue = parseFloat(document.getElementById('Part').value);\n    let marketShare = (partValue * 100) / numberSellValue;\n    document.getElementById('MarketShare').textContent = \"Market Share: \" + marketShare.toFixed(2) + \"%\";\n    console.log(\"Market Share: \" + marketShare.toFixed(2) + \"%\"); // Log the result to the console\n  } catch (error) {\n    console.error(\"An error occurred: \", error);\n  }\n}\n\ndocument.getElementById('Part').addEventListener('input', calculateMarketShare);\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}