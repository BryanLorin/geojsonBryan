{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","numberSell","parseFloat","document","sections","section","resultat","nbVentesClient","communeCode","totalSecteur","addEventListener","select","textContent","inputContainer","querySelector","innerHTML","communesInput","createElement","value","concat","nom","join","readOnly","sectionsInput","type","appendChild","ventesDansCetteCommune","flatMap","vente","JSON","forEach","l_codinsee","selectedCommune","parse","replace","venteSections","id","index","venteParCommune","idnatmut","codtypbien","anneemut","Math","round","length","sectionCode","selectedSection","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","removeLayer","fillColor","on","click","alreadyClicked","communeNom","clickedCommune","_leaflet_id","checked","push","setStyle","some","l_section","filteredSections","filterSections","sectionsLayer","clickedSection","resultatInput","split"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\ndocument.getElementById('equal').addEventListener('click', function () {\n  var nbVentesClient = parseFloat(document.getElementById('nbventesclient').value);\n  var numberSell = parseFloat(document.getElementById('NumberSell').textContent.split(':')[1]);\n\n  // Perform the multiplication and division operations\n  var resultat = (nbVentesClient * numberSell) / 100;\n\n  \n\n \n// Create a new input element to display the result\n  var resultatInput = document.createElement('input');\n  resultatInput.\n  resultat\ntype = 'text';\n  resultatInput.value = resultat;\n  resultatInput.\n \nreadOnly = true; // Make the input read-only\n  \n \ndocument.getElementById('resultatmarcher').appendChild(resultatInput);\n});"]}