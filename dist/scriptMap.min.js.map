{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","selectedSectionsCodinsee","communesLayer","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedCommunesCodinsee","sectionsLayer","totalSecteur","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","addEventListener","marketShare","value","this","textContent","toFixed","console","log","error","numberSellValue","inputContainer","querySelector","communesInput","readOnly","createElement","type","appendChild","concat","nom","join","sectionsInput","JSON","parse","ventesDansCetteCommune","vente","l_section","venteCommunes","index","venteSections","replace","venteParCommune","selectedCommune","Math","round","idnatmut","codtypbien","anneemut","sectionCode","selectedSection","substring","ventesDansCetteSection","flatMap","l_codinsee","venteParSection","sectionID","region","eachLayer","layer","length","response","select","feature","fetch","removeLayer","then","filteredCommunes","json","geoJSON","departements","onEachFeature","click","data","fillColor","alreadyClicked","on","clickedCommune","communeNom","setStyle","some","_leaflet_id","filteredSections","checked","push","clickedSection","forEach"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  \nvar historyDiv = document.getElementById('Historique'); \nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('NumberSell').addEventListener('input', function() {\n  try {\n    let partValue = document.getElementById('Part').value;\n    let marketShare = (partValue * 100) / this.value;\n    document.getElementById('MarketShare').textContent = \"Market Share: \" + marketShare.toFixed(2) + \"%\";\n    console.log(\"Market Share: \" + marketShare.toFixed(2) + \"%\"); // Log the result to the console\n  } catch (error) {\n    console.error(\"An error occurred: \", error);\n  }\n});\n\ndocument.getElementById('Part').addEventListener('input', function() {\n  try {\n    let numberSellValue = document.getElementById('NumberSell').value;\n    let marketShare = (this.value * 100) / numberSellValue;\n    document.getElementById('MarketShare').textContent = \"Market Share: \" + marketShare.toFixed(2) + \"%\";\n    console.log(\"Market Share: \" + marketShare.toFixed(2) + \"%\"); // Log the result to the console\n  } catch (error) {\n    console.error(\"An error occurred: \", error);\n  }\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}