{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","totalSecteur","addEventListener","partValue","this","parseInt","textContent","split","trim","Error","isNaN","marketShare","Math","ceil","console","error","message","length","inputContainer","querySelector","innerHTML","createElement","communesInput","type","concat","nom","join","value","readOnly","sectionsInput","appendChild","forEach","selectedCommune","flatMap","vente","venteCommunes","JSON","parse","l_codinsee","replace","l_section","index","ventesDansCetteCommune","venteSections","venteParCommune","idnatmut","anneemut","selectedSection","sectionCode","substring","ventesDansCetteSection","venteParSection","sectionID","codtypbien","round","eachLayer","layer","select","fetch","response","then","departements","onEachFeature","region","data","geoJSON","json","filteredCommunes","feature","removeLayer","click","setStyle","fillColor","communeNom","checked","alreadyClicked","some","clickedCommune","_leaflet_id","filteredSections","sectionsLayer","push","find","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById(\"Part\").addEventListener('input', function () {\n  try {\n    var partValue = parseInt(this.value); // Use parseInt instead of parseFloat\n    var totalVentes = parseInt(document.getElementById(\"NumberSell\").textContent.split(\":\")[1].trim());\n    if (isNaN(partValue)) {\n      throw new Error(\"Invalid input: Please enter a valid number.\");\n    }\n    if (totalVentes === 0) {\n      throw new Error(\"Invalid operation: Total sales is 0.\");\n    }\n    var marketShare = Math.ceil((partValue * 100) / totalVentes);\n    document.getElementById(\"MarketShare\").textContent = \"Part de marché : \" + marketShare + \"%\";\n    console.log(\"Market Share:\", marketShare);\n  } catch (error) {\n    console.error(error.message);\n  }\n});\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\n\n\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}