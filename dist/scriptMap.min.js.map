{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","document","textContent","forEach","filter","commune","setStyle","code","startsWith","departementCode","communeCode","sections","features","section","properties","id","select","addEventListener","communesInput","createElement","type","concat","nom","join","value","appendChild","sectionsInput","readOnly","inputContainer","innerHTML","selectedCommune","flatMap","vente","JSON","parse","l_codinsee","replace","venteSections","l_section","venteCommunes","index","ventesDansCetteCommune","venteParCommune","idnatmut","codtypbien","totalSecteur","Math","length","selectedSection","substring","sectionID","ventesDansCetteSection","venteParSection","anneemut","round","region","this","fetch","layer","removeLayer","json","departements","onEachFeature","then","response","feature","communes","data","click","communeNom","filteredCommunes","filterCommunes","geoJSON","clickedCommune","_leaflet_id","alreadyClicked","push","some","checked","fillColor","filteredSections","filterSections","sectionsLayer","find"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  } else {\n    // Créer un nouvel input pour les communes sélectionnées\n    var communesInput = document.createElement('input');\n    communesInput.type = 'text';\n    communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n    communesInput.readOnly = true;  // Rendre l'input en lecture seule\n    historyDiv.appendChild(communesInput);\n\n    // Créer un nouvel input pour les sections sélectionnées\n    var sectionsInput = document.createElement('input');\n    sectionsInput.type = 'text';\n    sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n    sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n    historyDiv.appendChild(sectionsInput);\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}