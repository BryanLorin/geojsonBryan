{"version":3,"sources":["scriptMap.js"],"names":["window","onload","location","href","indexOf","sessionStorage","clear","localStorage","replace","addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","totalSecteur","document","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","comsecTDiv","firstChild","forEach","communeInput","type","nom","value","sectionInput","console","log","innerHTML","length","textContent","addEventListener","inputContainer","querySelector","communesInput","readOnly","concat","join","appendChild","sectionsInput","createElement","selectedCommune","ventesDansCetteCommune","flatMap","vente","venteCommunes","JSON","parse","l_codinsee","venteSections","l_section","index","venteParCommune","idnatmut","codtypbien","Math","round","anneemut","selectedSection","sectionID","substring","venteParSection","layer","ventesDansCetteSection","onEachFeature","on","eachLayer","fetch","then","region","response","departements","geoJSON","removeLayer","feature","json","click","filteredCommunes","filterCommunes","setStyle","alreadyClicked","communeNom","checked","push","some","clickedCommune","_leaflet_id","fillColor","sectionsLayer","filteredSections","clickedSection","find"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["window.onload = function() {\n  if(window.location.href.indexOf('reload')==-1) {\n    window.location.href=window.location.href+'?reload';\n  } else {\n    localStorage.clear();\n    sessionStorage.clear();\n    window.location.href=window.location.href.replace('?reload','');\n  }\n}\n\nvar map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nvar comsecTDiv = document.getElementById('comsecT');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  // Supprimez tous les enfants de comsecTDiv\n  while(comsecTDiv.firstChild){\n    comsecTDiv.removeChild(comsecTDiv.firstChild);\n  }\n\n  // Pour chaque commune sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  selectedCommunesCodinsee.forEach(commune => {\n    var communeInput = document.createElement('input');\n    communeInput.type = 'text';\n    communeInput.value = `${commune.nom}: ${commune.code}`;\n    communeInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(communeInput);\n  });\n\n  selectedSectionsCodinsee.forEach(section => {\n    var sectionInput = document.createElement('input');\n    sectionInput.type = 'text';\n    sectionInput.value = `${section.nom}: ${section.code}`;\n    sectionInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(sectionInput);\n    console.log('Input créé pour section: ', sectionInput);\n  });\n  \n  console.log('Etat de comsecTDiv après ajout des sections: ', comsecTDiv.innerHTML);\n\n  // Votre code existant\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});"]}