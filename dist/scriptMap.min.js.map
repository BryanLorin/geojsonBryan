{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","length","addEventListener","textContent","inputContainer","querySelector","innerHTML","communesInput","type","join","createElement","readOnly","value","concat","nom","appendChild","sectionsInput","ventesDansCetteCommune","parse","vente","l_codinsee","venteSections","JSON","l_section","replace","index","venteCommunes","venteParCommune","selectedCommune","idnatmut","totalSecteur","Math","round","codtypbien","anneemut","selectedSection","sectionID","substring","venteParSection","ventesDansCetteSection","resultatInput","nbventesclient","parseFloat","isNaN","alert","region","resultat","fetch","select","feature","this","eachLayer","response","removeLayer","layer","then","filteredCommunes","json","geoJSON","departements","onEachFeature","click","data","fillColor","alreadyClicked","on","clickedCommune","communeNom","setStyle","some","_leaflet_id","flatMap","filteredSections","checked","sectionsLayer","push","clickedSection","forEach"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n// Ajouter un événement \"click\" au bouton \"egalmarcher\"\ndocument.getElementById('egalmarcher').addEventListener('click', function() {\n  // Récupérer le nombre saisi dans le champ \"nbventesclient\"\n  var nbventesclient = parseFloat(document.getElementById('nbventesclient').value);\n\n  // Vérifier si le nombre saisi est valide\n  if (!isNaN(nbventesclient)) {\n    // Effectuer les opérations de multiplication et de division\n    var resultat = (nbventesclient * totalVentes) / 100;\n\n    // Créer un nouvel input pour afficher le résultat dans la div \"resultatmarcher\"\n    var resultatInput = document.createElement('input');\n    resultatInput.type = 'text';\n    resultatInput.value = resultat;\n    resultatInput.readOnly = true;\n    document.getElementById('resultatmarcher').appendChild(resultatInput);\n  } else {\n    alert('Veuillez entrer un nombre valide dans le champ \"nbventesclient\".');\n  }\n});\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}