{"version":3,"sources":["scriptMap.js"],"names":["ventes","totalVentes","map","L","setView","tileLayer","maxZoom","addTo","clickedCommunes","selectedSectionsCodinsee","communesLayer","clickedSections","historyDiv","document","getElementById","selectedCommunesCodinsee","sectionsLayer","totalSecteur","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","updateComsecT","comsecT","innerHTML","forEach","communeDiv","createElement","textContent","nom","classList","add","appendChild","sectionDiv","addEventListener","length","inputContainer","querySelector","communesInput","join","type","readOnly","concat","sectionsInput","parse","vente","ventesDansCetteCommune","flatMap","JSON","l_codinsee","replace","index","l_section","venteCommunes","venteSections","venteParCommune","selectedCommune","selectedSection","substring","sectionCode","idnatmut","sectionID","ventesDansCetteSection","anneemut","Math","round","response","venteParSection","departements","feature","onEachFeature","codtypbien","then","data","json","value","select","region","this","geoJSON","click","fetch","layer","on","filteredCommunes","communesData","alreadyClicked","communeNom","checked","comm","fillColor","setStyle","push","some","clickedCommune","_leaflet_id","removeLayer","filteredSections","find","sec","clickedSection"],"mappings":"aACI,IAOIA,aACAC,OARAC,IAAMC,EAAED,IAAI,OAAOE,QAAQ,CAAC,KAAM,MAAO,GAE3CC,EAAAA,UAAU,qDAAsD,CAChEC,QAAS,KACRC,MAFHL,KAOIM,IAIAC,cACAC,cALAF,YAAkB,EAClBG,gBAAsB,GAAtBA,gBAAkB,GAClBC,WAAaC,SAASC,eAAe,cACrCC,yBAA2B,GAA3BA,yBAAJ,GAGIC,aAAJ,EACIC,OAAYJ,SAAhBC,eAAA,UAsXA,SAASI,eAAeC,EAAiBC,GACvC,OAAOA,EAASC,SAASC,OAAO,SAAUC,GACxC,OAAOA,EAAQC,WAAWC,KAAKC,WAAWP,KAI9C,SAASQ,eAAeC,EAAaC,GACnC,OAAOA,EAASR,SAASC,OAAO,SAAUQ,GACxC,OAAOA,EAAQN,WAAWO,GAAGL,WAAWE,KAgB5C,SAASI,gBACP,IAAIC,EAAUpB,SAASC,eAAe,WACtCmB,EAAQC,UAAY,GACpBnB,yBAAyBoB,QAAQ,SAAUZ,GACzC,IAAIa,EAAavB,SAASwB,cAAc,OACxCD,EAAWE,YAAcf,EAAQgB,IACjCH,EAAWI,UAAUC,IAAI,gBACzBR,EAAQS,YAAYN,KAEtB3B,yBAAyB0B,QAAQ,SAAUL,GACzC,IAAIa,EAAa9B,SAASwB,cAAc,OACxCM,EAAWL,YAAcR,EAAQS,IACjCI,EAAWH,UAAUC,IAAI,gBACzBR,EAAQS,YAAYC,KAxZxB9B,SAASC,eAAe,SAAS8B,iBAAiB,QAAS,WACvB,IAA9BpC,gBAAgBqC,SAClB5C,YAAA,EACAY,SAASC,eAAe,cAAcwB,YAAc,UAAYrC,eAKlEY,SAAAC,eAAA,UAAA8B,iBAAA,QAAA,WACA,IAAIE,EAAiBjC,SAASkC,cAAc,iCAMxCC,EAAad,UAAYG,GAGtB,IAAAW,EAAgBzB,SAAhBc,cAAgCd,SACpC0B,EAFHC,KAAA,OAGAF,EAAcG,MAAWpC,yBAFtBb,IAAI,SAACqB,GAAD,MAAA,GAAA6B,OAAgB7B,EAAQgB,IAAxB,MAAAa,OAAgC7B,EAAQE,QAG/CqB,KAAAA,MADAE,EAAcG,UAAW,EAIrBE,EAAaX,YAAYL,GAGtB,IAAAgB,EAAgBvB,SAAhBO,cAAgCP,SACpCmB,EAFHC,KAAA,OAGAG,EAAcF,MAAW1C,yBAFtBP,IAAI,SAAC4B,GAAD,MAAA,GAAAsB,OAAgBtB,EAAQS,IAAxB,MAAAa,OAAgCtB,EAAQL,QAG/CqB,KAAAA,MADAO,EAAcF,UAAW,EAIzBpC,EAAAA,YAAyBoB,GAInBpB,yBAAyBuC,QAAMC,SAAAA,GAE/B,IAAAC,EAAyBxD,OAAAyD,QAAqB,SAAAF,GAC1C,IAAEhC,EADwCmC,KAAAJ,MAAAC,EAAAI,WAAAC,QAAA,KAAA,MAE5C9B,EAAsB4B,KAACG,MAFqBN,EAAAO,UAAAF,QAAA,KAAA,MAArB,OAAAG,EAAA7D,IAAA,SAAAqB,EAAAsC,GAAA,MAAA,CAAzB9B,GAAAR,EAOAO,QAAAkC,EAACC,GACCA,MAAAA,OAaR3C,OAdM,SAAC2C,GAAD,OAeNxD,EAAyB0B,KAAQ+B,EAACC,OACOC,MAAnCC,EAAcF,MAAeG,UAEVH,MADnBI,EACShB,MAAXe,YAEEE,EAAsBjB,MAAGvD,WAClB0B,WAAC6B,MACuB,OAA3BQ,EAAqBT,MAAMC,YACgBK,OAA3CI,EAAqBV,MAAMC,aAEN,QAAlBQ,EAAAR,MAAkBkB,UAAAR,EAAqBV,MAAAkB,UAAA,SAAAxD,cAArByD,KAAAC,MAAAnB,EAAAX,OAAA,KAL7BpC,yBAAA0B,QAAA,SAAAgC,GAsBAlD,IAGFsD,EAHuBI,EAAMH,KAAAA,UAAuB3B,EAAvB,GAxBX,KAAOsB,EAAgB1C,KAAK2C,UAAU,GAzD1DI,EAAAxE,OAwFO4C,QAAAA,SAAAA,GACK,IAAGmB,EAAbL,KAAAJ,MAAAC,EAAAI,WAAAC,QAAA,KAAA,MACcI,EAAAN,KAAiBJ,MAAAC,EAAAO,UAAAF,QAAA,KAAA,MAA/B,OAAAG,EAAA7D,IAAA,SAAAqB,EAAAsC,GAAA,MAAA,CAGY9B,GAAAR,EAAA,MAAAyC,EAAAH,GACDN,MAAAA,OAOAqB,OAEH,SAAAC,GAAA,OACMC,EAAc/C,KAAAwC,IACGQ,MAAzBC,EAAezB,MAAAe,UACiB,MAA9BO,EAAkBtB,MAAYe,YACxBnD,EAAeoC,MAAGwB,WAAQvD,WAA9B,MAEK,OAAAqD,EAAAtB,MAAA0B,YAGG,OAAAJ,EAActB,MAAd0B,aACU,QAAfC,EAAMC,MAASV,UACdzE,EAAAuD,MAAAkB,UAAA,SAOAxD,cAAO2D,KAASQ,MAAhBZ,EAAA3B,OAAA,KApCdhC,SAASC,eAAe,gBAAgBuE,MAAQpE,eA+CjCqE,OAAA1C,iBAAA,SAAA,WA3Cf,IAAI2C,EAASC,KAAKH,MA6CJ3E,IAAAA,UAAAA,SAAkB+E,GAChBT,IAAAA,YAAAA,KAEIU,EAAAA,UAAAA,qDAAmB,CACjBpF,QAAA,KACAC,MAAAL,KA1CtByF,MAAK,kEAAAvC,OA8CgEmC,EA9ChE,kBAAAnC,OA8CgEmC,EA9ChE,aAgDmBL,KAAA,SAAAN,GACEnD,OAAAA,EAAAA,SA3CvByD,KAAK,SAAUJ,GA0CoB3E,EAAAsF,QAAAX,EAAd,CAxClBE,cAAe,SAAUD,EAASa,GA4ChBA,EAAAC,GAAA,QAAK9E,WAAkC,IAAAI,EAASM,EAASG,WAAlBH,KACrCV,MAAAA,kEAAAA,OACewE,EADfxE,eAAAA,OACewE,EADfxE,KAAAA,OACeI,EADfJ,UACemE,KAAA,SAAfN,GAAe,OAAwBA,EAAAQ,SACxCF,KAHD,SAAAC,GAIEnF,OAAAmF,IAC+DQ,MAAA,kEAAAvC,OAChDmC,EADgD,cAAAnC,OAChDmC,EADgD,aAChDL,KAAA,SAAoBN,GACpC,OAAAA,EAAAQ,SACDpD,KAAAA,SAAAA,GAhCV,IAAI8D,EAAmB5E,eACrBC,EAgCO4E,aAED3E,GA9BJV,eAoCIR,IAAI8F,YAAJtF,eAhCRA,cAAgBP,EAAEsF,QAAQK,EAAkB,CAoCpCd,cAAIxB,SAAsBuB,EACvBtB,GACCmC,EAAI7B,GAAAA,CAGAC,MAAAA,WAIJ,IAAOD,EAAAgB,EAAkBvD,WAAAC,KAAqBwE,EAAAlB,EAAAvD,WAAAe,IAArB,GACrB3B,WAD0C0B,YAAA,QAAA2D,EAArBpF,SAAAC,eAAA,UAAAoF,QAAA,CAOzB,IAAA3E,EAAC0C,CACCA,KAAAA,EAjBN1B,IAAAwC,EAAAvD,WAAAe,KA6BazB,yBAA2BoF,KAAAA,SAAAA,GAAS,OAAAC,EAAA1E,OAAAG,KAO5BwE,yBAAWrF,yBAAAO,OAAA,SAAA6E,GAAA,OAAAA,EAAA1E,OAAAG,IAA5BgE,EAAAS,SAAA,CAAAD,UAAA,OANEvF,yBAAAyF,KAAiCJ,GACnCjG,EAAWoG,SAAS1B,CAALyB,UACb5C,UAMGxB,gBAgBJkD,IATJ1E,gBAAA+F,KArDC,SAACC,GAAD,OAuDUA,EAARC,cAAoCP,EAASO,cAO5CvB,CAOGhF,IAAIwG,EAAJ1G,OACDyD,QAAA,SAAAF,GA5DH,IAAIQ,EAAgBL,KAAKJ,MA8DvBtC,EAAgBb,WAAUwG,QAAAA,KAAAA,MAEtB3C,EAAkBN,KAAAJ,MACZiB,EAAAA,UAAYQ,QAAQvD,KAAR,MAOhB,OAAIsC,EAAYS,IAAUH,SAAAA,EAAVP,GAAUO,MAA1B,CAhENrC,GAAIR,EAqEIV,QAASC,EAAT+C,GAGAN,MAAIzB,OAMAR,OAAA,SAAA2C,GAAA,OANJA,EAAAlC,KAAAH,IAhE4B,MAAnCqC,EAAgBV,MAAMe,UA2EoB,MAA/BL,EAACxD,MAAAA,YAAiCwD,EAAIV,MAAazB,WAAjBJ,WAAgC,MAIrD,OAAfkE,EAAerC,MAAA0B,YACF,OAAXmB,EAAW7C,MAAA0B,aACT,QAFWhB,EAEXV,MAAAkB,UANNR,EAOOV,MAAAkB,UAAA,SAEyD5D,SAAAC,eAAiBgB,YAAjBoE,UAAArF,SAA9DC,eAAA,SAAAoF,SACAN,aAAMS,KAAS1B,MAAEyB,EAAWvD,OAAA,GAC7BhC,SAAAC,eAAA,cAAAwB,YArET,UAAYrC,YAsEJ+B,EAAAA,SAAa,CAAAoE,UAAA,QAGf5F,gBAAA8F,KAAAV,KArER3F,YAAcyE,KAAKC,MAsEPqB,EAAiBrF,OAAe,GAApCE,SAAAC,eAAA,cAAAwB,YAlEN,UAAYrC,cAIdY,SAASC,eAAe,YAAYoF,SAwE5BP,MAAInB,kEAAAA,OAEoBe,EAFpBf,cAAAA,OAEAe,EAFAf,KAAAA,OAEArD,EAFAqD,UASAU,KAAA,SAAOnB,GACL,OAAqBa,EAAAQ,SAKnB7B,KAAAA,SAAOA,GALY,IAArBoD,EAAAhF,eADFC,EAUDN,GA9ELN,eAmGIH,IAAAA,YAASC,eAQT8E,cAAezF,EAAAsF,QAAAkB,EAAA,CACbP,cAAW,SAAArB,EAAAa,GADbA,EAAAC,GAAA,QAAA,WAGAlF,IAAAA,EAAqBiF,EAArBpE,WAAAO,GAKSjB,EAAeyD,EAAAH,UAEzB,EA/GH,GAFJN,EAAAS,EAAAH,UAhBJ,GAlFN,GA2NDvD,SAAAC,eAAA,UA7NHoF,QAjBJ,CAXF,IAAApE,EAAA,CA6PDL,KA/PHkC,EAPJ,KATFG,EAyKwCvB,IAAKwD,aAAa1E,SAASuF,KA2G1BxF,SAAAA,GAAAA,OACGG,EAASC,WAAAC,OACPN,IAD5CK,WAAAe,KAtGyC9B,yBAAyB8F,KAAK,SAAAM,GAAG,OAAIA,EAAIpF,OAASK,EAAQL,QAmHnGhB,yBAAAA,yBAAAa,OAAA,SAAAuF,GAAA,OAAAA,EAAApF,OAAAK,EAAAL,OACsCa,EAAAA,SAAtC,CAAA8D,UAAA,OATmCvE,yBAAUyE,KACHxE,GAA1C8D,EAAAS,SAAA,CAKFD,UAAA,WAKqBpE,gBAUc,IANjCrB,gBAAA4F,KARF,SAAAO,GAAA,OAhGwCA,EAAeL,cA2G9Bb,EAAAa,cAGU,CAI/B,IAAAjC,EAAAxE,OAJFyD,QAAA,SAAAF,GAMiC,IAAUzB,EAAS4B,KAAAJ,MACVC,EAAxCI,WAAAC,QAAA,KAAA,MAEAI,EAAAN,KAAAJ,MACAC,EAAAO,UAAAF,QAAA,KAAA,MAvGoC,OAAOG,EAAc7D,IACnB,SAACqB,EAASsC,GAAV,MAAqB,CACnB9B,GACER,EACA,MACAyC,EAAcH,GAChBN,MAAOA,OAIZjC,OACC,SAACuD,GAAD,OACEA,EAAgB9C,KAAOwC,IAErB,MADDM,EAAgBtB,MAAMe,UAGnB,MADFO,EAAgBtB,MAAMe,YAEvBO,EAAgBtB,MAAM0B,WAAWvD,WAChC,MAGE,OADFmD,EAAgBtB,MAAM0B,YAGpB,OADFJ,EAAgBtB,MAAM0B,aAGtB,QADFJ,EAAgBtB,MAAMkB,UAEtBI,EAAgBtB,MAAMkB,UACpB,SAIN5D,SAASC,eAAe,SACrBoF,SAEHjG,aAAeyE,KAAKC,MAClBH,EAAuB3B,OAAS,GAElChC,SAASC,eAAe,cAAcwB,YACpC,UAAYrC,YACd2F,EAAMS,SAAS,CACbD,UAAW,QAEbzF,gBAAgB2F,KAAKV,KAErB3F,YAAcyE,KAAKC,MACjBH,EAAuB3B,OAAS,GAElChC,SAASC,eAAe,cAAcwB,YACpC,UAAYrC,mBAInBM,MAAML,cAMpBK,MAAML,YAIhBK,MAAML,SAiBfW,SAASC,eAAe,SAAS8B,iBAAiB,QAAS,WACzD3C,YAAc,EACdY,SAASC,eAAe,cAAcwB,YAAc,GACpD9B,gBAAgB2B,QAAQ,SAAUZ,GAChCA,EAAQ8E,SAAS,CACfD,UAAW,WAGf5F,gBAAkB","file":"scriptMap.min.js","sourcesContent":["\n    var map = L.map('map').setView([45.7, 3.15], 7);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n    }).addTo(map);\n\n    var communesData;\n    var ventes;\n    var totalVentes = 0;\n    var clickedCommunes = [];\n    var clickedSections = []; // Ajout du tableau pour stocker les sections cliquées\n    var historyDiv = document.getElementById('Historique'); // Ajout de la div Historique\n    var selectedCommunesCodinsee = [];\n    var selectedSectionsCodinsee = [];\n    var communesLayer;\n    var sectionsLayer;\n    var totalSecteur = 0;\n    var select = document.getElementById('region');\n\n    document.getElementById('Count').addEventListener('click', function () {\n      if (clickedCommunes.length === 0) {\n        totalVentes = 0;\n        document.getElementById('NumberSell').textContent = 'Total: ' + totalVentes;\n      }\n    });\n\n    document.getElementById('Export').addEventListener('click', function () {\n      // Récupérer le conteneur d'input\n      var inputContainer = document.querySelector('.pop-up-form .input-container');\n\n      // Supprimer les anciens inputs\n      inputContainer.innerHTML = '';\n\n      // Créer un nouvel input pour les communes sélectionnées\n      var communesInput = document.createElement('input');\n      communesInput.type = 'text';\n      communesInput.value = selectedCommunesCodinsee\n        .map((commune) => `${commune.nom}: ${commune.code}`)\n        .join(', ');\n      communesInput.readOnly = true; // Rendre l'input en lecture seule\n      inputContainer.appendChild(communesInput);\n\n      // Créer un nouvel input pour les sections sélectionnées\n      var sectionsInput = document.createElement('input');\n      sectionsInput.type = 'text';\n      sectionsInput.value = selectedSectionsCodinsee\n        .map((section) => `${section.nom}: ${section.code}`)\n        .join(', ');\n      sectionsInput.readOnly = true; // Rendre l'input en lecture seule\n      inputContainer.appendChild(sectionsInput);\n\n      // Calculate totalVentes for selected communes\n      selectedCommunesCodinsee.forEach((selectedCommune) => {\n        var ventesDansCetteCommune = ventes\n          .flatMap((vente) => {\n            var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, '\"'));\n            var venteSections = JSON.parse(vente.l_section.replace(/'/g, '\"'));\n\n            return venteCommunes.map((commune, index) => ({\n              id: commune,\n              section: venteSections[index],\n              vente: vente,\n            }));\n          })\n          .filter(\n            (venteParCommune) =>\n              venteParCommune.id === selectedCommune.code &&\n              (venteParCommune.vente.idnatmut === '1' ||\n                venteParCommune.vente.idnatmut === '4') &&\n              (venteParCommune.vente.codtypbien.startsWith('1') &&\n                venteParCommune.vente.codtypbien !== '14' ||\n                venteParCommune.vente.codtypbien === '21') &&\n              venteParCommune.vente.anneemut >= '2017' &&\n              venteParCommune.vente.anneemut <= '2020'\n          );\n\n        totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n      });\n\n      // Calculate totalVentes for selected sections\n      selectedSectionsCodinsee.forEach((selectedSection) => {\n        var sectionCode = selectedSection.code.substring(0, 5);\n        var sectionID =\n          sectionCode + '; ' + selectedSection.code.substring(7);\n\n        var ventesDansCetteSection = ventes\n          .flatMap((vente) => {\n            var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, '\"'));\n            var venteSections = JSON.parse(vente.l_section.replace(/'/g, '\"'));\n\n            return venteCommunes.map((commune, index) => ({\n              id: commune + '000' + venteSections[index],\n              vente: vente,\n            }));\n          })\n          .filter(\n            (venteParSection) =>\n              venteParSection.id === sectionID &&\n              (venteParSection.vente.idnatmut === '1' ||\n                venteParSection.vente.idnatmut === '4') &&\n              (venteParSection.vente.codtypbien.startsWith('1') &&\n                venteParSection.vente.codtypbien !== '14' ||\n                venteParSection.vente.codtypbien === '21') &&\n              venteParSection.vente.anneemut >= '2017' &&\n              venteParSection.vente.anneemut <= '2020'\n          );\n\n        totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n      });\n\n      // Display the total sales\n      document.getElementById('TotalSecteur').value = totalSecteur;\n    });\n\n    select.addEventListener('change', function () {\n      var region = this.value;\n      map.eachLayer(function (layer) {\n        map.removeLayer(layer);\n      });\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 19,\n      }).addTo(map);\n\n      fetch(\n        `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`\n      )\n        .then(function (response) {\n          return response.json();\n        })\n        .then(function (departements) {\n          L.geoJSON(departements, {\n            onEachFeature: function (feature, layer) {\n              layer.on('click', function () {\n                var departementCode = feature.properties.code;\n\n                fetch(\n                  `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`\n                )\n                  .then((response) => response.json())\n                  .then((data) => {\n                    ventes = data;\n                  });\n\n                fetch(\n                  `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`\n                )\n                  .then(function (response) {\n                    return response.json();\n                  })\n                  .then(function (communes) {\n                    communesData = communes;\n                    var filteredCommunes = filterCommunes(\n                      departementCode,\n                      communes\n                    );\n\n                    if (communesLayer) {\n                      map.removeLayer(communesLayer);\n                    }\n\n                    communesLayer = L.geoJSON(filteredCommunes, {\n                      onEachFeature: function (feature, layer) {\n                        layer.on({\n                          click: function () {\n                            var communeCode = feature.properties.code;\n                            var communeNom = feature.properties.nom;\n                            historyDiv.textContent = 'Nom: ' + communeNom;\n\n                            // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                            if (document.getElementById('Create').checked) {\n                              // Créer un objet avec le code et le nom de la commune\n                              var commune = {\n                                code: communeCode,\n                                nom: feature.properties.nom, // Assumer que 'nom' est la propriété contenant le nom de la commune\n                              };\n                              if (!selectedCommunesCodinsee.some(comm => comm.code === communeCode)) {\n                                selectedCommunesCodinsee.push(commune);\n                                layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                              } else {\n                                // Si la commune est déjà sélectionnée, la supprimer\n                                selectedCommunesCodinsee = selectedCommunesCodinsee.filter(comm => comm.code !== communeCode);\n                                layer.setStyle({ fillColor: '' }); // Rétablir la couleur originale de la commune\n                              }\n                              updateComsecT();\n                            }\n\n                            // Vérifier si la commune a déjà été cliquée\n                            var alreadyClicked = clickedCommunes.some(\n                              (clickedCommune) =>\n                                clickedCommune._leaflet_id === layer._leaflet_id\n                            );\n\n                            if (alreadyClicked) {\n                              return; // Si la commune a déjà été cliquée, ne rien faire\n                            }\n\n                            var ventesDansCetteCommune = ventes\n                              .flatMap((vente) => {\n                                var venteCommunes = JSON.parse(\n                                  vente.l_codinsee.replace(/'/g, '\"')\n                                );\n                                var venteSections = JSON.parse(\n                                  vente.l_section.replace(/'/g, '\"')\n                                );\n\n                                return venteCommunes.map((commune, index) => ({\n                                  id: commune,\n                                  section: venteSections[index],\n                                  vente: vente,\n                                }));\n                              })\n                              .filter(\n                                (venteParCommune) =>\n                                  venteParCommune.id === communeCode &&\n                                  (venteParCommune.vente.idnatmut === '1' ||\n                                    venteParCommune.vente.idnatmut === '4') &&\n                                  (venteParCommune.vente.codtypbien.startsWith(\n                                    '1'\n                                  ) &&\n                                    venteParCommune.vente.codtypbien !== '14' ||\n                                    venteParCommune.vente.codtypbien === '21') &&\n                                  venteParCommune.vente.anneemut >= '2017' &&\n                                  venteParCommune.vente.anneemut <= '2020'\n                              );\n\n                            if (document.getElementById('Communes').checked) {\n                              if (document.getElementById('Count').checked) {\n                                totalVentes += Math.round(\n                                  ventesDansCetteCommune.length / 4\n                                );\n                                document.getElementById('NumberSell').textContent =\n                                  'Total: ' + totalVentes;\n                                layer.setStyle({ fillColor: 'red' });\n                                clickedCommunes.push(layer);\n                              } else {\n                                totalVentes = Math.round(\n                                  ventesDansCetteCommune.length / 4\n                                );\n                                document.getElementById('NumberSell').textContent =\n                                  'Total: ' + totalVentes;\n                              }\n                            }\n\n                            if (document.getElementById('Sections').checked) {\n                              fetch(\n                                `https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`\n                              )\n                                .then(function (response) {\n                                  return response.json();\n                                })\n                                .then(function (sections) {\n                                  var filteredSections = filterSections(\n                                    communeCode,\n                                    sections\n                                  );\n\n                                  if (sectionsLayer) {\n                                    map.removeLayer(sectionsLayer);\n                                  }\n\n                                  sectionsLayer = L.geoJSON(filteredSections, {\n                                    onEachFeature: function (feature, layer) {\n                                      layer.on('click', function () {\n                                        var sectionID = feature.properties.id;\n\n                                        // Extraire le l_codinsee et l_section de l'ID de la section\n                                        var l_codinsee = sectionID.substring(\n                                          0,\n                                          5\n                                        );\n                                        var l_section = sectionID.substring(\n                                          8\n                                        );\n\n                                        if (\n                                          document.getElementById('Create')\n                                            .checked\n                                        ) {\n                                          var section = {\n                                            code:\n                                              l_codinsee +\n                                              '; ' +\n                                              l_section,\n                                            nom: communesData.features.find(\n                                              (commune) =>\n                                                commune.properties.code ===\n                                                l_codinsee\n                                            ).properties.nom,\n                                          };\n                                          if (!selectedSectionsCodinsee.some(sec => sec.code === section.code)) {\n                                            selectedSectionsCodinsee.push(\n                                              section\n                                            );\n                                            layer.setStyle({\n                                              fillColor: 'green',\n                                            }); // Change la couleur de la section sélectionnée\n                                          } else {\n                                            // Si la section est déjà sélectionnée, la supprimer\n                                            selectedSectionsCodinsee = selectedSectionsCodinsee.filter(sec => sec.code !== section.code);\n                                            layer.setStyle({ fillColor: '' }); // Rétablir la couleur originale de la section\n                                          }\n                                          updateComsecT();\n                                        }\n\n                                        // Vérifier si la section a déjà été cliquée\n                                        var alreadyClicked = clickedSections.some(\n                                          (clickedSection) =>\n                                            clickedSection._leaflet_id ===\n                                            layer._leaflet_id\n                                        );\n\n                                        if (alreadyClicked) {\n                                          return; // Si la section a déjà été cliquée, ne rien faire\n                                        }\n\n                                        var ventesDansCetteSection = ventes\n                                          .flatMap((vente) => {\n                                            var venteCommunes = JSON.parse(\n                                              vente.l_codinsee.replace(/'/g, '\"')\n                                            );\n                                            var venteSections = JSON.parse(\n                                              vente.l_section.replace(/'/g, '\"')\n                                            );\n\n                                            return venteCommunes.map(\n                                              (commune, index) => ({\n                                                id:\n                                                  commune +\n                                                  '000' +\n                                                  venteSections[index],\n                                                vente: vente,\n                                              })\n                                            );\n                                          })\n                                          .filter(\n                                            (venteParSection) =>\n                                              venteParSection.id === sectionID &&\n                                              (venteParSection.vente.idnatmut ===\n                                                '1' ||\n                                                venteParSection.vente.idnatmut ===\n                                                  '4') &&\n                                              (venteParSection.vente.codtypbien.startsWith(\n                                                '1'\n                                              ) &&\n                                                venteParSection.vente.codtypbien !==\n                                                  '14' ||\n                                                venteParSection.vente.codtypbien ===\n                                                  '21') &&\n                                              venteParSection.vente.anneemut >=\n                                                '2017' &&\n                                              venteParSection.vente.anneemut <=\n                                                '2020'\n                                          );\n\n                                        if (\n                                          document.getElementById('Count')\n                                            .checked\n                                        ) {\n                                          totalVentes += Math.round(\n                                            ventesDansCetteSection.length / 4\n                                          );\n                                          document.getElementById('NumberSell').textContent =\n                                            'Total: ' + totalVentes;\n                                          layer.setStyle({\n                                            fillColor: 'red',\n                                          });\n                                          clickedSections.push(layer);\n                                        } else {\n                                          totalVentes = Math.round(\n                                            ventesDansCetteSection.length / 4\n                                          );\n                                          document.getElementById('NumberSell').textContent =\n                                            'Total: ' + totalVentes;\n                                        }\n                                      });\n                                    },\n                                  }).addTo(map);\n                                });\n                            }\n                          },\n                        });\n                      },\n                    }).addTo(map);\n                  });\n              });\n            },\n          }).addTo(map);\n        });\n    });\n\n    function filterCommunes(departementCode, communes) {\n      return communes.features.filter(function (commune) {\n        return commune.properties.code.startsWith(departementCode);\n      });\n    }\n\n    function filterSections(communeCode, sections) {\n      return sections.features.filter(function (section) {\n        return section.properties.id.startsWith(communeCode);\n      });\n    }\n\n    // Reset totalVentes and clickedCommunes when reset button is clicked\n    document.getElementById('reset').addEventListener('click', function () {\n      totalVentes = 0;\n      document.getElementById('NumberSell').textContent = '';\n      clickedCommunes.forEach(function (commune) {\n        commune.setStyle({\n          fillColor: 'blue',\n        }); // Replace 'blue' with your original color\n      });\n      clickedCommunes = [];\n    });\n\n    function updateComsecT() {\n      var comsecT = document.getElementById('comsecT');\n      comsecT.innerHTML = '';\n      selectedCommunesCodinsee.forEach(function (commune) {\n        var communeDiv = document.createElement('div');\n        communeDiv.textContent = commune.nom;\n        communeDiv.classList.add('commune-item');\n        comsecT.appendChild(communeDiv);\n      });\n      selectedSectionsCodinsee.forEach(function (section) {\n        var sectionDiv = document.createElement('div');\n        sectionDiv.textContent = section.nom;\n        sectionDiv.classList.add('section-item');\n        comsecT.appendChild(sectionDiv);\n      });\n    }\n"]}