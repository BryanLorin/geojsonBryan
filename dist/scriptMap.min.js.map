{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","totalSecteur","document","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","comsecTDiv","firstChild","forEach","communeInput","type","nom","value","console","log","sectionInput","length","textContent","addEventListener","inputContainer","querySelector","innerHTML","communesInput","concat","join","readOnly","appendChild","sectionsInput","createElement","selectedCommune","flatMap","ventesDansCetteCommune","parse","replace","vente","venteCommunes","JSON","l_codinsee","index","venteParCommune","idnatmut","anneemut","Math","round","ventesDansCetteSection","sectionID","substring","venteSections","venteParSection","codtypbien","geoJSON","departements","onEachFeature","layer","removeLayer","then","fetch","region","response","json","filteredCommunes","feature","click","data","on","clickedCommune","communeNom","checked","push","fillColor","some","_leaflet_id","setStyle","l_section","sectionsLayer","filteredSections","alreadyClicked","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\nvar comsecTDiv = document.getElementById('comsecT');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  // Supprimez tous les enfants de comsecTDiv\n  while(comsecTDiv.firstChild){\n    comsecTDiv.removeChild(comsecTDiv.firstChild);\n  }\n\n  // Pour chaque commune sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  selectedCommunesCodinsee.forEach(commune => {\n    var communeInput = document.createElement('input');\n    communeInput.type = 'text';\n    communeInput.value = `${commune.nom}: ${commune.code}`;\n    communeInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(communeInput);\n  });\n\n  // Pour chaque section sélectionnée, créez un nouvel élément input et ajoutez-le à comsecTDiv\n  console.log(selectedSectionsCodinsee);\nselectedSectionsCodinsee.forEach(section => {\n    var sectionInput = document.createElement('input');\n    sectionInput.type = 'text';\n    sectionInput.value = `Section ${section.code}: ${section.nom}`;\n    console.log(sectionInput);\n    sectionInput.readOnly = true;  // Rendre l'input en lecture seule\n    comsecTDiv.appendChild(sectionInput);\n});\n\n  // Votre code existant\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});"]}