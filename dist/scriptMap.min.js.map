{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","filterCommunes","departementCode","communes","features","filter","commune","properties","code","startsWith","filterSections","communeCode","sections","section","id","document","select","addEventListener","textContent","comsecTDiv","innerHTML","sectionsInput","createElement","value","nom","join","readOnly","appendChild","selectedSection","length","sectionInfo","concat","inputContainer","querySelector","communesInput","type","ventesDansCetteCommune","flatMap","vente","JSON","forEach","l_codinsee","selectedCommune","parse","replace","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","totalSecteur","Math","round","sectionCode","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","removeLayer","fillColor","on","click","alreadyClicked","communeNom","clickedCommune","_leaflet_id","checked","push","setStyle","some","l_section","filteredSections","sectionsLayer","clickedSection"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar select = document.getElementById('region');\n\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n\n  // Récupérer la div avec l'id \"comsecT\"\n  var comsecTDiv = document.getElementById('comsecT');\n\n  // Supprimer les anciens inputs\n  comsecTDiv.innerHTML = '';\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => section.nom).join(', '); // Afficher uniquement le nom des sections\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  comsecTDiv.appendChild(sectionsInput);\n\n  // Afficher les informations de la première section sélectionnée dans la div \"comsecT\"\n  if (selectedSectionsCodinsee.length > 0) {\n    var selectedSection = selectedSectionsCodinsee[0];\n    var sectionInfo = document.createElement('p');\n    sectionInfo.textContent = `Informations de la section sélectionnée : Nom: ${selectedSection.nom}, Code: ${selectedSection.code}`;\n    comsecTDiv.appendChild(sectionInfo);\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                          } else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                    } else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\ndocument.getElementById(\"reset\").addEventListener('click', function () {\n  totalVentes = 0;\n  document.getElementById(\"NumberSell\").textContent = \"\";\n  clickedCommunes.forEach(function (commune) {\n    commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n  });\n  clickedCommunes = [];\n});\n"]}