{"version":3,"sources":["scriptMap.js"],"names":["addTo","communesData","map","L","setView","tileLayer","maxZoom","communesLayer","selectedCommunesCodinsee","ventes","totalVentes","clickedCommunes","clickedSections","getElementById","historyDiv","selectedSectionsCodinsee","sectionsLayer","filterCommunes","departementCode","communes","document","filter","textContent","code","startsWith","fillColor","communeCode","sections","features","section","properties","id","totalVentes2","addEventListener","select","inputContainer","querySelector","innerHTML","communesInput","createElement","value","commune","concat","nom","join","readOnly","sectionsInput","type","appendChild","ventesDansCetteCommune","flatMap","vente","JSON","forEach","l_codinsee","selectedCommune","parse","replace","venteSections","index","venteParCommune","idnatmut","codtypbien","anneemut","totalSecteur","Math","round","length","sectionCode","selectedSection","sectionID","ventesDansCetteSection","substring","venteCommunes","venteParSection","then","departements","geoJSON","onEachFeature","layer","fetch","region","response","filteredCommunes","feature","data","json","removeLayer","on","click","alreadyClicked","communeNom","clickedCommune","_leaflet_id","checked","push","setStyle","some","l_section","filteredSections","filterSections","clickedSection","find"],"mappings":"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","file":"scriptMap.min.js","sourcesContent":["var map = L.map('map').setView([45.7, 3.15], 7);\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  maxZoom: 19,\n}).addTo(map);\nvar communesData;\nvar ventes;\nvar totalVentes = 0;\nvar clickedCommunes = [];\nvar clickedSections = [];  // Ajout du tableau pour stocker les sections cliquées\nvar historyDiv = document.getElementById('Historique');  // Ajout de la div Historique\nvar selectedCommunesCodinsee = [];\nvar selectedSectionsCodinsee = [];\nvar communesLayer;\nvar sectionsLayer;\nvar totalSecteur = 0;\nvar totalVentes2 = 0;\nvar select = document.getElementById('region');\n\ndocument.getElementById('Count').addEventListener('click', function() {\n  if (clickedCommunes.length === 0) {\n    totalVentes = 0;\n    document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n  }\n});\n  \ndocument.getElementById('Export').addEventListener('click', function() {\n  // Récupérer le conteneur d'input\n  var inputContainer = document.querySelector('.pop-up-form .input-container');\n  \n  // Supprimer les anciens inputs\n  inputContainer.innerHTML = '';\n\n  // Créer un nouvel input pour les communes sélectionnées\n  var communesInput = document.createElement('input');\n  communesInput.type = 'text';\n  communesInput.value = selectedCommunesCodinsee.map(commune => `${commune.nom}: ${commune.code}`).join(', ');\n  communesInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(communesInput);\n\n  // Créer un nouvel input pour les sections sélectionnées\n  var sectionsInput = document.createElement('input');\n  sectionsInput.type = 'text';\n  sectionsInput.value = selectedSectionsCodinsee.map(section => `${section.nom}: ${section.code}`).join(', ');\n  sectionsInput.readOnly = true;  // Rendre l'input en lecture seule\n  inputContainer.appendChild(sectionsInput);\n\n\n  // Calculate totalVentes for selected communes\n  selectedCommunesCodinsee.forEach(selectedCommune => {\n    var ventesDansCetteCommune = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune,\n        section: venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParCommune => \n      venteParCommune.id === selectedCommune.code && \n      (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n      (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n      venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteCommune.length / 4);\n  });\n\n  // Calculate totalVentes for selected sections\n  selectedSectionsCodinsee.forEach(selectedSection => {\n    var sectionCode = selectedSection.code.substring(0, 5);\n    var sectionID = sectionCode + '; ' + selectedSection.code.substring(7);\n\n    var ventesDansCetteSection = ventes.flatMap(vente => {\n      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n\n      return venteCommunes.map((commune, index) => ({\n        id: commune + '000' + venteSections[index],\n        vente: vente\n      }));\n    }).filter(venteParSection => \n      venteParSection.id === sectionID && \n      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n    );\n\n    totalSecteur += Math.round(ventesDansCetteSection.length / 4);\n  });\n\n  // Display the total sales\n  document.getElementById(\"TotalSecteur\").value = totalSecteur;\n});\n\n\n\nselect.addEventListener('change', function () {\n  var region = this.value;\n  map.eachLayer(function (layer) {\n    map.removeLayer(layer);\n  });\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 19,\n  }).addTo(map);\n\n  fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/departements-${region}.geojson`)\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (departements) {\n      L.geoJSON(departements, {\n        onEachFeature: function (feature, layer) {\n          layer.on('click', function () {\n            var departementCode = feature.properties.code;\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/mutations-${region}-${departementCode}.json`)\n              .then(response => response.json())\n              .then(data => {\n                ventes = data;\n              });\n\n            fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/communes-${region}.geojson`)\n              .then(function (response) {\n                return response.json();\n              })\n              .then(function (communes) {\n                communesData = communes;\n                var filteredCommunes = filterCommunes(departementCode, communes);\n\n                if (communesLayer) {\n                  map.removeLayer(communesLayer);\n                }\n\n                communesLayer = L.geoJSON(filteredCommunes, {\n                  onEachFeature: function (feature, layer) {\n                    layer.on({\n                      click: function () {\n                       \n\t\t\t\t\t\tvar communeCode = feature.properties.code;\n        \t\t\t\tvar communeNom = feature.properties.nom;\n        \t\t\t\thistoryDiv.textContent = 'Nom: ' + communeNom ;\n       \n                        // Ajouter à la liste des communes sélectionnées si 'Create' est coché\n                        if(document.getElementById(\"Create\").checked) {\n                          // Créer un objet avec le code et le nom de la commune\n                          var commune = {\n                            code: communeCode,\n                            nom: feature.properties.nom  // Assumer que 'nom' est la propriété contenant le nom de la commune\n                          };\n                          selectedCommunesCodinsee.push(commune);\n                          layer.setStyle({ fillColor: 'blue' }); // Change la couleur de la commune sélectionnée\n                        }\n                      \n                        // Vérifier si la commune a déjà été cliquée\n                        var alreadyClicked = clickedCommunes.some(clickedCommune => \n                          clickedCommune._leaflet_id === layer._leaflet_id\n                        );\n\n                        if (alreadyClicked) {\n                          return;  // Si la commune a déjà été cliquée, ne rien faire\n                        }\n\n                        var ventesDansCetteCommune = ventes.flatMap(vente => {\n                          var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                          var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                          \n                          return venteCommunes.map((commune, index) => ({\n                            id: commune,\n                            section: venteSections[index],\n                            vente: vente\n                          }));\n                        }).filter(venteParCommune => \n                          venteParCommune.id === communeCode && \n                          (venteParCommune.vente.idnatmut === \"1\" || venteParCommune.vente.idnatmut === \"4\") && \n                          (venteParCommune.vente.codtypbien.startsWith('1') && venteParCommune.vente.codtypbien !== '14' || venteParCommune.vente.codtypbien === '21') && \n                          venteParCommune.vente.anneemut >= \"2017\" && venteParCommune.vente.anneemut <= \"2020\"\n                        );\n\n                        if (document.getElementById(\"Communes\").checked) {\n                          if (document.getElementById(\"Count\").checked) {\n                            totalVentes += Math.round(ventesDansCetteCommune.length / 4);\n                            totalVentes2 += Math.round(ventesDansCetteCommune.length / 4);  // Ajout de cette ligne\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            document.getElementById(\"NumberSell2\").textContent = \"Total: \" + totalVentes2;  // Ajout de cette ligne\n                            layer.setStyle({ fillColor: 'red' });\n                            clickedCommunes.push(layer);\n                        }else {\n                            totalVentes = Math.round(ventesDansCetteCommune.length / 4);\n                            totalVentes2 += Math.round(ventesDansCetteCommune.length / 4);\n                            document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                            document.getElementById(\"NumberSell2\").textContent = \"Total: \" + totalVentes2;\n                          }\n                        }\n\n                        if (document.getElementById(\"Sections\").checked) {\n                          fetch(`https://raw.githubusercontent.com/BryanLorin/geojsonBryan/main/${region}/sections-${region}-${departementCode}.json`)\n                            .then(function (response) {\n                              return response.json();\n                            })\n                            .then(function (sections) {\n                              var filteredSections = filterSections(communeCode, sections);\n\n                              if (sectionsLayer) {\n                                map.removeLayer(sectionsLayer);\n                              }\n\n                             sectionsLayer = L.geoJSON(filteredSections, {\n                              onEachFeature: function (feature, layer) {\n                                layer.on('click', function () {\n                                  var sectionID = feature.properties.id;\n\n                                  // Extraire le l_codinsee et l_section de l'ID de la section\n                                  var l_codinsee = sectionID.substring(0, 5);\n                                  var l_section = sectionID.substring(8);\n                          \n\n                                  if(document.getElementById(\"Create\").checked) {\n                                  var section = {\n                                    code: l_codinsee + '; ' + l_section,\n                                    nom: communesData.features.find(commune => commune.properties.code === l_codinsee).properties.nom\n                                  };\n                                  selectedSectionsCodinsee.push(section);\n                                  layer.setStyle({ fillColor: 'green' }); // Change la couleur de la section sélectionnée\n                                }\n\n\n                                  // Vérifier si la section a déjà été cliquée\n                                  var alreadyClicked = clickedSections.some(clickedSection => \n                                    clickedSection._leaflet_id === layer._leaflet_id\n                                  );\n\n                                  if (alreadyClicked) {\n                                    return;  // Si la section a déjà été cliquée, ne rien faire\n                                  }\n\n\n                                    var ventesDansCetteSection = ventes.flatMap(vente => {\n                                      var venteCommunes = JSON.parse(vente.l_codinsee.replace(/'/g, \"\\\"\"));\n                                      var venteSections = JSON.parse(vente.l_section.replace(/'/g, \"\\\"\"));\n                                      \n                                      return venteCommunes.map((commune, index) => ({\n                                        id: commune + '000' + venteSections[index],\n                                        vente: vente\n                                      }));\n                                    }).filter(venteParSection => \n                                      venteParSection.id === sectionID && \n                                      (venteParSection.vente.idnatmut === \"1\" || venteParSection.vente.idnatmut === \"4\") && \n                                      (venteParSection.vente.codtypbien.startsWith('1') && venteParSection.vente.codtypbien !== '14' || venteParSection.vente.codtypbien === '21') && \n                                      venteParSection.vente.anneemut >= \"2017\" && venteParSection.vente.anneemut <= \"2020\"\n                                    );\n\n                                    if (document.getElementById(\"Count\").checked) {\n                                      totalVentes += Math.round(ventesDansCetteSection.length / 4);\n                                      totalVentes2 += Math.round(ventesDansCetteSection.length / 4);  // Ajout de cette ligne\n                                      document.getElementById(\"NumberSell\").textContent = \"Total: \" + totalVentes;\n                                      document.getElementById(\"NumberSell2\").textContent = \"Total: \" + totalVentes2;  // Ajout de cette ligne\n                                      layer.setStyle({ fillColor: 'red' });\n                                      clickedSections.push(layer);\n                                  }\n                                   else {\n                                      totalVentes = Math.round(ventesDansCetteSection.length / 4);\n                                      totalVentes2 = Math.round(ventesDansCetteSection.length / 4);\n                                      document.getElementById(\"NumberSell2\").textContent = \"Total: \" + totalVentes2;\n                                    }\n                                  });\n                                },\n                              }).addTo(map);\n                            });\n                        }\n                      },\n                     \n                    });\n                  },\n                }).addTo(map);\n              });\n          });\n        },\n      }).addTo(map);\n    });\n});\n\nfunction filterCommunes(departementCode, communes) {\n  return communes.features.filter(function (commune) {\n    return commune.properties.code.startsWith(departementCode);\n  });\n}\n\nfunction filterSections(communeCode, sections) {\n  return sections.features.filter(function (section) {\n    return section.properties.id.startsWith(communeCode);\n  });\n}\n  // Reset totalVentes and clickedCommunes when reset button is clicked\n  document.getElementById(\"reset\").addEventListener('click', function () {\n    totalVentes = 0;\n    totalVentes2 = 0;  // Ajout de cette ligne\n    document.getElementById(\"NumberSell\").textContent = \"\";\n    document.getElementById(\"NumberSell2\").textContent = \"\";  // Ajout de cette ligne\n    clickedCommunes.forEach(function (commune) {\n        commune.setStyle({ fillColor: 'blue' });  // Replace 'blue' with your original color\n    });\n    clickedCommunes = [];\n});\n\n"]}